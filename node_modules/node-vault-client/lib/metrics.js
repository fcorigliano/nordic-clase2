"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const internal_1 = __importDefault(require("frontend-statsd/internal"));
const vaultError_1 = __importDefault(require("./services/piiService/vaultError"));
// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
const { version } = require('../package.json');
const logAPICallToDatadog = (params) => {
    const { startTime, operation, error } = params;
    const elapsedTime = Date.now() - startTime;
    let errorCode;
    if (error) {
        errorCode = error.response?.status?.toString();
        if (error instanceof vaultError_1.default) {
            errorCode = error.extensions.code;
        }
    }
    internal_1.default.histogram('kyc.vault.client.request.time', elapsedTime, {
        operation,
        technology: 'node',
        sdk_version: version,
        operation_type: 'read',
        entity: 'user',
        error: String(!!error),
        ...!!error && { error_code: errorCode || 'transport_error' }, // Only if an error ocurred. If response has no status, then a transport error ocurred (timeout)
    });
};
exports.default = logAPICallToDatadog;
