import type { GetUserDataParams, GetUserDataWithUserIds, MultiGetResponse } from './types';
import type { PIIClientConfig } from './services/piiService/types';
export default class PIIClient {
    #private;
    constructor(token: string, config?: Partial<PIIClientConfig>);
    /**
     * Get PII data for a user from Vault API
     *
     * @template T User's data structure expected from Vault API
     * @returns {Promise<T>} Promise which resolves to requested user data
     * @memberof PIIClient
     */
    getPIIUserData<T = Record<string, unknown>>(params: GetUserDataParams): Promise<T>;
    /**
     * Get PII data for many users from Vault API
     *
     * @template T Users' data structure expected from Vault API
     * @returns {Promise<T[]>} Promise which resolves to array containing each user's requested data
     * @memberof PIIClient
     */
    getPIIUsersData<T = Record<string, unknown>>(params: GetUserDataWithUserIds): Promise<MultiGetResponse<T>>;
    private getVaultData;
}
