/**
 * @jest-environment jsdom
 */

const { appendImage, triggerErrorEvent } = require('./utils');

const getEventListeners = () => require('../src');

const perfillNamespace = '_pfl';

describe('OnError feature', () => {
  afterEach(() => {
    const images = document.getElementsByTagName('IMG');

    for (let i = 0; i < images.length; i += 1) {
      const image = images[i];
      image.remove();
    }
    document.getElementsByTagName('html')[0].innerHTML = '';
  });

  test('Collect urls when images have error', () => {
    const imageList = ['a', 'b', 'c'];
    const getImgUrl = (x) => `http:/url/to/image/${x}`;

    const images = imageList.map((i) => appendImage({ src: getImgUrl(i), classes: [] }));
    getEventListeners();
    images.forEach(img => triggerErrorEvent(img));

    expect(window[perfillNamespace].length).toEqual(imageList.length);
    expect(window[perfillNamespace]).toMatchSnapshot();
  });
});

