/**
 * Module dependencies
 */
const StatsD = require('hot-shots');
const frontendConfig = require('frontend-config');
const logger = require('frontend-logger')('statsd-client');
const defaultConfig = require('./defaultConfig');

const projectConfig = frontendConfig.get('statsd') || {};

// The following sanitizes the project config to ignore what we won't use:
const {
  host, // We won't use this
  prefix, // We won't use this
  globalTags: projectTags,
  ...projectValidConfig
} = projectConfig;

// Next we'll merge the project config with the default one
const config = {
  ...defaultConfig,
  ...projectValidConfig,
  globalTags: {
    ...projectTags,
    ...defaultConfig.globalTags, // Has precedence over the project tags so they can't override them
  },
};

/**
 * Create a new StatsD client instance
 */
const statsDClient = new StatsD(config);

/**
 * Catch socket errors so they don't go unhandled
 */
if (statsDClient.socket) {
  statsDClient.socket.on('error', (error) => {
    logger.error(`Error in StatsD.${config.host} socket: ${error.stack}`);
  });
}

/**
 * Expose datadog client instance
 */
module.exports = statsDClient;
