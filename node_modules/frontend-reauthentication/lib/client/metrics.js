"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const frontend_env_1 = require("frontend-env");
const statsd = require("frontend-statsd/internal");
// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
const { version } = require('../../package.json');
const logAPICallToDatadog = (params) => {
    const { startTime, operation, operationId, error, } = params;
    const elapsedTime = Date.now() - startTime;
    const metricName = operation === 'check'
        ? 'reauth.check.client.request.time'
        : 'reauth.validate.client.request.time';
    const tags = {
        application: frontend_env_1.APPLICATION || process.env.npm_package_name,
        scope: frontend_env_1.SCOPE || 'unknown',
        test_scope: frontend_env_1.FURY_IS_TEST_SCOPE || 'unknown',
        sdk_version: version,
        operation_id: operationId,
        error: String(!!error), // True or false, as string
    };
    if (params.operation === 'check') {
        tags.flow_type = params.flowType || 'other';
        tags.regulation = params.regulations?.[0] || 'unregulated';
    }
    if (error) {
        const errorCode = error.response?.status?.toString();
        tags.error_code = errorCode || 'transport_error'; // If response has no status, then a transport error ocurred (timeout)
    }
    statsd.histogram(metricName, elapsedTime, tags);
};
exports.default = logAPICallToDatadog;
