const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const Header = require('.');

const baseProps = {
  type: 'plus',
  siteId: 'MLA',
  logo: {
    url: 'https://www.mercadolibre.com.ar',
    label: 'Mercado Libre',
  },
  melilab: {},
  userMenu: {
    isUserLoggedIn: false,
  },
  navMenuSwitchId: 'navMenuSwitchId',
};

describe('Portal Inmobiliario Navigation', () => {
  describe('Header', () => {
    it('matches the default snapshot and returns plus header since type is plus', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="plus"
          siteId="MLA"
          navMenuSwitchId="nav-switch-id"
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderPlus');
    });

    it('matches the default snapshot and returns lite header since type is lite', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="lite"
          siteId="MLA"
          navMenuSwitchId="nav-switch-id"
          lite={{
            isDesktop: true,
            userLinks: {},
          }}
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderLite');
    });

    it('returns plus header since type could not be found and defaults to plus', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="non-existent-header-type"
          siteId="MLA"
          navMenuSwitchId="nav-switch-id"
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderPlus');
    });
  });
});
