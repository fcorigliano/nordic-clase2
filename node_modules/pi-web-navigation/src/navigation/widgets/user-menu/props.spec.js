const userMenuProps = require('./props');

const baseProps = {
  type: 'full',
  platform: {
    siteId: 'MLC',
    id: 'PI',
    domain: 'portalinmobiliario.com',
  },
  urls: {
    baseDomain: { link: 'https://www.portalinmobiliario.com' },
    mainDomain: { link: 'https://www.portalinmobiliario.com' },
    login: {
      link: 'https://www.mercadolibre.com/jms/mla/lgz/login',
      name: 'Ingresá',
    },
    changeNickName: {
      link: 'https://myaccount.portalinmobiliario.com/profile/changeNickName',
      name: 'Modificar Nombre',
    },
    sell: {
      link: 'https://www.portalinmobiliario.com/',
      name: 'Vender',
    },
    logout: {
      link: 'https://www.mercadolibre.com/jms/mla/lgz/logout',
      name: 'Salir',
    },
    credits: {
      link: 'https://www.portalinmobiliario.com/credits',
      name: 'Mercado Créditos',
    },
    purchases: {
      link: 'https://www.portalinmobiliario.com/compras',
      name: 'Compras',
    },
    home: { link: 'https://www.portalinmobiliario.com/', name: 'Inicio' },
    myAccount: {
      link: 'https://www.portalinmobiliario.com/my-account',
      name: 'Mi cuenta',
    },
    bookmarks: {
      link: 'https://www.portalinmobiliario.com/bookmarks',
      name: 'Favoritos',
    },
    syi: {
      link: 'https://www.portalinmobiliario.com/vender',
      name: 'Vender',
    },
    registration: {
      link: 'https://www.portalinmobiliario.com/registration',
      name: 'Creá tu cuenta',
    },
    listing: { link: 'https://www.portalinmobiliario.com/listing' },
    cpLocation: {
      link: 'https://www.portalinmobiliario.com/navigation/addresses-hub',
      name: 'Enviar a',
    },
    cart: { link: 'https://www.portalinmobiliario.com/gz/cart', name: 'Carrito' },
    jobs: {
      link: 'https://www.portalinmobiliario.com/jobs',
      name: 'Trabaja con nosotros',
    },
    loyalty: {
      link: 'https://www.portalinmobiliario.com/puntos',
      name: 'Mercado Puntos',
    },
    downloadAppLanding: {
      link: 'https://www.portalinmobiliario.com/download-app-landing',
      name: 'App Landing',
    },
    downloadAppStore: {
      link: 'https://www.portalinmobiliario.com/download-app-store',
      name: 'App Store',
    },
    help: { link: 'https://www.portalinmobiliario.com/ayuda', name: 'Ayuda' },
    helpMain: { link: 'https://www.portalinmobiliario.com/ayuda', name: 'Ayuda' },
    honeyPath: { link: 'https://hp.mercadolibre.com/', name: 'Mercado Libre' },
  },
  actualLocation: 'https://www.portalinmobiliario.com/',
  labels: {
    headTitle: 'Mercado Libre',
    companyName: 'Mercado Libre',
    copyrightSince: '1999',
    mobileAppsStore: {
      ios: 'https://itunes.apple.com/es/app/id463624852',
      android: 'https://play.google.com/store/apps/details?id=com.mercadolibre',
    },
  },
  cdn: { link: 'https://ml.mercadolibre.com' },
  configSchema: {
    mobileHeaderMenu: { guest: [['home']], logged: [['home']] },
    footer: {
      items: ['jobs', 'tyc', 'politics', 'helpMain'],
    },
    i18n: {
      inputLabel: 'Ingresá lo que quieras encontrar',
      placeholder: 'Buscar productos, marcas y más…',
      iconLabel: 'Buscar',
      searchInputLabel: 'Ingresá lo que quieras encontrar',
      searchPlaceholder: 'Buscar productos, marcas y más…',
      searchIconLabel: 'Buscar',
      searchPlaceholderMobile: 'Estoy buscando..',
    },
    headerMenu: [
      { link: 'cpLocation' },
      { link: 'help' },
    ],
  },
  device: { type: 'mobile', mobile: true, desktop: false, lowEnd: false, osName: 'android' },
  cartInfo: {
    badge_icon: { quantity: 0 },
    location: { type: 'address', value: '1014518121' },
  },
  features: {
    menuShippingLocation: {
      shippingMobileContext: 'cart',
      isShippingLocation: true,
    },
  },
  notificationsInfo: { count: 0 },
  cpInfo: {
    label: 'Enviar a Capital Federal',
    title: 'Enviar a',
  },
  exhibitorInfo: {
    permalink: 'https://www.portalinmobiliario.com/exhibitor',
    picture: 'https://www.portalinmobiliario.com/exhibitor.jpeg',
    title: 'Exhibitor',
  },
  overrides: {},
  navigationPIIData: {},
  browser: {
    support: {
      webp: true,
      prefetch: true,
      preconnect: true,
      pushNotifications: false,
      serviceWorkers: false,
      brotli: true,
      sameSite: true,
    },
    name: 'chrome',
    version: '75.0.3770',
    major: '75',
    minor: '0',
    patch: '3770',
    userAgent: 'Chrome 75.0.3770 / Mac OS X 10.13.6',
  },
};

baseProps.navigationUrls = baseProps.urls;

describe('Portal Inmobiliario Navigation', () => {
  describe('User Menu Widget Props', () => {
    it('returns the necessary props for the user menu widget, but it does not show since it is mobile', () => {
      const props = userMenuProps({
        ...baseProps,
        user: {
          email: 'test@test.com',
          nickname: '',
        },
      });

      expect(props.version).toEqual('2.0.4');
      expect(props.baseUrl).toEqual(baseProps.cdn.link);
      expect(props.show).toEqual(false);
      expect(props.domain).toEqual(baseProps.urls.mainDomain.link);
    });

    it('returns the necessary props for the user menu widget', () => {
      const props = userMenuProps({
        ...baseProps,
        device: { type: 'desktop', mobile: false, desktop: true, lowEnd: false, osName: 'android' },
        user: {
          email: 'test@test.com',
          nickname: '',
        },
      });

      expect(props.version).toEqual('2.0.4');
      expect(props.baseUrl).toEqual(baseProps.cdn.link);
      expect(props.show).toEqual(true);
      expect(props.domain).toEqual(baseProps.urls.mainDomain.link);
    });

    it('returns the necessary props for the user menu widget for lite', () => {
      const props = userMenuProps({
        ...baseProps,
        device: { type: 'desktop', mobile: false, desktop: true, lowEnd: false, osName: 'android' },
        type: 'pluslite',
        user: {
          email: 'test@test.com',
          nickname: '',
        },
      });

      expect(props.version).toEqual('2.0.4');
      expect(props.baseUrl).toEqual(baseProps.cdn.link);
      expect(props.show).toEqual(true);
      expect(props.domain).toEqual(baseProps.urls.mainDomain.link);
    });
  });
});

