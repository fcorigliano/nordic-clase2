/* eslint-disable security/detect-object-injection */
const { getValue } = require('pi-navigation-config');
const { mapLinksToUrls } = require('../../../utils/links');
const userMenuLinks = require('./user-menu/props');

const footerAccessLinks = {
  [userMenuLinks.id]: userMenuLinks.props,
};

const isFooterAccessConfigValid = config => config && config.items;
const areLinksValid = links => links.length > 0;

const footerAccessProps = (props) => {
  const {
    navigationUrls,
    actualLocation,
    platform,
    req,
  } = props;

  const footerAccessConfig = getValue({
    key: 'footerAccess',
    platform,
    req,
  });

  const faProps = {
    groups: [],
  };

  if (isFooterAccessConfigValid(footerAccessConfig)) {
    footerAccessConfig.items.forEach((item) => {
      const { id, title, items, icons } = item;
      const specificFooterAccessLinkForId = footerAccessLinks[id];
      let links = [];

      if (specificFooterAccessLinkForId) {
        links = specificFooterAccessLinkForId(props, item);
      } else if (items) {
        links = mapLinksToUrls({
          links: items,
          urls: navigationUrls,
          currentUrl: actualLocation,
          originalProps: props,
          icons,
        });
      }

      if (areLinksValid(links)) {
        faProps.groups.push({
          id,
          title,
          links,
        });
      }
    });

    Object.assign(faProps, {
      title: footerAccessConfig.title,
    });
  }

  return faProps;
};

module.exports = footerAccessProps;
