const restClient = require('frontend-restclient');
const buildRestClientContext = require('frontend-restclient/src/build-context');
const { PRODUCTION, SCOPE } = require('frontend-env');
const { isPlus, isLite } = require('@frontend-navigations/commons/layout-type-detection');
const { restClientTimeout } = require('./config');
const logger = require('../logger');

const request = restClient({
  timeout: restClientTimeout(PRODUCTION),
  retry: {
    maxRetries: 0,
  },
  logErrors: false,
});
const endpoint = site => `/frontend/sites/${site}/menu/user`;

/**
 * TODO: in the future, we only want this API called executed on web/mobile, not on desktop
 * since we are only doing this API call to be responsive and show the user menu when the desktop
 * version is minimized
 */
const shouldUserMenuBeDisplayed = (type, user) => (isPlus(type) || isLite(type)) && user;

const execute = ({ req, siteId, user, type }) => {
  const data = {};

  if (!shouldUserMenuBeDisplayed(type, user)) {
    return Promise.resolve(data);
  }

  const url = endpoint(siteId);
  const payload = {
    params: { user_id: user.id },
    context: buildRestClientContext(req),
  };

  if (PRODUCTION && req.cookies.meliLab) {
    payload.params.env = SCOPE;
  }

  return request.get(url, payload)
    .then(response => response.data)
    .catch((err) => {
      logger.error({
        req,
        err,
        errorType: 'user-menu',
        message: err.stack,
      });

      return data;
    });
};

const generateServiceContext = (req, res, params) => {
  const { platform, user } = req;
  const { type } = params;

  return {
    platformId: platform.id,
    siteId: platform.siteId,
    req,
    user,
    type,
  };
};

module.exports = (req, res, params) => execute(generateServiceContext(req, res, params));
