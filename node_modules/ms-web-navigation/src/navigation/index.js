const React = require('react');
const PropTypes = require('prop-types');
const Style = require('frontend-style');
const { isInternal, isHidden } = require('@frontend-navigations/commons/layout-type-detection');
const Favicons = require('@frontend-navigations/commons/lib/favicons-component');
const Header = require('./Header');
const Footer = require('./Footer');
const Appearance = require('../utils/appearance');
const Css = require('./css');
const cssProps = require('./css/props');
const faviconsProps = require('./favicons/props');

const Navigation = (props) => {
  const { type, children, shopModel } = props;

  if (!shopModel) {
    return <>{children}</>;
  }

  // booleans for selective rendering
  const hideHeader = isHidden(type);
  const hideFooter = isInternal(type) || isHidden(type);

  // here we are defining the required props for the header and footer
  const appearance = new Appearance(shopModel.appearance);

  const HeaderProps = appearance.getComponentProperties('Header');
  const footerContent = appearance.getComponentProperty('Footer', 'raw');
  const styles = appearance.getComponentProperty('Document', 'styles');

  return (
    <>
      <Css {...cssProps(props)} />
      <Favicons {...faviconsProps(props)} />
      {styles && styles.map(style => <Style href={style} />)}
      <Header hide={hideHeader} {...HeaderProps} />
      {children}
      <Footer hide={hideFooter} raw={footerContent} />
    </>
  );
};

Navigation.propTypes = {
  shopModel: PropTypes.shape({
    appearance: PropTypes.shape({
      component: PropTypes.string,
      properties: PropTypes.any,
      children: PropTypes.arrayOf(PropTypes.any),
    }),
  }),
  type: PropTypes.string,
  children: PropTypes.node.isRequired,
};

Navigation.defaultProps = {
  type: 'full',
  shopModel: null,
};

module.exports = Navigation;
