const React = require('react');
const propTypes = require('prop-types');
const Head = require('react-declarative-head');
const config = require('frontend-config');
const {
  getPlatformName,
  getHref,
} = require('../services/ui-navigation');
const {
  defaultFavicons,
  defaultValues,
} = require('../constants/favicons');
const logger = require('../logger');

const Favicons = ({
  favicons,
  platformId,
  siteId,
  feConfigEnvironment,
  cdn,
  uiNavigationVersion: uiNavigationVersionProp,
  appName,
}) => {
  if (!favicons.length) {
    return null;
  }

  const platformName = getPlatformName(platformId);

  const uiNavigationVersion = uiNavigationVersionProp || config.get('uiNavigationVersion', platformId, siteId, feConfigEnvironment);

  const faviconElements = favicons
    .map((favicon, index) => {
      const isRelative = favicon.href.startsWith('/');
      if (isRelative) {
        if (!platformName) {
          logger.error(`Navigation Favicons component - Unknown platform ${platformId}`);
          return null;
        }
        if (!uiNavigationVersion) {
          // eslint-disable-next-line max-len
          logger.error(`Navigation Favicons component - no uiNavigationVersion configuration for platform "${platformId}" and site "${siteId}"`);
          return null;
        }
      }

      const href = isRelative
        ? getHref(cdn, favicon.href.slice(1), uiNavigationVersion, platformName, appName)
        : favicon.href;

      const elementProps = {
        href,
        rel: favicon.rel || defaultValues.rel,
      };

      if (favicon.sizes) {
        elementProps.sizes = favicon.sizes;
      }

      if (favicon.type) {
        elementProps.type = favicon.type;
      }

      return <link key={`link-key-${index}`} {...elementProps} />;
    });

  return (
    <Head>
      {faviconElements}
    </Head>
  );
};

Favicons.propTypes = {
  platformId: propTypes.string,
  siteId: propTypes.string,
  feConfigEnvironment: propTypes.string,
  favicons: propTypes.arrayOf(propTypes.shape({
    href: propTypes.string.isRequired,
    rel: propTypes.string,
    sizes: propTypes.string,
    type: propTypes.string,
  })),
  cdn: propTypes.shape({
    link: propTypes.string,
  }),
  uiNavigationVersion: propTypes.string,
};

Favicons.defaultProps = {
  platformId: null,
  siteId: null,
  feConfigEnvironment: null,
  favicons: defaultFavicons,
  cdn: null,
  uiNavigationVersion: null,
};

module.exports = Favicons;
