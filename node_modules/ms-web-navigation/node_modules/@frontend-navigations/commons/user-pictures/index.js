/* eslint-disable security/detect-object-injection */
const {
  variants,
  urlBasePath,
  density,
  extensions,
} = require('../constants/image-urls');

const getUserPicture = (user, variant, options = {}) => {
  const pictureId = (((user || {}).raw || {}).thumbnail || {}).picture_id;
  if (!pictureId) {
    return null;
  }

  const fileExtension = ((options.browser || {}).support || {}).webp ? extensions.webp : extensions.jpg;
  const fileVariant = variants[variant] || variants.original;
  const fileDensity = options.highDensity
    ? density.high
    : density.low;

  return `${urlBasePath}${fileDensity}${pictureId}${fileVariant}.${fileExtension}`;
};

/**
 * Returns an object with the variants small and big for the provided user added to props
 * @param {object} props - usually the request or props passed on from frontend-layout
 * @returns {object} with shape:
 * {
 *    hasPicture: true if there is an image associated to the provided user,
 *    lowDensityPictureUrl: low density picture with variant -S
 *    highDensityPictureUrl: high density picture with variant -S
 * }
*/
const getUserPictures = (props, options = {}) => {
  const { user } = props;

  const variant = options.variant || 'small';

  const lowDensityPictureUrl = getUserPicture(user, variant, {
    browser: props.browser,
  });
  const highDensityPictureUrl = getUserPicture(user, variant, {
    browser: props.browser,
    highDensity: true,
  });

  return {
    hasPicture: !!lowDensityPictureUrl,
    lowDensityPictureUrl,
    highDensityPictureUrl,
  };
};

module.exports = {
  getUserPictures,
  getUserPicture,
};
