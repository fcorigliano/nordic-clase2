const defaultNamespace = 'cookie-consent-banner-opt-out';
const defaultPlatformId = 'ML';
const defaultDeviceType = 'mobile';

describe('Cookie Consent Css Content', () => {
  beforeEach(() => jest.resetModules());

  it(`should return css content - ${defaultNamespace}`, () => {
    const cssContent = 'some-css-content';
    const toString = jest.fn().mockReturnValue(cssContent);
    const readFileSync = jest.fn().mockReturnValue({ toString });
    jest.doMock('fs', () => ({ readFileSync }));


    const getData = jest.fn().mockReturnValue([{
      platformId: defaultPlatformId,
      deviceType: defaultDeviceType,
      withoutExtension: 'some-file-name',
    }]);
    jest.doMock('./entries-data', () => ({ getData }));

    const { getCssContent } = require('./css-content');

    const content = getCssContent(defaultPlatformId, defaultDeviceType, defaultNamespace);

    expect(content).toBe(cssContent);
    expect(getData).toHaveBeenCalledWith(defaultNamespace);
    expect(readFileSync).toHaveBeenCalled();
    expect(toString).toHaveBeenCalledWith();
  });
});
