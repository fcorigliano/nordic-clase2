const { readFileSync } = require('fs');
const { join } = require('path');
const { getData } = require('./css/entries-data');
const { send } = require('../../services/statsd');
const { error: logError } = require('../../services/logger');
const { errorLoadingCss } = require('../../constants/statsd');

const cssGetters = getData().reduce((tempCss, fileData) => {
  tempCss[fileData.platformId] = () => {
    const fileName = join(__dirname, '../../../lib-css', `disclaimer-banner-${fileData.withoutExtension}.css`);
    try {
      return readFileSync(fileName).toString();
    } catch (error) {
      send(errorLoadingCss, { fileName });
      logError('Error loading disclaimer banner CSS', {
        error,
        extraTags: { fileName },
      });
      return null;
    }
  };
  return tempCss;
}, {});

const cssCache = {};
const getCssContent = (platformId) => {
  const platformIdWithDefault = cssGetters[platformId] ? platformId : 'default';

  cssCache[platformIdWithDefault] = cssCache[platformIdWithDefault] || {
    data: cssGetters[platformIdWithDefault](),
  };

  return cssCache[platformIdWithDefault].data;
};

module.exports = {
  getCssContent,
};
