const dpConfig = require('data-privacy-config');
const { getDpEnvironment } = require('@frontend-cookies-manager/common/src/services/get-dp-environment');
const { cookieDisclaimerCookieIdentifier } = require('../../constants/cookies');
const { getCssContent } = require('./css-content');
const { userPreferencesRequiresShowingBanner } = require('../commons/user-pref-req-show-banner');

const doNotShowProps = {
  show: false,
};

const cookieDisclaimerProps = ({
  platformId,
  siteId,
  domain,
  browser = {},
  headers,
  cookies,
  userPreferences,
  req,
}) => {
  const hasCategories = !!Object
    .keys((userPreferences && userPreferences.categories) || {})
    .length;

  if (!userPreferencesRequiresShowingBanner(userPreferences) && hasCategories) {
    return doNotShowProps;
  }

  const dpConfigEnvironment = getDpEnvironment({
    headers,
    cookies,
    req,
  });

  const cookieDisclaimerData = dpConfig.getValue({
    key: 'cookieDisclaimer',
    platform: {
      id: platformId,
      siteId,
    },
    environment: dpConfigEnvironment,
    req,
  });
  if (!cookieDisclaimerData) {
    return doNotShowProps;
  }

  const cookieName = `_${platformId.toLowerCase()}_${cookieDisclaimerCookieIdentifier}_${siteId.toLowerCase()}`;

  if (cookies && cookies[cookieName]) {
    return doNotShowProps;
  }

  return {
    show: true,
    cssContent: getCssContent(platformId),
    bannerText: cookieDisclaimerData.bannerText,
    dismissButtonText: cookieDisclaimerData.dismissButtonText,
    moreInfo: cookieDisclaimerData.moreInfo,
    cookieCreationInfo: {
      name: cookieName,
      domain,
      sameSite: ((browser || {}).support || {}).sameSite ? '; SameSite=None; Secure' : '',
    },
  };
};

module.exports = cookieDisclaimerProps;
