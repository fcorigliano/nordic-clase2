describe('Cookie Disclaimer Css Content', () => {
  beforeEach(() => jest.resetModules());

  it('should return css content', () => {
    const cssContent = 'some-css-content';
    const toString = jest.fn().mockReturnValue(cssContent);
    const readFileSync = jest.fn().mockReturnValue({ toString });
    jest.doMock('fs', () => ({ readFileSync }));

    const platformId = 'ML';

    const getData = jest.fn().mockReturnValue([{
      platformId,
      withoutExtension: 'some-file-name',
    }]);
    jest.doMock('./css/entries-data', () => ({ getData }));

    const { getCssContent } = require('./css-content');

    const content = getCssContent(platformId);

    expect(content).toBe(cssContent);
    expect(getData).toHaveBeenCalledWith();
    expect(readFileSync).toHaveBeenCalled();
    expect(toString).toHaveBeenCalledWith();
  });
});
