const React = require('react');
const path = require('path');
const { ChunkExtractor: LoadableChunkExtractor } = require('@loadable/server');
const config = require('../config/default');

function ChunkExtractor(
  entrypoints,
  statsPath = path.join(config.buildPath, config.statsFilename),
) {
  if (!entrypoints) {
    throw new Error('entrypoints is required');
  }

  const statsFile = path.join(process.cwd(), statsPath);
  const chunkExtractor = new LoadableChunkExtractor({
    entrypoints,
    statsFile,
  });

  /**
   * Meant to be used in frontend-script
   */
  function getChunkScripts() {
    const chunkScripts = chunkExtractor
      .getMainAssets('script')
      .map((s) => ({
        src: s.filename,
        on: 'load',
        type: undefined,
        inline: undefined,
        children: undefined,
      }));
    return chunkScripts;
  }

  function getRequiredChunksScriptTag() {
    return chunkExtractor.getRequiredChunksScriptTag({});
  }

  /**
   * Meant to be used in frontend-layout; it collect the chunks in chunkExtractor
   * and also prepares the component.
   * The return value will be a modified version of Component which you must use instead of
   * the original
   */
  function collectChunks(Component) {
    return function _collectChunks(props) {
      return chunkExtractor.collectChunks(React.createElement(Component, props));
    };
  }

  function getEntryPoints() {
    return entrypoints;
  }

  return {
    getEntryPoints,
    getRequiredChunksScriptTag,
    getChunkScripts,
    collectChunks,
  };
}

module.exports = ChunkExtractor;
