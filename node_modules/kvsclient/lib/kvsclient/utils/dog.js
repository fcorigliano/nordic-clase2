const StatsD = require('hot-shots');
const _ = require('lodash');

const defaultTags = {
  platform: process.env.PLATFORM,
  application: process.env.APPLICATION,
  datacenter: process.env.DATACENTER,
};

const Tags = (tags) => {
  const result = [];

  if (_.isObject(tags)) {
    _.forIn(tags, (v, k) => {
      if (v && !_.isNil(v)) {
        result.push(`${k}:${v}`);
      }
    });
  }

  return result;
};

// Check if it is a test environment
const isNotProduction = ['test', 'development'].includes(process.env.NODE_ENV);

const client = new StatsD({
  host: 'datadog',
  port: 8125,
  maxBufferSize: isNotProduction ? 0 : 10000,
  mock: isNotProduction,
  globalTags: Tags(defaultTags),
});

const Dog = {};

Dog.recordSimpleMetric = (name, value, tags) => {
  client.increment(name, value, Tags(tags));
};

Dog.recordCompoundMetric = (name, value, tags) => {
  client.gauge(name, value, Tags(tags));
};

Dog.recordFullMetric = (name, value, tags) => {
  client.histogram(name, value, Tags(tags));
};

module.exports = Dog;
