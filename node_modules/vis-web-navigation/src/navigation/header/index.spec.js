const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const Header = require('.');

const baseProps = {
  type: 'full',
  siteId: 'MLV',
  logo: {
    url: 'https://www.tucarro.com.ve',
    label: 'Classifieds',
  },
  melilab: {},
  userMenu: {
    isUserLoggedIn: false,
  },
  searchbox: {
    isDesktop: true,
  },
  navMenuSwitchId: 'navMenuSwitchId',
};

describe('Classifieds Navigation', () => {
  describe('Header', () => {
    it('matches the default snapshot and returns full header since type is full', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="full"
          siteId="MLV"
          navMenuSwitchId="nav-switch-id"
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderFull');
    });

    it('matches the default snapshot and returns lite header since type is lite', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="lite"
          siteId="MLV"
          navMenuSwitchId="nav-switch-id"
          lite={{
            isDesktop: true,
            userLinks: {},
          }}
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderLite');
    });

    it('returns full header since type could not be found and defaults to full', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Header
          {...baseProps}
          type="non-existent-header-type"
          siteId="MLV"
          navMenuSwitchId="nav-switch-id"
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
      expect(renderedComponent.type.name).toEqual('HeaderFull');
    });
  });
});
