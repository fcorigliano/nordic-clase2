const { getValue } = require('classified-navigation-config');
const { mapLinksToUrls } = require('../../../../../utils/links');
const { capitalize } = require('../../utils');

const help = 'helpMain';
const registration = 'registration';
const sell = 'sell';

const guestUserMenuProps = (props) => {
  const {
    navigationUrls,
    actualLocation,
    type,
    platform,
    req,
  } = props;

  const typeCapitalize = capitalize(type);
  const userMenuGuestLinksByType = getValue({
    key: `userMenuGuestLinks${typeCapitalize}`,
    platform,
    req,
  });

  const userMenuGuestLinks = userMenuGuestLinksByType || getValue({
    key: 'userMenuGuestLinks',
    platform,
    req,
  });
  const userMenuLinks = userMenuGuestLinks.map(({ link }) => link);

  const links = mapLinksToUrls({
    links: userMenuLinks,
    urls: navigationUrls,
    currentUrl: actualLocation,
    originalProps: props,
    hash: 'nav-header',
    className: (link) => {
      switch (link) {
        case registration:
          return 'option-register';
        case help:
          return 'option-help';
        case sell:
          return 'option-publish';
        default:
          return `option-${link}`;
      }
    },
  });

  return {
    userLinks: {
      links,
    },
  };
};

module.exports = guestUserMenuProps;
