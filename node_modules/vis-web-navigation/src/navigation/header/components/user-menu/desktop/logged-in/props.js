/* eslint-disable max-len */
const { getValue } = require('classified-navigation-config');
const welcomeProps = require('./welcome/props');
const { mapLinksToUrls } = require('../../../../../utils/links');
const { isClean, isFull, isLite } = require('../../../../../../layout-type-detection');
const { capitalize } = require('../../utils');

const sell = 'sell';
const help = 'helpMain';

const welcomePropsClassified = (props) => {
  const { type } = props;
  const welcomeMLProps = welcomeProps(props);
  return { ...welcomeMLProps,
    show: !isClean(type),
    showAvatar: isFull(type) || isLite(type) };
};

const loggedInUserMenuProps = (props) => {
  const {
    navigationUrls,
    actualLocation,
    platform,
    req,
    type,
  } = props;

  const typeCapitalize = capitalize(type);
  const headerMenuLinksByType = getValue({
    key: `headerMenuLinks${typeCapitalize}`,
    platform,
    req,
  });

  const headerMenuLinks = headerMenuLinksByType || getValue({
    key: 'headerMenuLinks',
    platform,
    req,
  });
  const headerLinks = headerMenuLinks.map(({ link }) => link);

  const links = mapLinksToUrls({
    links: headerLinks,
    urls: navigationUrls,
    currentUrl: actualLocation,
    originalProps: props,
    hash: 'nav-header',
    className: (link) => {
      switch (link) {
        case help:
          return 'option-help';
        case sell:
          return 'option-publish';
        default:
          return `option-${link}`;
      }
    },
  });

  return {
    welcome: welcomePropsClassified(props),
    userLinks: {
      links,
    },
  };
};

module.exports = loggedInUserMenuProps;
