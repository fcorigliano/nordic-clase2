/* eslint-disable jsx-a11y/tabindex-no-positive */
/* eslint-disable jsx-a11y/no-autofocus */
const React = require('react');
const PropTypes = require('prop-types');
const SearchboxWidget = require('../../../widgets/searchbox');
const tabIndexes = require('../../../utils/tab-index');

const namespace = 'nav-search';
const SearchboxBase = ({
  children,
  defaultValue,
  isFocus,
  inputLabel,
  placeholder,
  iconLabel,
  inputType,
  isLowEnd,
  action,
  widget,
}) => [
  <form
    className={namespace}
    action={action}
    method="GET"
    role="search"
  >
    <input
      type={inputType}
      className={`${namespace}-input`}
      aria-label={inputLabel}
      name="as_word"
      placeholder={placeholder}
      maxLength="120"
      autoFocus={!!isFocus}
      autoCapitalize="off"
      autoCorrect="off"
      spellCheck="false"
      autoComplete={isLowEnd ? 'on' : 'off'}
      tabIndex={tabIndexes('search-input', isFocus)}
      defaultValue={defaultValue}
    />
    {children}
    <button type="submit" className={`${namespace}-btn`} tabIndex={tabIndexes('search-button', isFocus)}>
      <div role="img" aria-label={iconLabel} className="nav-icon-search" />
    </button>
  </form>,
  <SearchboxWidget {...widget} />,
];

SearchboxBase.propTypes = {
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]),
  defaultValue: PropTypes.string,
  isFocus: PropTypes.bool,
  inputLabel: PropTypes.string.isRequired,
  placeholder: PropTypes.string.isRequired,
  iconLabel: PropTypes.string.isRequired,
  isLowEnd: PropTypes.bool.isRequired,
  action: PropTypes.string.isRequired,
  widget: PropTypes.shape({
    baseUrl: PropTypes.string.isRequired,
    platformId: PropTypes.string.isRequired,
    siteId: PropTypes.string.isRequired,
    searchEndpoint: PropTypes.string.isRequired,
    categoryEndpoint: PropTypes.string,
    isUserLoggedIn: PropTypes.bool.isRequired,
    siteDomain: PropTypes.string.isRequired,
    deviceType: PropTypes.string.isRequired,
    version: PropTypes.string,
  }).isRequired,
  inputType: PropTypes.string,
};

SearchboxBase.defaultProps = {
  defaultValue: null,
  inputType: 'text',
  children: null,
  isFocus: false,
};


module.exports = SearchboxBase;
