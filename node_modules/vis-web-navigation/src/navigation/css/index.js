const React = require('react');
const propTypes = require('prop-types');
const CommonsCss = require('@frontend-navigations/commons/lib/css-component');
const {
  DESKTOP,
  MOBILE,
} = require('@frontend-navigations/commons/constants/device-types');
const {
  FULL,
  INTERNAL,
} = require('../../constants/navigation-types');
const {
  NAVIGATION,
  NAVIGATION_INTERNAL,
  NAVIGATION_MOBILE,
} = require('../../constants/css-files');

const deviceTypes = {
  [MOBILE]: [{
    name: NAVIGATION_MOBILE,
  }],
  [DESKTOP]: [{
    name: NAVIGATION,
  }],
};

const Css = ({
  navigationType,
  deviceType,
  firstRequestInlineStyles,
  platformId,
  siteId,
  embedCss,
  feConfigEnvironment,
  cdn,
  configGetter,
  configEnvironment,
  addConfigUpdateHandler,
}) => {
  const baseFiles = navigationType === INTERNAL ? [{ name: NAVIGATION_INTERNAL }] : deviceTypes[deviceType] || deviceTypes[DESKTOP];
  const files = baseFiles
    .map(style => ({
      ...style,
      firstRequestInlineStyles,
    }));

  return (
    <CommonsCss
      files={files}
      platformId={platformId}
      siteId={siteId}
      embedCss={embedCss}
      feConfigEnvironment={feConfigEnvironment}
      navigationType={navigationType}
      cdn={cdn}
      configGetter={configGetter}
      configEnvironment={configEnvironment}
      addConfigUpdateHandler={addConfigUpdateHandler}
      appName="vis-web-navigation"
    />
  );
};

Css.propTypes = {
  firstRequestInlineStyles: propTypes.bool,
  navigationType: propTypes.string,
  deviceType: propTypes.string,
  browser: propTypes.shape({
    name: propTypes.string,
    major: propTypes.number,
  }),
  platformId: propTypes.string,
  siteId: propTypes.string,
  embedCss: propTypes.bool,
  feConfigEnvironment: propTypes.string,
  cdn: propTypes.shape({
    link: propTypes.string,
  }),
  configGetter: propTypes.func,
  configEnvironment: propTypes.string,
  addConfigUpdateHandler: propTypes.func,
};

Css.defaultProps = {
  firstRequestInlineStyles: false,
  navigationType: FULL,
  browser: null,
  deviceType: null,
  platformId: null,
  siteId: null,
  embedCss: false,
  feConfigEnvironment: null,
  cdn: null,
  configGetter: null,
  configEnvironment: null,
  addConfigUpdateHandler: null,
};

module.exports = Css;
