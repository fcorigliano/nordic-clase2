const React = require('react');
const PropTypes = require('prop-types');
const Favicons = require('@frontend-navigations/commons/lib/favicons-component');
const Header = require('./header');
const headerProps = require('./header/props');
const Tracking = require('./widgets/tracking');
const Footer = require('./footer');
const footerProps = require('./footer/props');
const { isHidden } = require('../layout-type-detection');
const icons = require('./utils/icons');
const Css = require('./css');
const cssProps = require('./css/props');
const faviconsProps = require('./favicons/props');
const navigationTypes = require('../layout-type-detection/types').types;

const navMenuSwitchId = 'nav-header-menu-switch';

const Navigation = ({ children, ...props }) => {
  const type = (navigationTypes[props.type] && props.type) || navigationTypes.FULL;
  if (isHidden(props.type)) {
    return [children];
  }

  icons.inject(props);

  return [
    <Css {...cssProps(props)} />,
    <Favicons {...faviconsProps(props)} />,
    <Tracking />,
    <input type="checkbox" id={navMenuSwitchId} />,
    <Header
      {...headerProps(props)}
      navMenuSwitchId={navMenuSwitchId}
      type={type}
    />,
    children,
    <Footer {...footerProps(props)} type={type} />,
  ];
};

Navigation.propTypes = {
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]).isRequired,
  overrides: PropTypes.shape({}),
};

Navigation.defaultProps = {
  overrides: {},
};

module.exports = Navigation;
