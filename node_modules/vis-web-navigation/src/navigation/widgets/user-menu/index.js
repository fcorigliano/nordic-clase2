/**
 * Module dependencies
 */
const React = require('react');
const PropTypes = require('prop-types');
const Script = require('frontend-script');

const UserMenuWidget = (props) => {
  const {
    show,
    domain,
    baseUrl,
    version,
    title,
    email,
    userPicture,
    myAccount,
    myQuotations,
    history,
    logout,
    userId,
    platformId,
    siteId,
  } = props;

  return show && (
    <Script src={`${baseUrl}/resources/frontend/statics/pi-widgets/user-menu/v${version}/user-menu.js`}>{`
    (function(win, freya) {
      if (win.UserMenuWidget && typeof freya !== 'undefined') {
        new UserMenuWidget({
          mainDomain: '${domain}',
          bus: freya,
          userId: "${userId}",
          platformId: "${platformId}",
          siteId: "${siteId}",
          menuData: {
            "title": "${title}",
            "email": "${email || ''}",
            "picture": ${userPicture ? `"${userPicture}"` : 'null'},
            "primaryAction": {
              "id": "my-account",
              "label": "${myAccount.name}",
              "target": "${myAccount.link}"
            },
            "shortcuts": [
              {
                "id": "quotations",
                "label": "${myQuotations.name}",
                "target": "${myQuotations.link}",
              },
              {
                "id": "history",
                "label": "${history.name}",
                "target": "${history.link}",
              },
              {
                "id": "logout",
                "label": "${logout.name}",
                "target": "${logout.link}",
              }
            ]
          }
        });
      }
    })(window, window.freya);
    `}
    </Script>
  );
};

UserMenuWidget.propTypes = {
  domain: PropTypes.string.isRequired,
  show: PropTypes.bool,
  baseUrl: PropTypes.string.isRequired,
  version: PropTypes.string,
  searchFocus: PropTypes.bool,
};

UserMenuWidget.defaultProps = {
  version: '1.0.7',
  show: false,
  searchFocus: false,
};

module.exports = UserMenuWidget;
