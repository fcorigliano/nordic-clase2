/**
 * Dependencies
 */
const gulp = require('gulp');
const { watch } = require('gulp');
const loadPlugins = require('gulp-load-plugins');
const { version } = require('./package.json');

const $ = loadPlugins();

const srcFiles = `./src/font-icons/*.svg`;
const buildFolder = `./font-build`;

const businessUnits = [
  'tucarro',
  'metroscubicos',
];

const createFontTasks = (businessUnit) => {
  const minifyTaskName = `minify${businessUnit}`;
  gulp.task(minifyTaskName, () => gulp.src([
    'eot',
    'svg',
    'ttf',
    'woff',
    'woff2'
  ].map(extension => `${buildFolder}/*.${extension}`))
    .pipe($.fontmin())
    .pipe(gulp.dest(`object-storage-assets/ui-navigation/${version}/${businessUnit}`)));

    const buildTaskName = `build${businessUnit}`;
    gulp.task(buildTaskName, () => gulp.src(srcFiles)
    .pipe($.iconfont({
      fontName: 'navigation',
      normalize: true,
      fontHeight: 1024,
      prependUnicode: true,
      formats: ['ttf', 'eot', 'woff', 'woff2', 'svg']
    }))
    .pipe(gulp.dest(buildFolder)));

  const buildIconFonts = gulp.series(buildTaskName, minifyTaskName);

  gulp.task(`buildIconFonts${businessUnit}`, buildIconFonts);

  gulp.task(`watch${businessUnit}`, () => watch(srcFiles, { ignoreInitial: false }, buildIconFonts));
};

businessUnits.forEach(createFontTasks);

const buildTaskNames = businessUnits.map(businessUnit => `buildIconFonts${businessUnit}`);
gulp.task('buildIconFonts', gulp.parallel(...buildTaskNames));

const watchTaskNames = businessUnits.map(businessUnit => `watch${businessUnit}`);
gulp.task('watch', gulp.parallel(...watchTaskNames));