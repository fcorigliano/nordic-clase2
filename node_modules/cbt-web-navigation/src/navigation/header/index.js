/* eslint-disable security/detect-object-injection */
const React = require('react');
const PropTypes = require('prop-types');
const classNames = require('classnames');
const Logo = require('./components/logo');
const UserMenu = require('./components/user-menu');
const HeaderLinks = require('./components/header-links-logged');
const userMenuProps = require('./components/user-menu/props');
const headerTypes = require('../types');

const namespace = 'nav-header';
const navBounds = 'nav-bounds';

const Header = (props) => {
  const {
    children,
    siteId,
    logo,
    melilab,
    showLoggedInLinks,
    type,
    userMenu,
  } = props;
  const className = classNames(namespace, `${namespace}-pluslite`, `${namespace}-cbt`, `${namespace}-cbt--${type}`);
  return (
    <header role="banner" data-siteid={siteId} className={className}>
      <div className={navBounds}>
        <Logo url={logo.url} label={logo.label} melilab={melilab} />
        <div className={`${namespace}-cbt__content`}>
          <UserMenu {...userMenuProps(props)} />
          { showLoggedInLinks && <HeaderLinks links={userMenu.loggedLinks} icons={userMenu.icons} /> }
          {children}
        </div>
      </div>
    </header>
  );
};

Header.defaultProps = {
  user: null,
  type: 'full',
};

Header.propTypes = {
  siteId: PropTypes.string.isRequired,
  logo: PropTypes.shape({
    url: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
  melilab: PropTypes.shape({
    isEnabled: PropTypes.bool,
  }).isRequired,
  isDesktop: PropTypes.bool.isRequired,
  isLoggedIn: PropTypes.bool.isRequired,
  user: PropTypes.shape(headerTypes.userType),
  userMenu: PropTypes.shape(headerTypes.userMenuType).isRequired,
  showLoggedInLinks: PropTypes.bool.isRequired,
  type: PropTypes.string,
};

module.exports = Header;
