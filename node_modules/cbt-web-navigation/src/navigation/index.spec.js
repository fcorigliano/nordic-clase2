/* eslint-disable nordic/i18n-jsx-no-literals */
const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const TestRenderer = require('react-test-renderer');
const Navigation = require('.');

const baseProps = {
  user: {
    id: 462143006,
    nickname: 'GOMITASCARAMELOSDELCENTROSA',
    active: true,
  },
  navigationPIIData: {
    userName: 'Gomitas',
  },
  device: {
    type: 'desktop',
    mobile: false,
    tablet: false,
    desktop: true,
    forced: false,
    originalType: 'desktop',
  },
  platform: {
    siteId: 'CBT',
    countryId: 'US',
    id: 'ML',
    domain: 'global-selling.mercadolibre.com',
  },
  metrics: {
    hotjar: {
      traffic: {
        from: 0,
        to: 2,
      },
    },
  },
  feConfigEnvironment: 'production',
  baseURL: '/',
  staticMarkup: false,
  type: 'full',
  fixed: false,
  labels: {
    headTitle: 'Mercado Libre International Selling',
  },
  urls: {
    mainDomain: {
      name: '',
      link: 'global-selling.mercadolibre.com',
    },
    baseDomain: {
      name: '',
      link: '//global-selling.mercadolibre.com',
    },
    rootDomain: {
      name: '',
      link: 'https://www.mercadolibre.com/jms/cbt',
    },
  },
  melilab: null,
  cdn: {
    name: 'default',
    link: 'https://http2.mlstatic.com',
    cssFileSuffix: '',
  },
  userMenu: {
    links: {
      myAccount: {
        name: 'My account',
        link: 'https://global-selling.mercadolibre.com',
      },
      login: {
        name: 'Log in',
        link: 'https://www.mercadolibre.com/jms/cbt/lgz/login?go=https%3A%2F%2Fdev.global-selling.mercadolibre.com%3A8443%2F',
      },
      logout: {
        name: 'Log out',
        link: 'https://www.mercadolibre.com/jms/cbt/lgz/logout?go=https%3A%2F%2Fdev.global-selling.mercadolibre.com%3A8443%2F',
      },
    },
    sites: {
      MLA: {
        text: 'Argentina',
        countryId: 'AR',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Argentina.svg',
      },
      MLM: {
        text: 'Mexico',
        countryId: 'MX',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Mexico.svg',
      },
      MLB: {
        text: 'Brazil',
        countryId: 'BR',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Brazil.svg',
      },
      MCO: {
        text: 'Colombia',
        countryId: 'CO',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Colombia.svg',
      },
      MLC: {
        text: 'Chile',
        countryId: 'CL',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Chile.svg',
      },
      MLU: {
        text: 'Uruguay',
        countryId: 'UY',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Uruguay.svg',
      },
      MEC: {
        text: 'Ecuador',
        countryId: 'EC',
        flag: 'https://http2.mlstatic.com/storage/cbt-statics/layout/header/flags/Ecuador.svg',
      },
    },
    logisticTypes: {
      remote: '',
      '3pl': '(Warehouse)',
      fulfillment: '(Full)',
    },
    loggedLinks: [
      {
        name: 'Publish',
        link: 'https://global-selling.mercadolibre.com/publish',
        id: 'publish',
      },
    ],
    icons: [
      {
        name: 'Help',
        link: 'https://global-selling.mercadolibre.com/publish',
        icon: 'https://global-selling.mercadolibre.com/icon.png',
        id: 'helpMain',
      },
    ],
    cbtInfo: {
      siteUsers: [
        {
          user_id: 463163127,
          site_id: 'MLA',
          status: 'active',
          enabled_sites: [
            'MLA',
          ],
          parent_id: 462143006,
          logistic_type: 'remote',
          site_users: null,
        },
        {
          user_id: 463166651,
          site_id: 'MLB',
          status: 'active',
          enabled_sites: [
            'MLB',
          ],
          parent_id: 462143006,
          logistic_type: 'remote',
          site_users: null,
        },
        {
          user_id: 463163332,
          site_id: 'MLM',
          status: 'active',
          enabled_sites: [
            'MLM',
          ],
          parent_id: 462143006,
          logistic_type: 'remote',
          site_users: null,
        },
        {
          user_id: 463163330,
          site_id: 'MLU',
          status: 'active',
          enabled_sites: [
            'MLU',
          ],
          parent_id: 462143000,
          logistic_type: 'remote',
          site_users: null,
        },
        {
          user_id: 463163331,
          site_id: 'MEC',
          status: 'active',
          enabled_sites: [
            'MEC',
          ],
          parent_id: 462143001,
          logistic_type: 'remote',
          site_users: null,
        },
      ],
      siteUserId: 463163127,
      currentSiteId: 'MLA',
    },
  },
  footer: {
    links: [
      {
        link: 'http://investor.mercadolibre.com',
        name: 'Investor relations',
      },
      {
        name: 'About selling globally',
        link: 'https://portal-cbt.mercadolibre.com/about',
      },
      {
        name: 'Help',
        link: 'https://portal-cbt.mercadolibre.com/faqs',
      },
    ],
    texts: {
      copyright: 'Copyright Â© 2019 MercadoLibre S.R.L.',
    },
    platformId: 'ML',
    siteId: 'CBT',
    isDesktop: true,
  },
};

jest.mock('cbt-navigation-config', () => {
  const hash = {
    uiNavigationVersion: '5.18.5',
  };

  return {
    getValue: ({ key }) => hash[key],
    getEnvironment: () => 'production',
    addUpdateHandler: () => {},
    removeUpdateHandler: () => {},
  };
});

describe('Mercado Libre CBT Navigation', () => {
  it('matches the default snapshot for hidden type', () => {
    const renderer = new ShallowRenderer();

    const component = (
      <Navigation
        {...baseProps}
        type="hidden"
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });

  it('matches the default snapshot for mobile version', () => {
    const renderer = new ShallowRenderer();

    const component = (
      <Navigation
        {...baseProps}
        device={{
          type: 'mobile',
          mobile: true,
          desktop: false,
        }}
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });

  it('matches the default snapshot for desktop version', () => {
    const renderer = new ShallowRenderer();

    const component = (
      <Navigation
        {...baseProps}
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });

  it('matches the default snapshot for desktop version with full header and children for logged user', () => {
    const component = TestRenderer.create(
      <Navigation
        {...baseProps}
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>,
    );
    expect(component.toJSON()).toMatchSnapshot();
  });

  it('matches the default snapshot for desktop version with full header and children for guest user', () => {
    const component = TestRenderer.create(
      <Navigation
        {...baseProps}
        user={null}
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>,
    );
    expect(component.toJSON()).toMatchSnapshot();
  });

  it('matches the default snapshot for desktop version with full header and children for logged user without CBT switcher (lite)', () => {
    const customProps = {
      ...baseProps,
    };
    customProps.userMenu.cbtInfo = null;
    const component = TestRenderer.create(
      <Navigation
        {...customProps}
      >
        <main role="main" id="root-app">{'{{children}}'}</main>
      </Navigation>,
    );
    expect(component.toJSON()).toMatchSnapshot();
  });
});
