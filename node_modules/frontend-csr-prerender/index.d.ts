import type { RequestHandler, Request, Response } from 'express';

export interface CsrPrerenderOptions {
  /**
   * List of pages to be prefetched
   *
   * @default []
   * @example
   * ['https://www.mercadolibre.com.ar/help', 'https://www.mercadolibre.com.ar/login']
   */
  prefetches?: string[];

  /**
   * List of requests to be preloaded
   *
   * @default []
   * @example
   * ['https://www.mercadolibre.com.ar/api/data', 'https://www.mercadolibre.com.ar/api/hub']
   */
  preloads?: string[];
}

/**
 * Function used to configure preloads and prefetches
 * @param request an Express request
 * @param response an Express response
 * @return a CsrPrerender configuration object
 * @example
 * const customConfig = (req, res) => {
 *   if (req.platform.siteId === 'MLA') {
 *     return {
 *       prefetches: ['https://www.mercadolibre.com.ar/help', 'https://www.mercadolibre.com.ar/login'],
 *       preloads: ['https://www.mercadolibre.com.ar/api/data', 'https://www.mercadolibre.com.ar/api/hub'],
 *     }
 *   }
 *
 *   return {
 *     prefetches: ['https://www.mercadolibre.com.ar/help', 'https://www.mercadolibre.com.ar/login'],
 *     preloads: ['https://www.mercadolibre.com.ar/api/data', 'https://www.mercadolibre.com.ar/api/hub'],
 *   }
 * };
 */
 export type CsrPrerenderConfig = (req: Request, res: Response) => CsrPrerenderOptions;

/**
 * Middleware used to configure preloads and prefetches
 * @param config function to configute Prerendering options
 * @return An express request handler
 */
export const csrPrerenderMiddleware: (config?: CsrPrerenderConfig) => RequestHandler;
