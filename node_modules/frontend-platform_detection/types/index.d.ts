import type { RequestHandler } from 'express';

/**
 * Platform middleware in charge of completing req.platform variable
 * with the platform info obtained from the URL domain.
 */
export const platformDetectionMiddleware: RequestHandler;

export const domains: Platform[];

/**
 * Get Platform object for a given hostname
 * 
 * @example
 * const { getPlatform } = require('frontend-platform_detection');
 * 
 * const platform = getPlatform(req.hostname);
 * if (platform) {
 *   // Magic happens here
 * }
 */
export const getPlatform: (hostname: string) => Platform | undefined;

declare global {
  namespace Express {
    interface Request {
      /**
       * Platform the user is in.
       */
      platform?: Platform;
    }
  }
}

export type PlatformId = 'ML' | 'MP' | 'MS' | 'MT' | 'GI' | 'PI' | 'TI' | 'TC' | 'TM' | 'TL' | 'AP' | 'BC' | 'DR' | 'BO';
export type SiteId = 'CBT' | 'MCO' | 'MCR' | 'MEC' | 'MLA' | 'MLB' | 'MLC' | 'MLM' | 'MLU' | 'MLV' | 'MPA'
  | 'MPE' | 'MPT' | 'MRD' | 'MBO' | 'MPY' | 'MGT' | 'MHN' | 'MNI' | 'MSV' | 'MCU' | 'ALL';
export type CountryId = 'US' | 'CO' | 'CR' | 'EC' | 'AR' | 'BR' | 'CL' | 'MX' | 'UY' | 'VE' | 'PA' | 'PE'
  | 'PT' | 'DO' | 'BO' | 'PY' | 'GT' | 'HN' | 'NI' | 'SV' | 'CU' | null;

export interface Platform {
  /**
   * Platform ID
   *
   * @example 'ML'
   */
  id: PlatformId;

  /**
   * Site ID
   *
   * @example 'MLA'
   */
  siteId: SiteId;

  /**
   * Country corresponding to the site ID
   *
   * @example 'AR'
   */
  countryId: CountryId;

  /**
   * Main domain for the given platform and site ID
   *
   * @example 'mercadolibre.com.ar'
   */
  domain: string;
}
