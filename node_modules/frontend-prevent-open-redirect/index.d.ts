import type { ParamsDictionary, Query } from 'express-serve-static-core';
import type { RequestHandler } from 'express';

type Config = {
  /**
   * Indicate the names of query params which contains the URIs for redirect.
   * 
   * @default ['go']
   * @example 'https://www.mercadolibre.com.ar/...?go=https://www.mercadolibre.com.ar/q=https://www.mercadopago.com.ar'
   */
  params: string[];

  /**
   * For additionals or customs protocols
   * 
   * @default ['http:', 'https:', 'meli:', 'mercadopago:']
   */
  protocols: string[];

  /**
   * Additional domains you can whitelist and allow redirection to them.
   * 
   * @default []
   */
  whitelist: string[];

  /**
   * Custom function handler in case Redirect URL validation fails. Default behaviour is redirecting to Home Page.
   */
  handleInvalidRedirectParam: RequestHandler<
    ParamsDictionary,
    any,
    any,
    Query,
    { invalidParams: Record<string, string> }
  >;
};

export type PreventOpenRedirectConfig = Partial<Config>;

/**
 * Middleware to check redirect params and prevent Open Redirects
 * @param config Optional config. See [Nordic Documentation](https://nordic.adminml.com/docs/api/Nordic%20Modules/frontend-prevent-open-redirect) for more info.
 */
export function preventOpenRedirect(config?: PreventOpenRedirectConfig): RequestHandler;
