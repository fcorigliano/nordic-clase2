/**
 * Module dependencies
 */
const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');
const ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');
const nodeExternals = require('webpack-node-externals');
const path = require('path');
const webpack = require('webpack');
const {
  group,
  setOutput,
  setStats,
  addPlugins,
  customConfig,
  defineConstants,
  sourceMaps, setTarget,
} = require('../index');
const babel = require('../babel');
const { fastRefreshEnabled, fastRefreshBabelPlugin } = require('../utils/fast-refresh');
const browsersList = require('../core/browsersList');

const analyzerMode = process.env.npm_config_analyze;
const nodeEnv = process.env.NODE_ENV || 'development';

/**
 * UI Component Preset
 */
function uiComponentPreset({ buildPath, babelrc, target } = {}) {
  const actualBuildPath = buildPath || './build';
  const babelConfig = {
    presets: [
      '@babel/preset-react',
      ['@babel/preset-env', {
        targets: { browsers: browsersList },
      }],
    ],
    plugins: [
      '@babel/plugin-proposal-object-rest-spread',
      ...fastRefreshBabelPlugin('ui'),
    ].concat(nodeEnv === 'production' ? [
      '@babel/plugin-transform-react-constant-elements',
      '@babel/plugin-transform-react-inline-elements',
      'babel-plugin-transform-react-remove-prop-types',
    ] : []),
    ...babelrc,
  };

  return group([
    setTarget(target),
    babel(babelConfig),
    sourceMaps(nodeEnv === 'production' ? 'cheap-module-source-map' : 'source-map'),
    customConfig({
      externals: [
        nodeExternals(),
      ],
    }),
    defineConstants({
      'process.env.NODE_ENV': nodeEnv,
    }),
    addPlugins([
      ...(analyzerMode ? [new BundleAnalyzerPlugin({ analyzerMode: 'static' })] : []),
      ...(fastRefreshEnabled ? [
        new webpack.HotModuleReplacementPlugin(),
        new ReactRefreshWebpackPlugin({ overlay: false })] : []
      ),
    ]),
    setOutput({
      libraryTarget: 'commonjs2',
      library: '[name]',
      path: path.join(path.resolve('.'), actualBuildPath),
      filename: '[name].js',
      clean: true,
    }),
    setStats('adaptive'),
  ]);
}

/**
 * Expose uiComponentPreset
 */
module.exports = uiComponentPreset;
