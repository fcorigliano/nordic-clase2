/**
 * Module dependencies
 */
const {
  group,
  env,
  setOutput,
  setStats,
  customConfig,
} = require('../index');
const classicPreset = require('./classic');
const { fastRefreshBabelPlugin } = require('../utils/fast-refresh');
const { nordicPagesBabelPlugin } = require('../utils/nordic-pages');

/**
 * SPA Preset
 */
function spaPreset({
  buildPath, publicPath, babelrc, imagesPath, target,
} = {}) {
  const babelConfig = {
    ...babelrc,
    plugins: [
      ...babelrc && babelrc.plugins ? [...babelrc.plugins] : [],
      ...nordicPagesBabelPlugin('spa'),
      ...fastRefreshBabelPlugin('spa'),
    ],
  };

  return group([
    setStats('adaptive'),
    env('development', [
      setOutput({
        chunkFilename: '[name].js',
      }),
    ]),
    env('production', [
      setOutput({
        chunkFilename: '[name].[chunkhash:8].js',
      }),
    ]),
    customConfig(
      {
        optimization: {
          splitChunks: {
            cacheGroups: {
              default: false,
              defaultVendors: {
                test: /[\\/]node_modules[\\/]/,
                name: 'vendor',
                chunks: 'all',
              },
            },
          },
        },
      },
    ),
    classicPreset({
      buildPath,
      publicPath,
      babelrc: babelConfig,
      imagesPath,
      target,
    }),
  ]);
}

/**
 * Expose spaPreset
 */
module.exports = spaPreset;
