const { getHydrateProperty } = require('./utils/hydrate');
const { createClientFile } = require('./utils/clients');
const { getEntryByDevice } = require('./utils/entries');

const generateNavigablePageClientsAndEntriesByDevices = (devices, paths) => {
  let devicePaths = null;
  let entriesByDevice = {};

  devices.forEach((device) => {
    devicePaths = paths[device];

    const { view } = devicePaths;
    const hydrate = getHydrateProperty(view);

    createClientFile(devicePaths);

    const entryByDevice = getEntryByDevice(devicePaths, hydrate);

    entriesByDevice = { ...entriesByDevice, ...entryByDevice };
  });

  return entriesByDevice;
};

const generateNavigablePagesClientsAndEntries = (discoveredRoutes) => {
  let navigablePagesEntries = {};

  if (!Array.isArray(discoveredRoutes)) return navigablePagesEntries;

  discoveredRoutes.forEach(({ paths }) => {
    const devices = Object.keys(paths);

    const entriesByDevice = generateNavigablePageClientsAndEntriesByDevices(devices, paths);

    navigablePagesEntries = { ...navigablePagesEntries, ...entriesByDevice };
  });

  return navigablePagesEntries;
};

module.exports = { generateNavigablePagesClientsAndEntries };

if (process.env.NODE_ENV === 'test') {
  exports = module.exports;
  exports.generateNavigablePageClientsAndEntriesByDevices = generateNavigablePageClientsAndEntriesByDevices;
}
