const { createClientFile } = require('./utils/clients');
const { getEntryByDevice } = require('./utils/entries');

const generateHttpErrorClientsAndEntriesByDevices = (devices, paths) => {
  let devicePaths = null;
  let entriesByDevice = {};

  devices.forEach((device) => {
    devicePaths = paths[device];

    createClientFile(devicePaths);

    const entryByDevice = getEntryByDevice(devicePaths);

    entriesByDevice = { ...entriesByDevice, ...entryByDevice };
  });

  return entriesByDevice;
};

const generateHttpErrorsClientsAndEntries = (discoveredHttpErrors) => {
  let httpErrorsEntries = {};

  if (typeof discoveredHttpErrors !== 'object') return httpErrorsEntries;

  const statusCodes = Object.keys(discoveredHttpErrors);

  statusCodes.forEach((statusCode) => {
    const { paths } = discoveredHttpErrors[statusCode];
    const devices = Object.keys(paths);

    const entriesByDevice = generateHttpErrorClientsAndEntriesByDevices(devices, paths);

    httpErrorsEntries = { ...httpErrorsEntries, ...entriesByDevice };
  });

  return httpErrorsEntries;
};

module.exports = { generateHttpErrorsClientsAndEntries };

if (process.env.NODE_ENV === 'test') {
  exports = module.exports;
  exports.generateHttpErrorClientsAndEntriesByDevices = generateHttpErrorClientsAndEntriesByDevices;
}
