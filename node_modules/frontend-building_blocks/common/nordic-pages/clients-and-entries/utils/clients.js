const { CLIENT_PATH } = require('../../../../utils/nordic-pages/helpers/constants');
const { log } = require('../../../logger');

const { cleanDirectory, createDirectory } = require('../../../directoryHelpers');
const { createFile } = require('../../../fileHelpers');
const {
  getCleanClientError,
  getCreateClientError,
  getCreateClientDirectoryError,
} = require('./error-messages');

function getClientTemplate(view, styles, hydrate) {
  let fileContent = '';

  if (styles) {
    fileContent += '// eslint-disable-next-line import/no-absolute-path, import/extensions\n'
    + `import '${styles}';\n`;
  }

  if (hydrate) {
    fileContent += 'import React from \'react\';\n'
    + 'import hydrate from \'nordic/hydrate\';\n'
    + 'import { I18n } from \'nordic/i18n\';\n'
    + 'import NordicPage from \'frontend-page/nordicPage\';\n'
    + '// eslint-disable-next-line import/no-absolute-path, import/extensions\n'
    + `import View from '${view}';\n\n`
    + 'const props = window.__PRELOADED_STATE__;\n\n'
    + 'if (props.pageSettings && props.pageSettings.i18n) {\n'
    + '  const { translations } = props.pageSettings;\n'
    + '  const i18n = new I18n({ translations });\n'
    + '  props.pageSettings.i18n = i18n;\n'
    + '}\n\n'
    + 'hydrate(\n'
    + '  <NordicPage {...props} Component={View} />,\n'
    + '  document.getElementById(\'root-app\'),\n'
    + ');\n';
  }

  return fileContent;
}

function createClientDirectory(clientDirectoryPath) {
  const cleanError = getCleanClientError(clientDirectoryPath);

  cleanDirectory(clientDirectoryPath, cleanError);

  const createError = getCreateClientDirectoryError(clientDirectoryPath);

  createDirectory(clientDirectoryPath, createError);
}

function createClientFile(paths, hydrate = false) {
  const { client, view, styles } = paths;
  const clientPath = `${CLIENT_PATH}/${client}.js`;

  const template = getClientTemplate(view, styles, hydrate);

  if (!template) return;

  try {
    createFile(clientPath, template);
  } catch (error) {
    const createClientError = getCreateClientError(clientPath, error);
    log.error(createClientError);
  }
}

module.exports = {
  createClientDirectory,
  createClientFile,
};

if (process.env.NODE_ENV === 'test') {
  exports = module.exports;
  exports.getClientTemplate = getClientTemplate;
}
