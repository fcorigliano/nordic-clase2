const { POLYFILLS_ENTRY_NAME } = require('./helpers/constants');
const { nordicPagesEnabled } = require('./helpers');
const { addFastRefreshClientEntryIfApply } = require('../fast-refresh');
const telemetry = require('../telemetry');
const { customConfig } = require('../../index');
const { entryPoints, countOfHydratedEntries } = require('./entries');

const nordicPagesBabelPlugin = (preset) => {
  let plugin = [];

  if (nordicPagesEnabled) {
    telemetry.trackEvent('NORDIC_PAGES', 'CLIENT', `PRESET_${preset.toUpperCase()}`);

    plugin = [
      [
        'babel-plugin-remove-exported-code-snippets',
        {
          exports: ['getServerSideProps', 'setPageSettings'],
        },
      ],
    ];
  }

  return plugin;
};

const nordicPagesConfigBlock = () => {
  if (!nordicPagesEnabled) return () => ({});

  return customConfig({
    entry: addFastRefreshClientEntryIfApply(entryPoints),
    optimization: {
      splitChunks: {
        cacheGroups: {
          vendorNordicPage: {
            name: 'vendor.nordic.page',
            chunks: chunk => !!entryPoints[chunk.name] && chunk.name !== POLYFILLS_ENTRY_NAME,
            /* Always create the vendor file as it will always be included in the page */
            minChunks: countOfHydratedEntries > 1 ? Math.max(1, countOfHydratedEntries * 0.8) : 1,
            reuseExistingChunk: true,
          },
        },
      },
    },
  });
};

module.exports = {
  nordicPagesBabelPlugin,
  nordicPagesConfigBlock,
};
