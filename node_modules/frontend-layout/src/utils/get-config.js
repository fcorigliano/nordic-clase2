/**
 * Module dependencies
 */
const config = require('frontend-config');
const {
  getLoginURL,
  getLogoutURL,
  getRegistrationURL,
} = require('@auth/urls');
const layoutConfig = require('../../config/layout-config');

module.exports = function getConfiguration(req, feConfigEnvironment) {
  const { platform } = req;

  const getFromConfig = (key) => config.get(key, platform.id, platform.siteId, feConfigEnvironment);

  // Get labels configuration with platform id, if doesn't exist return default
  const configSchema = layoutConfig[platform.id] && layoutConfig[platform.id][platform.siteId]
    ? layoutConfig[platform.id][platform.siteId] : layoutConfig.ML.MLA;

  // Get URL configuration with platform id, if doesn't exist return default
  const urls = getFromConfig('url') || config.get('url', 'ML', 'MLA', feConfigEnvironment);

  // Override authentication URLs
  urls.login.link = getLoginURL(req);
  urls.logout.link = getLogoutURL(req);

  if (platform.siteId !== 'CBT') {
    urls.registration.link = getRegistrationURL(req);
  }

  const rumPercentage = getFromConfig('rum.percentage');

  const labels = {
    headTitle: getFromConfig('defaultTitle'),
    copyrightSince: getFromConfig('copyrightSince'),
    companyName: getFromConfig('companyName'),
    extraCompanyName: getFromConfig('extraCompanyName'),
    mobileAppsStore: getFromConfig('mobileAppsStore'),
    mobileApps: getFromConfig('mobileApps'),
  };

  const features = getFromConfig('features');

  configSchema.headerMenu = getFromConfig('headerMenuLinks');
  configSchema.mobileHeaderMenu = getFromConfig('mobileHeaderMenuLinks');
  configSchema.a2hsAvailablePaths = getFromConfig('a2hsAvailablePaths');
  configSchema.cleanServiceWorkers = getFromConfig('cleanServiceWorkers');
  configSchema.mobileSplashOnOff = getFromConfig('mobileSplashOnOff');
  configSchema.userMenuGuest = getFromConfig('userMenuGuest');

  return {
    configSchema, urls, labels, rumPercentage, features,
  };
};
