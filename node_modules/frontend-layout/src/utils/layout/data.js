/**
 * Module dependencies
 */
const serialize = require('serialize-javascript');
const countryConfig = require('frontend-country_config');
const MeliGA = require('frontend-analytics/meli-ga');
const bundleMeliGA = require('frontend-analytics/bundle');
const MelidataTrack = require('frontend-melidata/melidata-track');
const bundleMelidata = require('frontend-melidata/bundle');
const getInjectedScripts = require('../get-injected-scripts');

/**
 * Create JS snippet which exposes the initial state of the app
 * @param {Object} initialState
 */
function getInitialState(initialState, lowEnd, nonceCSP) {
  return initialState
    ? getInjectedScripts({
      id: '__PRELOADED_STATE__',
      nonce: nonceCSP,
      lowEnd,
      inline: `(function(win) {win.__PRELOADED_STATE__ = ${serialize(JSON.stringify(initialState))}})(window || this);`,
    }) : '';
}

/**
 * Get lang code by countryId
 * @param {String} countryId
 */
function getLang(countryId) {
  if (!countryId) {
    return null;
  }

  const { locale } = countryConfig(countryId);
  return locale.replace('_', '-');
}

function base({
  initialState,
  countryId,
  scripts,
  lowEnd,
  nonceCSP,
  lang,
}) {
  const initialStateSnippet = getInitialState(initialState, lowEnd, nonceCSP);
  const injectedScripts = getInjectedScripts({
    inline: scripts,
    lowEnd,
    nonce: nonceCSP,
  });

  return {
    lang: lang || getLang(countryId),
    initialStateSnippet,
    injectedScripts,
  };
}

async function tracking(req, nonceCSP) {
  const [analytics, melidata] = await Promise.all([
    MeliGA.peek() ? bundleMeliGA(req, MeliGA) : '',
    MelidataTrack.peek() ? bundleMelidata(req, MelidataTrack, nonceCSP) : '',
  ]);

  const injectedAnalytics = getInjectedScripts({
    inline: analytics,
    nonce: nonceCSP,
  });

  return {
    injectedAnalytics,
    melidata,
  };
}

module.exports = {
  base,
  tracking,
};
