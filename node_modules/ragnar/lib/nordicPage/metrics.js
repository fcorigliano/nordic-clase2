const NewRelic = require('newrelic');

const {
  NORDIC_PAGE_ERROR_NAMESPACE,
  NORDIC_PAGE_BUSINESS_NAMESPACE,
  NORDIC_PAGE_ERROR_CODES,
} = require('./constants');
const { hasDeviceConfigured } = require('./utils');

const resolveMetricRoute = (pageData) => {
  const { route = null, statusCode = null } = pageData;

  return route || `http-error-${statusCode}`;
};

const sendBusinessMetric = (pageData) => {
  const { paths, hooks = null, baseHooksFile = null } = pageData;
  const devicesInPaths = Object.keys(paths);
  const hasSpecificHooks = !!hooks;
  const hasBaseHooks = !!baseHooksFile;

  NewRelic.recordCustomEvent(NORDIC_PAGE_BUSINESS_NAMESPACE, {
    route: resolveMetricRoute(pageData),
    hasWebMobile: hasDeviceConfigured(devicesInPaths, 'mobile'),
    hasDesktop: hasDeviceConfigured(devicesInPaths, 'desktop'),
    hasWebViews: hasDeviceConfigured(devicesInPaths, 'webview'),
    hasTablet: hasDeviceConfigured(devicesInPaths, 'tablet'),
    hasBaseHooks,
    hasSpecificHooks,
  });
};

const sendErrorMetric = ({ func, filePath, route = '', statusCode = '' }) => {
  NewRelic.recordCustomEvent(NORDIC_PAGE_ERROR_NAMESPACE, {
    code: NORDIC_PAGE_ERROR_CODES[func],
    route,
    httpErrorPage: statusCode,
    filePath,
  });
};

module.exports = {
  sendBusinessMetric,
  sendErrorMetric,
};
exports = module.exports;
