const { getLayoutDoneIfApply } = require('../page-segments');
const { getServerSidePropsMiddleware, setPageSettingsMiddleware } = require('./shared-middleware');
const { sendErrorMetric } = require('../metrics');
const NordicPagesProperty = require('./nordic-pages-property');

async function afterRenderMiddleware(req, res, next) {
  let done = null;
  try {
    const { pageHooks } = req.nordicPages;

    if (pageHooks) {
      done = await getLayoutDoneIfApply({ req, res, next, pageHooks });
    }

    NordicPagesProperty.addDoneToServerSidePropsData(req, done);

    next();
  } catch (error) {
    next(error);
  }
}

const nordicPageMiddleware = (req, res, next) => {
  const { route, pageResources } = req.nordicPages;
  const { view } = pageResources;

  getServerSidePropsMiddleware(req, res, next)
    .then(() => {
      setPageSettingsMiddleware(req, res, next)
        .then(() => {
          next();
        })
        .catch((error) => {
          sendErrorMetric({ func: 'SET_PAGE_SETTINGS', route, view });
          next(error);
        });
    })
    .catch((error) => {
      sendErrorMetric({ func: 'GET_SERVER_SIDE_PROPS', route, view });
      next(error);
    });
};

module.exports = { nordicPageMiddleware, afterRenderMiddleware };
