/**
 * Module dependencies
 */
const { TEST, DEVELOPMENT } = require('frontend-env');
const log = require('./logger');

/**
 * Get error body
 * In development environment, encourage use of common components.
 * `develop` param should be used for testing purposes only.
 */
const getErrorMessage = (code, develop = DEVELOPMENT) => (
  develop ? 'Please use the Error components available in your UI Library' : `${code}`
);

/**
 * 500 error handler
 * Error-handling functions have four arguments instead of three.
 */
// eslint-disable-next-line no-unused-vars
const errorHandler500 = (err, req, res, next) => {
  // in case of a csrf attack, return 403 instead of 500 to avoid SLA impact
  const status = err.code === 'EBADCSRFTOKEN' ? 403 : 500;
  log.error(err.stack);
  res.status(status).send(getErrorMessage(status));
};

/**
 * 400 error handler
 */
const errorHandler404 = (req, res) => {
  const status = 404;
  res.status(status).send(getErrorMessage(status));
};

/**
 * Expose 500 & 404 error handlers
 */
module.exports = [
  errorHandler500,
  errorHandler404,
];

/**
 * Expose for testing
 */
if (TEST) {
  exports = module.exports; // eslint-disable-line prefer-destructuring
  exports.errorHandler500 = errorHandler500;
  exports.errorHandler404 = errorHandler404;
  exports.getErrorMessage = getErrorMessage;
}
