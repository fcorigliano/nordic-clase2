/**
 * Module dependencies
 */
const cspConfig = require('./csp');
const csurfConfig = require('./csurf');

/**
 * Default configuration
 */
module.exports = {
  version: '0.0.0',
  server: {
    port: 8080,
    securePort: 8443,
    host: '0.0.0.0',
    static: __dirname,
    bodyParser: {
      json: {
        limit: '100kb',
      },
      urlencoded: {
        limit: '100kb',
        extended: true,
      },
      raw: {
        limit: '100kb',
      },
    },
    csp: cspConfig,
    csrf: csurfConfig,
  },
  middlewares: {
    // forwardTraceRequestId should be first because its populate request.traceRequestId value
    // that is being used by authenticate and others.
    forwardTraceRequestId: true,
    device: true,
    mshopsDetection: false,
    platform: true,
    cookieResponseHandler: true,
    authenticate: true,
    csp: false,
    // Additionally use frontend-config to activate blockSuspiciousTraffic middleware per platform/country
    // Use Ragnar config only to disable it entirely
    blockSuspiciousTraffic: false,
    showPrettyErrors: true,
    cbtDetection: false,
    firstPartyDetection: true,
    preventRenderByEtag: false,
    outdatedBrowser: true,
    httpCookiesTracking: true,
    csrf: true,
  },
  basePath: '/',
  session: {
    ttl: 1800, // 30 minutes
    max_retries: 2,
    retry_delay: 40,
    secret: null,
    cookie: {
      maxAge: 1800000, // 30 minutes
      secure: true,
    },
  },
};
