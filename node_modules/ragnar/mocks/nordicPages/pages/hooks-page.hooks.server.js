"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.afterGetServerSideProps = exports.beforeGetServerSideProps = exports.afterRender = void 0;

function hook1(req, res, next) {
  if (!req.mw) {
    req.mw = {};
  }

  req.mw.mw1 = 'This is hooks 1';
  next();
}

function hook2(req, res, next) {
  if (!req.mw) {
    req.mw = {};
  }

  req.mw.mw2 = 2;
  next();
}

function hook3(req, res, next) {
  if (!req.mw) {
    req.mw = {};
  }

  req.mw.mw3 = true;
  next();
}

function hook4(req, res, next) {
  if (req.nordicPages && req.nordicPages.serverSidePropsData) {
    if (!req.nordicPages.serverSidePropsData.pageState.mw) {
      req.nordicPages.serverSidePropsData.pageState.mw = {};
    }
    req.nordicPages.serverSidePropsData.pageState.mw.mw4 = 'This is hooks 4';
  }
  next();
}

function hook5(req, res, next) {
  if (req.nordicPages && req.nordicPages.serverSidePropsData) {
    if (!req.nordicPages.serverSidePropsData.pageState.mw) {
      req.nordicPages.serverSidePropsData.pageState.mw = {};
    }
    req.nordicPages.serverSidePropsData.pageState.mw.mw5 = 5;
  }

  next();
}

function hook6(req, res, next) {
  if (req.nordicPages && req.nordicPages.serverSidePropsData) {
    if (!req.nordicPages.serverSidePropsData.pageState.mw) {
      req.nordicPages.serverSidePropsData.pageState.mw = {};
    }
    req.nordicPages.serverSidePropsData.pageState.mw.mw6 = true;
  }

  next();
}

function afterRender(req, res, next) {
  return ((error, output) => {
    if (!error) {
      res.send(
        output.replace('</head>', '<meta name="replaced" content="content replaced"></meta></head>'),
      );
    } else {
      res.status(500).send('Something was wrong!');
    }
  });
}

const beforeGetServerSideProps = [hook1, hook2, hook3];
exports.beforeGetServerSideProps = beforeGetServerSideProps;
const afterGetServerSideProps = [hook4, hook5, hook6];
exports.afterGetServerSideProps = afterGetServerSideProps;
exports.afterRender = afterRender;
