const log = require('frontend-logger')('melidata');
const Melidata = require('.');

async function fetchUserConsents(req) {
  const errorMsge = 'Could not get user privacy consents.';
  const melidataCookieConsents = {};

  if (req.meliCookies && req.meliCookies.getCookiesUserPreferences && req.meliCookies.userConsentCookieCategory) {
    try {
      const cookiesPrefs = await req.meliCookies.getCookiesUserPreferences();
      if (cookiesPrefs && 'categories' in cookiesPrefs) {
        await Promise.all(Object.keys(cookiesPrefs.categories).map(async (category) => {
          try {
            const userConsent = await req.meliCookies.userConsentCookieCategory(category);
            melidataCookieConsents[category] = userConsent;
          } catch (err) {
            log.info(`${errorMsge} ${err}`);
          }
        }));

        req.melidataCookieConsents = melidataCookieConsents;
      } else {
        log.info(errorMsge);
      }
    } catch (err) {
      log.info(`${errorMsge} ${err}`);
    }
  } else {
    log.info(errorMsge);
  }
}

module.exports = async function bundle(req, MelidataTrack, nonceCSP) {
  const melidataProps = MelidataTrack.rewind();
  await fetchUserConsents(req);
  const melidata = new Melidata(req);

  melidata.melidataTrack.withUserData(melidata.melidataTrackService.getUserData(req));

  return melidata.track(melidataProps, nonceCSP);
};
