const React = require('react');
const withSideEffect = require('react-side-effect');
const PropTypes = require('prop-types');

const { Component } = React;

class MelidataTrack extends Component {
  render() {
    return null;
  }
}

MelidataTrack.propTypes = {
  id: PropTypes.string,
  path: PropTypes.string,
  event_data: PropTypes.object,
  application: PropTypes.object,
  device: PropTypes.object,
  user: PropTypes.object,
  platform: PropTypes.object,
  type: PropTypes.string,
  isDeferred: PropTypes.bool,
  experiments: PropTypes.object,
  userTime: PropTypes.any,
  userLocalTimeStamp: PropTypes.any,
  lastExperimentsTimeStamp: PropTypes.any,
};

function reducePropsToState(propsList) {
  const props = {};

  propsList.forEach((currentProps) => {
    Object.keys(currentProps).forEach((p) => {
      if (typeof currentProps[p] === 'object' && !Array.isArray(currentProps[p])) {
        props[p] = Object.assign({}, props[p], currentProps[p]);
      } else {
        props[p] = currentProps[p];
      }
    });
  });

  return props;
}

function handleStateChangeOnClient() {
  // Do nothing for now
  return null;
}

function mapStateOnServer(props) {
  return props;
}

module.exports = withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer)(MelidataTrack);
