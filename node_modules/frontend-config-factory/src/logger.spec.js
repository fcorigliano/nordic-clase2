const { GET_PROPERTY_ERROR } = require('./constants/stats');

describe('Logger test', () => {
  const errorMock = jest.fn();
  const infoMock = jest.fn();
  const histogramMock = jest.fn();
  beforeEach(() => {
    jest.resetModules();
    jest.clearAllMocks();
    jest.doMock('frontend-logger', () => jest.fn(() => ({ error: errorMock, info: infoMock })));
    jest.doMock('frontend-statsd/internal', () => ({ histogram: histogramMock }));
  });

  test('logger.error test', () => {
    const logger = require('./logger');
    const loggerInstance = logger('test-module');
    loggerInstance.error({ message: 'test' });
    loggerInstance.error({ message: 'test', statName: GET_PROPERTY_ERROR });
    loggerInstance.error({ message: 'test', statName: GET_PROPERTY_ERROR, log: true });
    expect(errorMock).toHaveBeenCalledTimes(1);
    expect(histogramMock).toHaveBeenCalledTimes(2);
  });

  test('logger.info test', () => {
    const logger = require('./logger');
    const loggerInstance = logger('test-module');
    loggerInstance.info({ message: 'test' });
    loggerInstance.info({ message: 'test', log: true, statName: GET_PROPERTY_ERROR });
    expect(infoMock).toHaveBeenCalledTimes(1);
    expect(histogramMock).toHaveBeenCalledTimes(1);
  });
});
