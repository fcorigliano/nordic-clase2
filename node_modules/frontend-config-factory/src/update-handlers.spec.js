const { getHandlersMethods } = require('./update-handlers');

describe('== Update Handlers tests ==', () => {
  const environment = '0.0.1-test';

  test('Handler should be called when the notify function is executed', () => {
    const {
      addUpdateHandler,
      notifyHandlers,
    } = getHandlersMethods();

    const handler = jest.fn();
    addUpdateHandler(handler, environment);
    notifyHandlers(environment);
    expect(handler).toHaveBeenCalled();
  });

  test('Handler shouldn`t be called when the notify function is executed if remove it', () => {
    const {
      addUpdateHandler,
      removeUpdateHandler,
      notifyHandlers,
    } = getHandlersMethods();

    const handler = jest.fn();
    addUpdateHandler(handler, environment);
    removeUpdateHandler(handler, environment);
    notifyHandlers(environment);
    expect(handler).not.toHaveBeenCalled();
  });

  test('Should do nothing with null parameters', () => {
    const {
      addUpdateHandler,
      removeUpdateHandler,
      notifyHandlers,
    } = getHandlersMethods();

    addUpdateHandler(null);
    removeUpdateHandler(null);
    notifyHandlers(null);
  });
});
