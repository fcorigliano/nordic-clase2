import type { RequestHandler } from 'express';

type Browser = 'chrome' | 'firefox' | 'edge' | 'safari' | 'android' | 'chrome mobile' | 'mobile safari'

declare global {
  namespace Express {
    interface Request {
      /**
       * If [polyfillsMiddleware](https://nordic.adminml.com/docs/polyfills) is used,
       * then this prop shows if the user's browser is considered legacy.
       */
      legacyBrowser?: boolean;
    }
  }
}

/**
 * Polyfills function that returns a middleware in charge of completing req.legacyBrowser variable
 * with the config provided. If config is not present, it will use the default one.
 */
declare function polyfillsMiddleware(config?: polyfillsMiddleware.PolyfillsMiddlewareConfig): RequestHandler;

export = polyfillsMiddleware;

declare namespace polyfillsMiddleware {
  export interface PolyfillsMiddlewareConfig {
    defaultBrowsers: boolean;
    limits: Record<Browser, string>;
  }
}
