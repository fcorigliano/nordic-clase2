
const defaultLimits = require('./default-browser-limits');

function supportsESFeatures(browser, limits) {
  if (!browser) return false;
  const minor = parseInt(browser.minor, 10);
  const major = parseInt(browser.major, 10);
  const versionLimit = limits[browser.name];

  // Default case, we'll polyfill
  if (!versionLimit) return false;

  const [majorLimit, minorLimit] =
    versionLimit
      .split('.')
      .map(number => parseInt(number, 10));

  const limitedByMinorVersion = !!minorLimit;

  if (limitedByMinorVersion) return major > majorLimit || (major === majorLimit && minor >= minorLimit);

  return major >= majorLimit;
}

function polyfillsMiddleware(options = {}) {
  return function polyfills(req, res, next) {
    let legacy = true;
  
    const withPolyfills = options.limits || options.defaultBrowsers;

    if (withPolyfills) {
      const limits = options.limits || defaultLimits;
      legacy = !supportsESFeatures(req.browser, limits);
    }
   
    req.legacyBrowser = legacy;
    next();
  };
}

module.exports = polyfillsMiddleware;

