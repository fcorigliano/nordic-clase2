const filterObjectByRegex = require('./filterObjectByRegex');

/**
  * url with params filtered from regex.
  *
  * @param {string} baseUrl - The base url
  * @param {object} queryParams - An object with all params to be filtered
  * @param {RegExp} paramsToPropagate - Regex with the params that need to be propagated
  * @returns {string} - The final url with all required params
  */
const propagateParams = (baseUrl, queryParams, paramsToPropagate = new RegExp(/^((code|device|gclid)$|(utm_.+|matt_.+))/)) => {
  if (!baseUrl || !queryParams || paramsToPropagate === null || baseUrl === '#') return baseUrl;
  // Add base path in case it is a relative URL, in which case it will be removed later to return a relative URL as well.
  const originalUrl = new URL(baseUrl, 'http://dummy.ml/');
  const filteredParams = filterObjectByRegex(paramsToPropagate, queryParams);
  Object.keys(filteredParams).map((paramKey) => {
    originalUrl.searchParams.append(paramKey.toString(), filteredParams[paramKey.toString()]);
  });
  const finalUrl = originalUrl.toString().replace(/http:\/\/dummy.ml/, '');
  finalUrl.substring(1);
  return finalUrl;
};

module.exports = propagateParams;
