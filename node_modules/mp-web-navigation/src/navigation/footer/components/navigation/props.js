const { mapLinksToUrls } = require('@frontend-navigations/commons/links');
const { getValue } = require('mp-navigation-config');
const { isHidden } = require('../../../../layout-type-detection');
const getDataBySite = require('../../../utils/data-management');

const navigationProps = ({
  type,
  navigationUrls,
  actualLocation,
  platform,
  req,
  queryParams,
}) => {
  if (isHidden(type)) return {};

  const footerItems = getValue({
    key: 'desktopFooterLinks',
    platform,
    req,
  }) || [];
  const performanceItems = getValue({
    key: 'performanceFooterLinks',
    platform,
    req,
  }) || [];
  const landingNavigation = getValue({
    key: 'navHeader.landingNavigation',
    platform,
    req,
  }) || {};

  const {
    enabled,
    structure,
    translations,
    urls: headerUrls,
  } = landingNavigation;

  const data = getDataBySite(enabled, structure, translations, headerUrls, queryParams);

  const navHeaderSections = Object.keys(data).map(item => ({
    id: item,
    title: {
      text: data[`${item}`].header.label,
      href: data[`${item}`].header.url,
    },
    links: data[`${item}`].items.map(link => ({
      id: link.id,
      link: {
        href: link.url,
      },
      name: link.label,
    })),
  }));

  const navAboutSection = {
    id: 'about',
    title: {
      text: 'Acerca de',
      href: '',
    },
    links: mapLinksToUrls({
      links: footerItems,
      urls: navigationUrls,
      currentUrl: actualLocation,
    }),
  };

  const navPerformanceSection = {
    links: mapLinksToUrls({
      links: performanceItems,
      urls: navigationUrls,
      currentUrl: actualLocation,
    }),
  };

  return {
    navHeaderSections,
    navAboutSection,
    navPerformanceSection,
  };
};

module.exports = navigationProps;
