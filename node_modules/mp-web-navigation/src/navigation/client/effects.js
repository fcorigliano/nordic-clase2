(function() {
  let currentSection = null;
  let isOpen = false;
  let isListContainerFocused = false;
  let isNavLinkFocused = false;
  const components = {
    root: document.getElementById('landing-navigation-container--desktop'),
    navLinks: null,
    listContainer: null,
  };

  function showListContainer(navLinkId) {
    document.getElementById(navLinkId).classList.remove('ln-list-container--close');
    document.getElementById(navLinkId).classList.add('ln-list-container--open');

    if (isOpen) {
      document.getElementById(currentSection).classList.remove('ln-list-container--open');
      document.getElementById(currentSection).classList.add('ln-list-container--close');
    } else {
      // Hide the user-menu so it does not get over the list container dropdown
      document.getElementById('nav-header-user-switch').checked = false;
      isOpen = true;
    }

    currentSection = navLinkId;
  }

  // It is defined globally so it can be accessed through the user-menu.js script
  window.hideNavigationListContainers = function() {
    /* eslint-disable no-plusplus */
    for (let i = 0; i < components.listContainer.length; i++) {
      components.listContainer[i].classList.remove('ln-list-container--open');
      components.listContainer[i].classList.add('ln-list-container--close');
    }

    isOpen = false;
    currentSection = null;
  };

  function onListContainer() {
    function handleListContainerEnter(navLinkId) {
      isListContainerFocused = true;
      if (currentSection !== navLinkId) {
        showListContainer(navLinkId);
      }
    }

    for (let i = 0; i < components.listContainer.length; i++) {
      components.listContainer[i].addEventListener('mouseenter', function(element) {
        handleListContainerEnter(element.target.dataset.id);
      });
    }
  }

  function offListContainer() {
    function handleListContainerOut(target) {
      isListContainerFocused = false;
      setTimeout(function() {
        if (isOpen && !isNavLinkFocused && !isListContainerFocused) {
          window.hideNavigationListContainers();
          target.removeEventListener('mouseleave', function(e) { handleListContainerOut(e); });
        }
      }, 300);
    }

    for (let i = 0; i < components.listContainer.length; i++) {
      components.listContainer[i].addEventListener('mouseleave', function(element) {
        handleListContainerOut(element.target);
      });
    }
  }

  function onNavLink() {
    function handleNavLinkEnter(navLinkId) {
      isNavLinkFocused = true;
      if (currentSection !== navLinkId) {
        showListContainer(navLinkId);
      }
    }

    for (let i = 0; i < components.navLinks.length; i++) {
      components.navLinks[i].addEventListener('mouseenter', function(element) {
        const target = element.target;
        const id = target.dataset.id;
        const chevronCenterPosition = target.offsetLeft + target.clientWidth - 2;
        const listContainerCenterPosition = 180;
        document.getElementById(id).style.left = `${chevronCenterPosition - listContainerCenterPosition}px`;
        handleNavLinkEnter(id);
      });
    }
  }

  function offNavLink() {
    function handleNavLinkOut(target) {
      isNavLinkFocused = false;
      setTimeout(() => {
        if (isOpen && !isNavLinkFocused && !isListContainerFocused) {
          window.hideNavigationListContainers();
          target.removeEventListener('mouseleave', function(e) { handleNavLinkOut(e); });
        }
      }, 300);
    }

    for (let i = 0; i < components.navLinks.length; i++) {
      components.navLinks[i].addEventListener('mouseleave', function(element) {
        handleNavLinkOut(element.target);
      });
    }
  }

  function navContainerEffects() {
    components.navLinks = document.getElementsByClassName('ln-nav-link');
    onNavLink();
    offNavLink();
  }

  function listContainerEffects() {
    components.listContainer = components.root.getElementsByClassName('ln-list-container');
    onListContainer();
    offListContainer();
  }

  navContainerEffects();
  listContainerEffects();
})();
