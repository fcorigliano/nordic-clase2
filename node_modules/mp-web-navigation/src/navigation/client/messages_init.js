(function (win) {
  function Messages() {
    this.callbacks = {};
    return this;
  }

  Messages.settings = {
    $message: '#mlMsg',
    $remove: '#mlMsgRemove',
  };

  Messages.prototype.init = function (config) {
    const settings = {
      hash: config.hash,
      url: config.url,
      $message: config.$message || Messages.settings.$message,
      $remove: config.$remove || Messages.settings.$remove,
    };

    if (win.location.hash.indexOf(settings.hash) === 0) {
      const script = document.createElement('script');
      let callbackFunction;
      if (config.callback) {
        callbackFunction = config.callback;
      } else {
        callbackFunction = this.createJsonPCallback(settings);
      }
      script.src = `${settings.url}?callback=${callbackFunction}`;
      document.head.appendChild(script);
    }

    return this;
  };

  Messages.prototype.createJsonPCallback = function (settings) {
    const timestamp = +new Date();
    this.callbacks[timestamp] = function (json) {
      const targetContainer = document.querySelector('main') || document.body;
      targetContainer.insertAdjacentHTML('afterbegin', json.content);
      const removeEl = document.querySelector(settings.$remove);
      if (removeEl) {
        removeEl.addEventListener('click', function () {
          document.querySelector(settings.$message).remove();
        });
      }
    };
    const busName = window.freya ? 'freya' : 'meli';
    return `${busName}.messages.callbacks[${timestamp.toString()}]`;
  };

  if (window.freya) {
    window.freya.messages = new Messages();
  } else if (window.meli) {
    window.meli.messages = new Messages();
  }
}(window));
