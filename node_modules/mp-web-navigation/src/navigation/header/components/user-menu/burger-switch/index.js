/* eslint-disable jsx-a11y/label-has-for */
/* eslint-disable jsx-a11y/label-has-associated-control */
/* eslint-disable security/detect-object-injection */
/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */
const React = require('react');
const PropTypes = require('prop-types');

const BurgerSwitch = (props) => {
  const { isLoggedIn, siteId } = props;
  const mainClassName = isLoggedIn ? 'nav-header-user-burger-switch' : 'nav-header-guest-burger-switch';
  const accessibilityLabels = { default: 'Abrir menu / Cerrar menu', MLB: 'Abrir menu / Fechar menu' };
  const currentAriaLabel = accessibilityLabels[siteId] || accessibilityLabels.default;

  return (
    <label
      id="nav-header-user-trigger-burger"
      className={mainClassName}
      htmlFor="nav-header-user-switch"
      role="button"
      aria-label={currentAriaLabel}
    >
      <i className={`${mainClassName}__icon`} />
    </label>
  );
};

BurgerSwitch.propTypes = {
  isLoggedIn: PropTypes.bool.isRequired,
  siteId: PropTypes.string.isRequired,
};

module.exports = BurgerSwitch;
