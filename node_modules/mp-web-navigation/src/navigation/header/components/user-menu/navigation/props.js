const { getValue } = require('mp-navigation-config');
const isUserLoggedIn = require('@frontend-navigations/commons/is-user-logged-in');
const mapLinksToUrls = require('../../../../utils/map-links-to-urls');
const { isHidden } = require('../../../../../layout-type-detection');
const userInfoProps = require('./user-info/props');
const landingNavigationProps = require('./landing-navigation/props');

const navigationProps = (props) => {
  const {
    navigationUrls,
    type,
    platform,
    req,
    device,
  } = props;
  const navHeader = getValue({
    key: 'navHeader',
    req,
    platform,
  });

  if (isHidden(type) || !navHeader) return {};

  const { menuLinks } = navHeader;
  const isLoggedIn = isUserLoggedIn(props);
  let links;

  const uiNavigationVersion = getValue({
    key: 'uiNavigationVersion',
    req,
    platform,
  });

  if (!isLoggedIn) {
    links = mapLinksToUrls({
      urls: navigationUrls,
      items: menuLinks.guest,
    });

    return {
      links,
      deviceType: device.type,
      uiNavigationVersion,
      landingNavigation: landingNavigationProps(props),
    };
  }

  links = mapLinksToUrls({
    urls: navigationUrls,
    items: menuLinks.logged,
  });

  return {
    links,
    isLoggedIn,
    userInfo: userInfoProps(props),
    deviceType: device.type,
    uiNavigationVersion,
    landingNavigation: landingNavigationProps(props),
  };
};

module.exports = navigationProps;
