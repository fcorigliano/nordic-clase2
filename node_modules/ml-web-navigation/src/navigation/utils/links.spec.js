const Module = require('./links');
const icons = require('./icons');

const originalProps = {
  device: {
    osName: 'android',
  },
  platform: {
    id: 'ML',
    siteId: 'MLA',
  },
};

icons.inject(originalProps);

describe('Mercado Libre Navigation', () => {
  describe('Utils links', () => {
    describe('setHashLink', () => {
      it('returns url with hash link', () => {
        const url = 'https://www.mercadolibre.com.ar';
        const hash = 'hash';

        const result = Module.setHashLink(url, hash);

        expect(result).toEqual(`${url}#${hash}`);
      });

      it('returns url with no hash since has is undefined', () => {
        const url = 'https://www.mercadolibre.com.ar';

        const result = Module.setHashLink(url);

        expect(result).toEqual(url);
      });
    });

    describe('isUrlValid', () => {
      it('returns true since url is valid', () => {
        const url = {
          link: 'https://www.mercadolibre.com.ar',
        };

        expect(Module.isUrlValid(url)).toEqual(true);
      });

      it('returns false since url is empty', () => {
        const url = {};

        expect(Module.isUrlValid(url)).toEqual(false);
      });

      it('returns false since url.link is empty', () => {
        const url = {
          link: null,
        };

        expect(Module.isUrlValid(url)).toEqual(false);
      });
    });

    describe('isSameAsCurrentURL', () => {
      it('returns true since urls are the same', () => {
        const actualLocation = 'https://www.mercadolibre.com.ar';
        const url = 'https://www.mercadolibre.com.ar';

        const result = Module.isLinkSameAsCurrentURL(actualLocation, url);

        expect(result).toEqual(true);
      });

      it('returns true since urls are the same after the www.home is removed', () => {
        const actualLocation = 'https://www.mercadolibre.com.ar';
        const url = 'https://home.mercadolibre.com.ar';

        const result = Module.isLinkSameAsCurrentURL(actualLocation, url);

        expect(result).toEqual(true);
      });

      it('returns true since urls are the same after the last slashes are removed', () => {
        const actualLocation = 'https://www.mercadolibre.com.ar/';
        const url = 'https://www.mercadolibre.com.ar';

        const result = Module.isLinkSameAsCurrentURL(actualLocation, url);

        expect(result).toEqual(true);
      });

      it('returns false since urls are not the same', () => {
        const actualLocation = 'https://www.mercadolibre.com.ar/ofertas';
        const url = 'https://www.mercadolibre.com.ar';

        const result = Module.isLinkSameAsCurrentURL(actualLocation, url);

        expect(result).toEqual(false);
      });
    });

    describe('generateLink', () => {
      it('generates a specific user link with no side effects', () => {
        const url = { name: 'Inicio', link: 'https://home.mercadolibre.com.ar' };
        const link = 'home';
        const currentUrl = 'https://www.mercadolibre.com.ar/';

        const generatedUserLink = Module.generateLink({
          url,
          link,
          currentUrl,
          originalProps,
        });

        expect(generatedUserLink.icon).toBeDefined();
        expect(generatedUserLink.id).toBeDefined();
        expect(generatedUserLink.link).toBeDefined();
        expect(generatedUserLink.link.href).toBeDefined();
        expect(generatedUserLink.name).toBeDefined();
        expect(generatedUserLink.selected).toBeDefined();
        expect(generatedUserLink.selected).toEqual(true);
      });

      it('generates a specific user link with side effects', () => {
        const url = { name: 'Inicio', link: 'https://home.mercadolibre.com.ar' };
        const link = 'downloadAppStore';
        const currentUrl = 'https://www.mercadolibre.com.ar/';
        const enhancement = {
          enhance: (urlLink, props) => ({ ...urlLink, osName: props.device.osName }),
        };

        const generatedUserLink = Module.generateLink({
          url,
          link,
          currentUrl,
          originalProps,
          enhancement,
        });

        expect(generatedUserLink.icon).toBeDefined();
        expect(generatedUserLink.id).toBeDefined();
        expect(generatedUserLink.link).toBeDefined();
        expect(generatedUserLink.link.href).toBeDefined();
        expect(generatedUserLink.name).toBeDefined();
        expect(generatedUserLink.osName).toBeDefined();
        expect(generatedUserLink.selected).toBeDefined();
        expect(generatedUserLink.selected).toEqual(true);
      });

      it('generates a specific user link with side effects and className function', () => {
        const url = { name: 'Inicio', link: 'https://home.mercadolibre.com.ar' };
        const link = 'downloadAppStore';
        const currentUrl = 'https://www.mercadolibre.com.ar/';
        const enhancement = {
          enhance: (urlLink, props) => ({ ...urlLink, osName: props.device.osName }),
        };

        const generatedUserLink = Module.generateLink({
          url,
          link,
          currentUrl,
          originalProps,
          className: linkId => `option-${linkId}`,
          enhancement,
        });

        expect(generatedUserLink.icon).toBeDefined();
        expect(generatedUserLink.id).toBeDefined();
        expect(generatedUserLink.link).toBeDefined();
        expect(generatedUserLink.link.href).toBeDefined();
        expect(generatedUserLink.link.className).toEqual(`option-${link}`);
        expect(generatedUserLink.name).toBeDefined();
        expect(generatedUserLink.osName).toBeDefined();
        expect(generatedUserLink.selected).toBeDefined();
        expect(generatedUserLink.selected).toEqual(true);
      });
    });

    describe('mapLinksToUrls', () => {
      it('returns links with enhancements', () => {
        const url = { name: 'Inicio', link: 'https://home.mercadolibre.com.ar' };
        const link = 'downloadAppStore';
        const currentUrl = 'https://www.mercadolibre.com.ar/';
        const enhancement = {
          enhance: (urlLink, props) => ({ ...urlLink, osName: props.device.osName }),
        };

        const links = Module.mapLinksToUrls({
          links: [link],
          currentUrl,
          urls: {
            [link]: url,
          },
          enhancements: {
            [link]: enhancement,
          },
          originalProps,
        });

        const generatedUserLink = links[0];

        expect(Array.isArray(links)).toEqual(true);
        expect(generatedUserLink.icon).toBeDefined();
        expect(generatedUserLink.id).toBeDefined();
        expect(generatedUserLink.link).toBeDefined();
        expect(generatedUserLink.link.href).toBeDefined();
        expect(generatedUserLink.name).toBeDefined();
        expect(generatedUserLink.osName).toBeDefined();
        expect(generatedUserLink.selected).toBeDefined();
        expect(generatedUserLink.selected).toEqual(true);
      });

      it('returns links with no enhancements', () => {
        const url = { name: 'Inicio', link: 'https://home.mercadolibre.com.ar' };
        const link = 'downloadAppStore';
        const currentUrl = 'https://www.mercadolibre.com.ar/';

        const links = Module.mapLinksToUrls({
          links: [link],
          currentUrl,
          urls: {
            [link]: url,
          },
          originalProps,
        });

        const generatedUserLink = links[0];

        expect(Array.isArray(links)).toEqual(true);
        expect(generatedUserLink.icon).toBeDefined();
        expect(generatedUserLink.id).toBeDefined();
        expect(generatedUserLink.link).toBeDefined();
        expect(generatedUserLink.link.href).toBeDefined();
        expect(generatedUserLink.name).toBeDefined();
        expect(generatedUserLink.selected).toBeDefined();
        expect(generatedUserLink.selected).toEqual(true);
      });
    });
  });
});
