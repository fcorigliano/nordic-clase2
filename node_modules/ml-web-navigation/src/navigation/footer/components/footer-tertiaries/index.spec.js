const defaultProps = {
  someProp: 'somePropValue',
};

describe('Mercado Libre Navigation', () => {
  beforeEach(() => jest.resetModules());

  describe('Footer Tertiaries', () => {
    it('should return a link when applies', () => {
      const doesApply = jest.fn().mockReturnValue(true);
      const added = {
        link: {
          href: 'otherHref',
          name: 'otherName',
        },
      };
      const props = jest.fn().mockReturnValue(added);
      jest.doMock('../sites/sic', () => ({
        doesApply,
        props,
        Tertiary: {},
      }));

      const FooterTertiaries = require('.');

      const result = FooterTertiaries(defaultProps);

      expect(result.length).toEqual(1);
      expect(doesApply).toHaveBeenCalledWith(defaultProps);
      expect(props).toHaveBeenCalledWith(defaultProps);
    });

    it('should not return a link when does not applies', () => {
      const doesApply = jest.fn().mockReturnValue(false);
      const props = jest.fn();
      jest.doMock('../sites/sic', () => ({
        doesApply,
        props,
        Tertiary: {},
      }));
      const FooterTertiaries = require('.');

      const result = FooterTertiaries(defaultProps);

      expect(result).toBe(null);
      expect(doesApply).toHaveBeenCalledWith(defaultProps);
      expect(props).not.toHaveBeenCalled();
    });
  });
});
