/* eslint-disable security/detect-non-literal-fs-filename */
const footerLoggedInMenuProps = require('./props');

const downloadAppScripts = text => [{
  type: 'html',
  typeData: `<script>console.log('${text}')</script>`,
}];

const baseProps = {
  type: 'plus',
  platform: {
    siteId: 'MLA',
    id: 'ML',
    domain: 'mercadolibre.com.ar',
    countryId: 'AR',
  },
  feConfigEnvironment: 'test',
  req: {},
  urls: {
    baseDomain: { link: 'https://www.mercadolibre.com.ar' },
    mainDomain: { link: 'https://www.mercadolibre.com.ar' },
    login: {
      link: 'https://www.mercadolibre.com/jms/mla/lgz/login',
      name: 'Ingresá',
    },
    changeNickName: {
      link: 'https://myaccount.mercadolibre.com.ar/profile/changeNickName',
      name: 'Modificar Nombre',
    },
    logout: {
      link: 'https://www.mercadolibre.com/jms/mla/lgz/logout',
      name: 'Salir',
    },
    credits: {
      link: 'https://www.mercadolibre.com.ar/credits',
      name: 'Mercado Créditos',
    },
    purchases: {
      link: 'https://www.mercadolibre.com.ar/compras',
      name: 'Compras',
    },
    home: { link: 'https://www.mercadolibre.com.ar/', name: 'Inicio' },
    myAccount: {
      link: 'https://www.mercadolibre.com.ar/my-account',
      name: 'Mi cuenta',
    },
    bookmarks: {
      link: 'https://www.mercadolibre.com.ar/bookmarks',
      name: 'Favoritos',
    },
    syi: {
      link: 'https://www.mercadolibre.com.ar/vender',
      name: 'Vender',
    },
    registration: {
      link: 'https://www.mercadolibre.com.ar/registration',
      name: 'Creá tu cuenta',
    },
    listing: { link: 'https://www.mercadolibre.com.ar/listing' },
    cpLocation: {
      link: 'https://www.mercadolibre.com.ar/navigation/addresses-hub',
      name: 'Enviar a',
    },
    cart: { link: 'https://www.mercadolibre.com.ar/gz/cart', name: 'Carrito' },
    jobs: {
      link: 'https://www.mercadolibre.com.ar/jobs',
      name: 'Trabaja con nosotros',
    },
    loyalty: {
      link: 'https://www.mercadolibre.com.ar/puntos',
      name: 'Mercado Puntos',
    },
    downloadAppLanding: {
      link: 'https://www.mercadolibre.com.ar/download-app-landing',
      name: 'App Landing',
    },
    downloadAppStore: {
      link: 'https://www.mercadolibre.com.ar/download-app-store',
      name: 'App Store',
    },
    help: { link: 'https://www.mercadolibre.com.ar/ayuda', name: 'Ayuda' },
    helpMain: { link: 'https://www.mercadolibre.com.ar/ayuda', name: 'Ayuda' },
    honeyPath: { link: 'https://hp.mercadolibre.com/', name: 'Mercado Libre' },
  },
  actualLocation: 'https://www.mercadolibre.com.ar/',
  labels: {
    headTitle: 'Mercado Libre',
  },
  cdn: {
    name: 'cdn-name',
    link: 'https://ml.mercadolibre.com',
    cssFileSuffix: '',
  },
  defaultNavigationCSS: false,
  modelessBoxVersion: '-1',
  navigationFeatures: {
    snackbarVersion: '1.0.0',
    searchBoxVersion: '1.0.0',
    modalVersion: '1.0.0',
    categoriesVersion: '1.0.0',
    userMenuVersion: '1.0.0',
    onBoardingCPVersion: '1.0.0',
  },
  configSchema: {
    mobileHeaderMenu: { guest: [['home']], logged: [['home']] },
    footerAccess: {
      hidden: false,
      title: 'Mas información',
      items: [
        {
          id: 'about',
          title: 'Acerca de',
          items: ['institucional', 'investor', 'trends'],
        },
        {
          id: 'otherSites',
          title: 'Otros sitios',
          items: [
            'developers',
            'mpago',
            'mshops',
            'menvios',
            'mclics',
            'mideas',
          ],
        },
        {
          id: 'help',
          title: 'Ayuda',
          items: ['helpBuy', 'helpSell', 'helpContact', 'helpSecurity', 'helpClaims'],
        },
        {
          id: 'socialNetworks',
          title: 'Redes sociales',
          items: ['twitter', 'facebook', 'instagram', 'youtube'],
        },
        {
          id: 'myAccount',
          title: 'Mi cuenta',
          items: ['myAccount', 'bookmarks', 'syi'],
          itemsGuest: ['login', 'syi'],
        },
      ],
    },
    footer: {
      items: ['jobs', 'tyc', 'politics', 'helpMain'],
    },
    i18n: {
      inputLabel: 'Ingresá lo que quieras encontrar',
      placeholder: 'Buscar productos, marcas y más…',
      iconLabel: 'Buscar',
      searchInputLabel: 'Ingresá lo que quieras encontrar',
      searchPlaceholder: 'Buscar productos, marcas y más…',
      searchIconLabel: 'Buscar',
      searchPlaceholderMobile: 'Estoy buscando..',
    },
  },
  device: {
    type: 'mobile',
    mobile: true,
    desktop: false,
    lowEnd: false,
    osName: 'android',
  },
  browser: {
    name: 'chrome',
    major: '80',
    support: {
      webp: false,
      prefetch: true,
      preconnect: true,
      pushNotifications: false,
      serviceWorkers: false,
      brotli: true,
      sameSite: true,
    },
  },
  cartInfo: {
    badge_icon: { quantity: 0 },
    location: { type: 'address', value: '1014518121' },
  },
  features: {
    menuShippingLocation: {
      shippingMobileContext: 'cart',
      isShippingLocation: true,
    },
  },
  notificationsInfo: { count: 0 },
  cpInfo: {
    label: 'Enviar a Capital Federal',
    title: 'Enviar a',
  },
  exhibitorInfo: {
    permalink: 'https://www.mercadolibre.com.ar/exhibitor',
    picture: 'https://www.mercadolibre.com.ar/exhibitor.jpeg',
    title: 'Exhibitor',
  },
  downloadApp: {
    'page-top': downloadAppScripts('page-top'),
    'page-bottom': downloadAppScripts('page-bottom'),
    'header-top': downloadAppScripts('header-top'),
    'header-bottom': downloadAppScripts('header-bottom'),
    'footer-top': downloadAppScripts('footer-top'),
    'footer-bottom': downloadAppScripts('footer-bottom'),
  },
  overrides: {},
  navigationPIIData: {},
};

baseProps.navigationUrls = baseProps.urls;

describe('Mercado Libre Navigation', () => {
  describe('Footer Logged in User Menu props', () => {
    it('returns props needed for the logged in user menu component', () => {
      const loggedInProps = { ...baseProps,
        user: {
          nickname: 'test',
        } };
      const props = footerLoggedInMenuProps(loggedInProps);

      expect(props.lazyLoad).toBeDefined();
      expect(props.lazyLoad).toEqual('on');
      expect(props.link).toEqual(baseProps.urls.myAccount.link);
      expect(props.username).toEqual(loggedInProps.user.nickname);

      // Only check that the props for the avatar are there, no need to test their functionality since it is already tested elsewhere
      expect(props.hasPicture).toBeDefined();
      expect(props.lowDensityPictureUrl).toBeDefined();
      expect(props.highDensityPictureUrl).toBeDefined();
    });

    it('returns props needed for the logged in user menu component for desktop', () => {
      const loggedInProps = { ...baseProps,
        user: {
          nickname: 'test',
        },
        device: {
          desktop: true,
        } };
      const props = footerLoggedInMenuProps(loggedInProps);

      expect(props.lazyLoad).toBeDefined();
      expect(props.lazyLoad).toEqual('off');
      expect(props.link).toEqual(baseProps.urls.myAccount.link);
      expect(props.username).toEqual(loggedInProps.user.nickname);

      // Only check that the props for the avatar are there, no need to test their functionality since it is already tested elsewhere
      expect(props.hasPicture).toBeDefined();
      expect(props.lowDensityPictureUrl).toBeDefined();
      expect(props.highDensityPictureUrl).toBeDefined();
    });

    it('returns props needed for the logged in user menu using firstname instead of nickname', () => {
      const loggedInProps = { ...baseProps,
        type: 'hidden',
        navigationPIIData: {
          preferredName: 'test firstname',
        } };
      const props = footerLoggedInMenuProps(loggedInProps);

      expect(props.lazyLoad).toBeDefined();
      expect(props.lazyLoad).toEqual('on');
      expect(props.link).toEqual(loggedInProps.urls.myAccount.link);
      expect(props.username).toEqual(loggedInProps.navigationPIIData.preferredName);

      // Only check that the props for the avatar are there, no need to test their functionality since it is already tested elsewhere
      expect(props.hasPicture).toBeDefined();
      expect(props.lowDensityPictureUrl).toBeDefined();
      expect(props.highDensityPictureUrl).toBeDefined();
    });
  });
});
