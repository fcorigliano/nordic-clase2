const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const LoggedInUserWelcome = require('.');

const baseProps = {
  hasLoyalty: true,
  title: 'Test',
  firstName: 'Test',
  nickname: 'Test',
  email: 'test@test.com',
  loyalty: {
    level: 4,
    href: 'https://www.mercadolibre.com.ar',
    levelName: 'Aficionado',
  },
  avatar: {
    hasPicture: false,
    hasLoyalty: false,
    lazyLoad: 'off',
    loyalty: {
      percentage: 25,
      level: 4,
    },
    action: 'https://www.mercadolibre.com.ar/user/picture',
  },
};

describe('Mercado Libre Navigation', () => {
  describe('Logged In Welcome User Menu Mobile Component', () => {
    it('matches the default snapshot for LoggedInUserWelcome component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <LoggedInUserWelcome
          {...baseProps}
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });

    it('matches the default snapshot for LoggedInUserWelcome component with no loyalty', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <LoggedInUserWelcome
          {...baseProps}
          hasLoyalty={false}
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });

    it('matches the default snapshot for LoggedInUserWelcome component showing name from firstName and not title', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <LoggedInUserWelcome
          {...baseProps}
          title={null}
          firstName="First name"
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });

    it('matches the default snapshot for LoggedInUserWelcome component showing name from nickname and not title nor firstName', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <LoggedInUserWelcome
          {...baseProps}
          title={null}
          firstName={null}
          nickname="Nick name"
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
  });
});
