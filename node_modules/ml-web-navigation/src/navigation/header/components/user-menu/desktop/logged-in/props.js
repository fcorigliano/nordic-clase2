const welcomeProps = require('./welcome/props');
const { mapLinksToUrls } = require('../../../../../utils/links');
const enhancements = require('./enhancements');
const modelessBoxProps = require('../../../../../widgets/modeless-box/props');
const { isLite } = require('../../../../../../layout-type-detection');
const userWidgetProps = require('../../../../../widgets/user-menu/props');

// TODO: move to conf
const userLinks = [
  { link: 'purchases' },
  { link: 'bookmarks' },
  {
    link: 'notificationsCenter',
    ariaLabel: true,
  },
];

const HELP_LINK = 'helpMain';
const defaultLiteUserLinks = [
  HELP_LINK,
];

const loggedInUserMenuProps = (props) => {
  const { urls, actualLocation, type, overrides } = props;
  const liteUserLinks = (overrides && overrides.liteUserLinks) || defaultLiteUserLinks;

  const links = mapLinksToUrls({
    links: isLite(type) ? liteUserLinks : userLinks,
    urls,
    currentUrl: actualLocation,
    originalProps: props,
    hash: 'nav-header',
    enhancements,
    className: link => (link === HELP_LINK ? 'option-help' : `option-${link}`),
  });

  return {
    welcome: welcomeProps(props),
    modelessBox: modelessBoxProps(props),
    userWidget: ((overrides && overrides.userMenuWidgetProps) || userWidgetProps)(props),
    userLinks: {
      links,
    },
    searchFocus: props.searchFocus,
  };
};

module.exports = loggedInUserMenuProps;
