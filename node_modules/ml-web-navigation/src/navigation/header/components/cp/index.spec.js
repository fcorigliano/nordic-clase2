const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const CP = require('.');

const CPDesktopProps = {
  label: 'Enviar a',
  title: 'Capital Federal',
  linkCP: {
    href: 'https://www.mercadolibre.com.ar/navigation/addresses-hub?go=https%3A%2F%2Fdesa.mercadolibre.com.ar%3A8443%2F',
    className: 'nav-cp',
    'data-js': 'cp',
  },
  modalWidget: {
    baseUrl: 'https://ml.static.com',
    version: '1.0.0',
  },
  onboardingWidget: {
    show: true,
    baseUrl: 'https://http2.mlstatic.com',
    cpInfo: { inferred: true, zipcode: '1234' },
    domain: 'mercadolibre.com.ar',
    siteId: 'MLA',
    locale: 'es_AR',
  },
};

describe('Mercado Libre Navigation', () => {
  describe('CP Component', () => {
    it('matches the default snapshot for CP component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <CP
          isDesktop={false}
          application="frontend-navigations"
          linkCP={{
            href: 'https://www.mercadolibre.com.ar/navigation',
            className: 'nav-cp',
            'data-js': 'cp',
          }}
          label="Enviar a"
          selector="[data-js=cp]"
          show
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
    it('matches the default snapshot for CP for desktop', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <CP
          isDesktop
          application="frontend-navigations"
          {...CPDesktopProps}
          selector="[data-js=cp]"
          show
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
    it('matches the default snapshot for CP for desktop and no title', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <CP
          isDesktop
          application="frontend-navigations"
          {...CPDesktopProps}
          selector="[data-js=cp]"
          show
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
    it('matches CP with show false', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <CP
          isDesktop
          application="frontend-navigations"
          link={{
            className: 'nav-cp',
          }}
          label="Ingresa tu CP"
          selector="[data-js=cp]"
          show={false}
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
  });
});
