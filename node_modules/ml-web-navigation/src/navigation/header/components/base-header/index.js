const React = require('react');
const PropTypes = require('prop-types');
const classNames = require('classnames');
const Logo = require('../logo');
const UserMenu = require('../user-menu');
const Notifications = require('../notifications');
const SkipToMainContent = require('../skip-to-main-content');
const DownloadApp = require('../../../widgets/download-app');

const namespace = 'nav-header';
const navBounds = 'nav-bounds';
const BaseHeader = (props) => {
  const {
    children,
    siteId,
    type,
    logo,
    melilab,
    navMenuSwitchId,
    isDesktop,
    notifications,
    userMenu,
    showUserMenu,
    showNotifications,
    skipToMainContent,
    showLogo,
    cart,
    cp,
    downloadApp,
  } = props;
  const className = classNames(namespace, `${namespace}-${type}`);
  const classNameBounds = classNames(navBounds, {
    [`${navBounds}-with-cart`]: cart.show,
    [`${navBounds}-with-cp`]: cp.show,
  });

  return (
    <>
      <DownloadApp position={downloadApp['header-top']} />
      <header role="banner" data-siteid={siteId} className={className}>
        <div className={classNameBounds}>
          { isDesktop && <SkipToMainContent {...skipToMainContent} /> }
          { showLogo && <Logo url={logo.url} label={logo.label} melilab={melilab} /> }
          <div className={`${namespace}-menu-wrapper`}>
            { showUserMenu && <UserMenu
              navMenuSwitchId={navMenuSwitchId}
              {...userMenu}
            /> }
            { showNotifications && <Notifications {...notifications} /> }
          </div>
          {children}
        </div>
      </header>
      <DownloadApp position={downloadApp['header-bottom']} />
    </>
  );
};

BaseHeader.propTypes = {
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]),
  siteId: PropTypes.string.isRequired,
  showNotifications: PropTypes.bool,
  showUserMenu: PropTypes.bool,
  isDesktop: PropTypes.bool.isRequired,
  showLogo: PropTypes.bool,
  navMenuSwitchId: PropTypes.string.isRequired,
  logo: PropTypes.shape({
    url: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
  cart: PropTypes.shape({
    show: PropTypes.bool.isRequired,
  }).isRequired,
  cp: PropTypes.shape({
    show: PropTypes.bool.isRequired,
  }).isRequired,
  type: PropTypes.string.isRequired,
  melilab: PropTypes.object.isRequired,
  userMenu: PropTypes.object.isRequired,
  skipToMainContent: PropTypes.object.isRequired,
  notifications: PropTypes.object.isRequired,
  downloadApp: PropTypes.object,
};


BaseHeader.defaultProps = {
  children: null,
  showUserMenu: true,
  showLogo: true,
  showNotifications: true,
  downloadApp: {},
};

module.exports = BaseHeader;
