const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const SearchboxBase = require('./searchbox-base');

describe('Mercado Libre Navigation', () => {
  describe('Searchbox Base  Component', () => {
    it('matches the default snapshot for searchbox base component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <SearchboxBase
          isFocus={false}
          inputLabel="Ingresá lo que quieras encontrar"
          placeholder="Buscar productos, marcas y más…"
          iconLabel="Buscar"
          isLowEnd={false}
          action="https://www.mercadolibre.com.ar/jm/search"
          widget={{
            baseUrl: '',
            platformId: '',
            siteId: '',
            searchEndpoint: '',
            categoryEndpoint: '',
            isUserLoggedIn: false,
            siteDomain: '',
            deviceType: '',
            version: '',
          }}
        >
          <span />
        </SearchboxBase>
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });

    it('matches the default snapshot for searchbox base component with defaultValue', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <SearchboxBase
          isFocus={false}
          defaultValue="iphone"
          inputLabel="Ingresá lo que quieras encontrar"
          placeholder="Buscar productos, marcas y más…"
          iconLabel="Buscar"
          isLowEnd={false}
          action="https://www.mercadolibre.com.ar/jm/search"
          widget={{
            baseUrl: '',
            platformId: '',
            siteId: '',
            searchEndpoint: '',
            categoryEndpoint: '',
            isUserLoggedIn: false,
            siteDomain: '',
            deviceType: '',
            version: '',
          }}
        >
          <span />
        </SearchboxBase>
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
  });
  it('matches the lowEnd snapshot for searchbox base component', () => {
    const renderer = new ShallowRenderer();
    const component = (
      <SearchboxBase
        isFocus={false}
        inputLabel="Ingresá lo que quieras encontrar"
        placeholder="Buscar productos, marcas y más…"
        iconLabel="Buscar"
        isLowEnd
        action="https://www.mercadolibre.com.ar/jm/search"
        widget={{
          baseUrl: '',
          platformId: '',
          siteId: '',
          searchEndpoint: '',
          categoryEndpoint: '',
          isUserLoggedIn: false,
          siteDomain: '',
          deviceType: '',
          version: '',
        }}
      >
        <span />
      </SearchboxBase>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });
  it('matches the focus input snapshot for searchbox base component', () => {
    const renderer = new ShallowRenderer();
    const component = (
      <SearchboxBase
        isFocus
        inputLabel="Ingresá lo que quieras encontrar"
        placeholder="Buscar productos, marcas y más…"
        iconLabel="Buscar"
        isLowEnd={false}
        action="https://www.mercadolibre.com.ar/jm/search"
        widget={{
          baseUrl: '',
          platformId: '',
          siteId: '',
          searchEndpoint: '',
          categoryEndpoint: '',
          isUserLoggedIn: false,
          siteDomain: '',
          deviceType: '',
          version: '',
        }}
      >
        <span />
      </SearchboxBase>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });
  it('matches the inputType="search" input snapshot for searchbox base component', () => {
    const renderer = new ShallowRenderer();
    const component = (
      <SearchboxBase
        isFocus={false}
        inputLabel="Ingresá lo que quieras encontrar"
        placeholder="Buscar productos, marcas y más…"
        iconLabel="Buscar"
        isLowEnd={false}
        action="https://www.mercadolibre.com.ar/jm/search"
        inputType="search"
        widget={{
          baseUrl: '',
          platformId: '',
          siteId: '',
          searchEndpoint: '',
          categoryEndpoint: '',
          isUserLoggedIn: false,
          siteDomain: '',
          deviceType: '',
          version: '',
        }}
      >
        <span />
      </SearchboxBase>
    );
    expect(renderer.render(component)).toMatchSnapshot();
  });
});
