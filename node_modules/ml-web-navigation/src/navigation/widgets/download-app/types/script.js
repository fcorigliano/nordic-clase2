/* eslint security/detect-object-injection: 0 */

const React = require('react');
const PropTypes = require('prop-types');
const Script = require('frontend-script');

const propsProxy = [{
  from: 'src',
  to: 'src',
  propType: PropTypes.string,
}, {
  from: 'on',
  to: 'on',
  propType: PropTypes.string,
}, {
  from: 'callback-content',
  to: 'children',
  propType: PropTypes.string,
}, {
  from: 'priority',
  to: 'priority',
  propType: PropTypes.number,
}, {
  from: 'preload',
  to: 'preload',
  propType: PropTypes.bool,
}];

const DownloadAppScript = ({ data }) => {
  const props = propsProxy.reduce((temporalProps, prop) => {
    if (data[prop.from] !== undefined) {
      temporalProps[prop.to] = data[prop.from];
    }
    return temporalProps;
  }, {});
  return (
    <Script {...props} />
  );
};

DownloadAppScript.propTypes = {
  data: PropTypes.shape(propsProxy.reduce((dataPropTypes, prop) => {
    dataPropTypes[prop.from] = prop.propType;
    return dataPropTypes;
  }, {})).isRequired,
};

module.exports = DownloadAppScript;
