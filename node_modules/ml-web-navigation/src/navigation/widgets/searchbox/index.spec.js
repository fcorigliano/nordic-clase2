const React = require('react');
const ShallowRenderer = require('react-test-renderer/shallow');
const SearchboxWidget = require('.');

describe('Mercado Libre Navigation', () => {
  describe('Searchbox Component', () => {
    it('matches the default snapshot for searchbox widget component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <SearchboxWidget
          platformId="ML"
          siteId="MLA"
          baseUrl="https://http2.mlsatatic.com"
          version="3.0.0"
          searchEndpoint="https://www.mercadolibre.com/search"
          categoryEndpoint="https://www.mercadolibre.com/categories"
          isUserLoggedIn={false}
          siteDomain="mercadolibre.com.ar"
          deviceType="mobile"
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
    it('matches the snapshot for searchbox widget without version component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <SearchboxWidget
          platformId="ML"
          siteId="MLA"
          baseUrl="https://http2.mlsatatic.com"
          searchEndpoint="https://www.mercadolibre.com/search"
          categoryEndpoint="https://www.mercadolibre.com/categories"
          isUserLoggedIn={false}
          siteDomain="mercadolibre.com.ar"
          deviceType="mobile"
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
    it('matches the snapshot for searchbox widget user logged component', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <SearchboxWidget
          platformId="ML"
          siteId="MLA"
          version="3.0.0"
          baseUrl="https://http2.mlsatatic.com"
          searchEndpoint="https://www.mercadolibre.com/search"
          categoryEndpoint="https://www.mercadolibre.com/categories"
          isUserLoggedIn
          siteDomain="mercadolibre.com.ar"
          deviceType="mobile"
        />
      );
      expect(renderer.render(component)).toMatchSnapshot();
    });
  });
});
