const LoansService = require('./index');

const baseRequest = {
  platform: {
    id: 'ML',
    siteId: 'MLA',
  },
  device: {
    mobile: false,
  },
  headers: {},
};
const baseResponse = {};
const baseParams = {
  type: 'plus',
  features: {
    loansMessages: true,
  },
};

describe('Mercado Libre - Prepare to Render', () => {
  describe('Loans Service', () => {
    it('returns the emtpy information since the user is not logged in', (done) => {
      LoansService(baseRequest, baseResponse, baseParams).then((result) => {
        expect(result).toBeDefined();
        expect(result).toEqual(null);
        done();
      });
    });

    it('returns the emtpy information since the user is logged in, but does not have the tag `credits_profile`', (done) => {
      const request = Object.assign(baseRequest, {
        user: {
          raw: {
            tags: [],
          },
        },
      });

      LoansService(request, baseResponse, baseParams).then((result) => {
        expect(result).toBeDefined();
        expect(result).toEqual(null);
        done();
      });
    });
  });

  it('returns null since the user is logged in, but has no pending credits', (done) => {
    const request = Object.assign(baseRequest, {
      user: {
        id: '1234',
        raw: {
          tags: ['credits_profile'],
        },
      },
    });

    LoansService(request, baseResponse, baseParams).then((result) => {
      expect(result).toBeDefined();
      expect(result).toEqual(null);
      done();
    });
  });

  it('returns a value since the user is logged in and has credits', (done) => {
    const request = Object.assign(baseRequest, {
      user: {
        id: '1234',
        raw: {
          tags: ['credits_profile'],
        },
      },
    });

    LoansService(request, baseResponse, baseParams).then((result) => {
      expect(result).toBeDefined();
      expect(result).toEqual(null);
      done();
    });
  });

  it('returns empty value since API call returned 500', (done) => {
    const request = Object.assign(baseRequest, {
      user: {
        id: '1234',
        raw: {
          tags: ['credits_profile'],
        },
      },
    });

    LoansService(request, baseResponse, baseParams).then((result) => {
      expect(result).toBeDefined();
      expect(result).toEqual(null);
      done();
    });
  });
});
