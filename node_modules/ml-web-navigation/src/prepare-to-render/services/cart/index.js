const { CartService } = require('nav-cart');
const buildRestClientContext = require('frontend-restclient/src/build-context');
const { isPlus } = require('../../../layout-type-detection');
const logger = require('../logger');

const onError = (req, err, data) => {
  const errorType = 'cart';
  logger.error({
    req,
    err,
    errorType,
    message: 'Error while fetching data from cart service',
  });

  Object.assign(data, {
    badge_icon: {},
  });

  return data;
};

const shouldCartBeDisplayed = type => isPlus(type);

const execute = ({ siteId, type, user, req }) => {
  const data = {};

  if (shouldCartBeDisplayed(type)) {
    return CartService({
      siteId,
      user,
      context: buildRestClientContext(req),
    }).getInfo()
      .then(cartResponse => cartResponse.data)
      .catch(err => onError(req, err, data));
  }

  return Promise.resolve(data);
};

const generateServiceContext = (req, res, params) => {
  const { platform, user } = req;
  const { type } = params;

  return {
    platformId: platform.id,
    siteId: platform.siteId,
    user,
    type,
    req,
  };
};

module.exports = (req, res, params) => execute(generateServiceContext(req, res, params));

