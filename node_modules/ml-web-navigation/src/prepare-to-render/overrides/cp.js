const { getValue } = require('ml-navigation-config');
const { isPlus } = require('../../layout-type-detection');

/**
 * Overrides the CP feature and changes the scenarios in which it displays when:
 * - if the navigation type is not plus, the link does not display
 * - if there is CP link and if we are in desktop or the application forces the CP
 * component to be displayed in web mobile, it returns true
 * @param {bool} isDesktop - true if we are currently in desktop
 * @param {bool} isForcedEnabledInMobile - true if from res.render we are forcing rendering in web mobile
 * @param {string} type - layout type
 * @param {array} headerMenu - navigation links
 * @returns {bool} true if the CP link should be displayed
 */
const overrideMenuShippingLocation = (isDesktop, isForcedEnabledInMobile, type, headerMenu) => {
  if (!isPlus(type)) return false;

  return headerMenu.find(link => link.isCP) && (isDesktop || isForcedEnabledInMobile);
};

const apply = (props, req) => {
  const {
    type,
    currentLocation,
    platform,
  } = props;

  const headerMenu = getValue({
    key: 'headerMenuLinks',
    platform,
    req,
  });

  const overridenShippingLocation = overrideMenuShippingLocation(
    req.device.desktop,
    currentLocation && currentLocation.onMobile,
    type,
    headerMenu,
  );

  props.features.menuShippingLocation = {
    isShippingLocation: !!overridenShippingLocation,
    shippingMobileContext: currentLocation ? currentLocation.context : null,
  };
};

module.exports = {
  apply,
};
