const merge = require('lodash.merge');

const settings = {
  commons: {
    dimensions: {
      deviceLayout: {
        name: 'dimension1',
        nullable: true,
      },
    },
  },
  ml: {
    dimensions: {
      pageLayout: {
        name: 'dimension6',
        nullable: true,
      },
      business: {
        name: 'dimension7',
        valuesAllowed: ['MARKETPLACE', 'CLASSIFIED', 'MERCADOSHOPS'],
        nullable: false,
      },
      pageVertical: {
        name: 'dimension8',
        valuesAllowed: ['MOTORS', 'REAL_ESTATE', 'SERVICES', 'CORE', 'APPAREL'],
        nullable: false,
      },
      privatePage: {
        name: 'dimension12',
        nullable: true,
      },
      deviceLowEnd: {
        name: 'dimension76',
        nullable: true,
      },
    },

    customs: {
      dimensions: {
        // MeliDimensionName: GoogleDimensionName , e.g: logged: 'dimension2'
        officialStore: 'dimension9',                        // Tienda oficial (hit)
        feedback: 'dimension10',                            // Concretion + calification
        searchConfig: 'dimension21',                        // Search config (session)
        searchResults: 'dimension22',                       // Total search results (hit)
        userType: 'dimension15',                            // From users api (session)
        sellerProfile: 'dimension16',                       // Define seller experience (hit)
        sellFlowType: 'dimension17',                        // List, similar, etc (hit)
        buyEqualsPay: 'dimension18',                        // Feature on/off (hit)
        listingType: 'dimension19',                         // (hit)
        listingSource: 'dimension20',                       // (hit)
        connectionType: 'dimension13',                      // Mobile connection type eg: 3g, wifi (hit)
        paymentsQuantity: 'dimension14',                    // Payments quantity selected (hit)
        experiment1: 'dimension23',                         // Google Experiments dimension (session)
        experiment2: 'dimension24',                         // Google Experiments dimension (session)
        melidataExperiments: 'dimension25',                 // List of Melidata experiments
        experiment4: 'dimension26',                         // Google Experiments dimension (session)
        experiment5: 'dimension27',                         // Google Experiments dimension (session)
        experiment6: 'dimension28',                         // Google Experiments dimension (session)
        experiment7: 'dimension29',                         // Google Experiments dimension (session)
        experiment8: 'dimension30',                         // Google Experiments dimension (session)
        experiment9: 'dimension31',                         // Google Experiments dimension (session)
        experiment10: 'dimension32',                        // Google Experiments dimension (session)
        // la 33 y 34 es de ecommerceMejorado y aun falta definirlas
        itemSellerType: 'dimension35',                      // Define tipo de usuario que publico el item que se visualiza (hit)
        userAgent: 'dimension36',                           // User agent (hit)
        shippingMode: 'dimension37',                        // Tipo de envio disponible que tiene ese item (por ej custom, me2, not-specified, none) (hit)
        buyingMode: 'dimension38',                          // Indica si es compra inmediata o subasta (hit)
        itemStatus: 'dimension39',                          // Estado del item (active, pending, finalized, etc) (hit)
        bank: 'dimension40',                                // Banco (hit)
        paymentMethod: 'dimension41',                       // Metodo de pago (hit)
        installments: 'dimension42',                        // Cuotas (hit)
        freeShipping: 'dimension43',                        // Indica si es gratuito o no el envío (hit)
        shippingMethod: 'dimension44',                      // Indica el metodo del envío (hit)
        shippingLocalPickup: 'dimension45',                 // Indica si tiene disponible local pickup (hit)
        sellerSegment: 'dimension46',                       // indica si el vendedor logueado es profesional, hobbie, medium. El valor lo toma de la api de sellers, el campo: seller_cluster (hit)
        internationalDeliveryMode: 'dimension47',           // Indica el tipo de envio internacional si es DDP o DDU (en caso que el item sea de CBT, caso contraria indica none) (hit)
        itemDeals: 'dimension48',                           // Indica los deals que tiene ese item (hit)
        itemId: 'dimension49',                              // Identificador del ItemId
        searchFilters: 'dimension50',                       // Filtros aplicados en el search
        itemCondition: 'dimension51',                       // Indica la condicion del item (hit).
        paymentType: 'dimension52',                         // Indica el tipo de pago (credit_card, debit_card, ticket, atm, cash, bank_transfer) (hit)
        shippingType: 'dimension53',                        // Indica el tipo de envio (mercadoenvios, store_pick_up (retiro en sucursal), custom, free_shipping, to_agree, local_pick_up) (hit)
        errors: 'dimension54',                              // Indica si en una determinada pagina existio algun tipo de error (hit)
        billingInfo: 'dimension55',                         // Indica el estado de billing del user en billing (con facturas vencidas, pendientes, ambas, etc)
        billingModifyPayment: 'dimension56',                // Indica el tipo de codificación en los pagos. (forcedtomodify, choosetomodify) (hit)
        CDN: 'dimension57',                                 // Identificador del CDN
        storeType: 'dimension58',                           // Indica si es una tienda oficial
        flowVersion: 'dimension59',                         // Indica en que version del flow de vender esta el usuario
        selectedDiscount: 'dimension60',                    // Indica el descuento de la iniciativa Suggested Discounts: notificaciones push a los sellers para que ofrezcan descuentos
        variations: 'dimension61',                          // Indica si la vip contiene alguna variacion, por ejemplo memoria, 16gb o 8gb
        cartContent: 'dimension62',                         // En el caso de VIP indica si es un item apto para carrito. En el caso de MyML si se muestra contenido de una orden de tipo carrito
        loyaltyLevel: 'dimension63',                        // Indica el nivel de Loyalty que tiene el comprador
        discounts: 'dimension64',                           // Lista los descuentos disponibles en ese momento
        packsQuantity: 'dimension65',                       // Indica la cantidad de paquetes que se arman para un determinado carrito
        freeShippingBenefit: 'dimension66',                 // Hay items que tienen free shipping una vez que el comprador logra determinado level de loyalty
        resolution: 'dimension67',                          // Indica la resolucion con la que se usa la aplicacion
        purchaseStatus: 'dimension68',                      // Indica el estado de un Purchase en MyML (pendiente de pago, etc)
        prechargedCards: 'dimension69',                     // Indica en el CHO de Carrito si se utilizan tarjetas pre cargadas
        paymentSplitted: 'dimension70',                     // Indica si en el Carrito se divide el pago en dos por el tema del split de cuotas con y sin interes
        sellerMercadoLider: 'dimension71',                  // Indica si el vendedor es mercadolider
        reputationLevel: 'dimension72',                     // indica el nivel del termometro del vendedor
        fulfillment: 'dimension73',                         // indica si el item tiene el servicio
        quotationAvailable: 'dimension74',                  // indica si el item se puede cotizar
        availableConsumerCredit: 'dimension75',             // indica si el usr tiene credits o no
        shippingPreference: 'dimension77',                  // Indica el método de envio de preferencia (hit).
        appLite: 'dimension78',                             // Indica si el track viene de la app lite (session)
        congratsStatus: 'dimension79',                      // Indica el status de la congrats
        returnTypification: 'dimension80',                  // Indica el porqué de una devolución (hit) (FLUJO DEVOLUCIONES)
        returnPayment: 'dimension81',                       // Indica el forma de depósito del dinero de una devolución (hit) (FLUJO DEVOLUCIONES)
        returnShipping: 'dimension82',                      // Indica el forma de envío del producto de una devolución (hit) (FLUJO DEVOLUCIONES)
        reservationAvailable: 'dimension83',                // Indica si el item se puede reservar
        availableSubscription: 'dimension84',               // Indica si es un item suscriptible, tipo hit
        returnAvailable: 'dimension85',                     // Indica si tiene disponible devolución (hit)
        categoryDomain: 'dimension86',                      // Indica la Categoria de dominio
        lifetimeValueBucket: 'dimension87',                 // Ciclo de vida del cliente
        advAdqPads: 'dimension88',                          // Origen de la adquisicion de publicidad
        flowSource: 'dimension89',                          // Marcar el origen en el flow de venta en nativo
        mercadoLider: 'dimension90',                        // Informa el tipo de mercado lider:platinum,gold,silver
        zodiacCLV: 'dimension91',                           // Dimension necesaria para la Integracion con Zodiac
        zodiacRLV: 'dimension92',                           // Dimension necesaria para la Integracion con Zodiac
        categoryL5: 'dimension93',                          // Categoria L5
        channelSubSegment: 'dimension94',                   // Subsegmento del modulo de channel
        portalContentID: 'dimension95',                     // Titulo de la faq del user
        portalFormID: 'dimension96',                        // Indica si el user tenia disponible la opcion de contacto y cuales tenia disponibles
        portalSourceID: 'dimension97',                      // Indica desde donde se llamo al portal (myml, etc.)
        portalProblemID: 'dimension98',                     // Indica el id del problema del portal
        coupon: 'dimension99',                              // Envia tipo de cupon
        checkoutFlow: 'dimension100',                       // Guarda el flujo de checkout al que pertenece la instancia
        comparatorAvailable: 'dimension101',                // Se usa para identificar del total de Vip de motors cuantas con ComparatorAvailable fueron visitadas, generaron eventos, reservas, etc
        hotjarId: 'dimension102',                           // ID Hotjar
        userId: 'dimension103',                             // ID del user
        accountMoneyCombination: 'dimension104',            // Se usa para identificar si le mostraron al usuario la posibilidad de pagar con dinero en cuenta.Se envia en pagina:payments de CHO
        screenDensity: 'dimension105',                      // Se está usando en el CHO para enviar los DPI del user
        shippingPickUpInStore: 'dimension106',              // Se usa para describir cuando un ítem tiene disponible el envío Pick up in store. Valores a enviar: True, False
        availableBuyTogether: 'dimension107',               // Se usa para decir si un item de una vip esta mostrando combo de recomendaciones o no. Valores a enviar: True, False
        productsQuantity: 'dimension108',                   // Se usa para enviar la cantidad de items que se comrpan en una compra. Valores a enviar: 1, 2, ..., n
        adoptionProbabilityCredits: 'dimension109',         // Probabilidad de que el usuario compre con Mercado Crédito
        url: 'dimension110',                                // URL de la pagina
        itemAttributes: 'dimension111',                     // Tipo de atributo que tiene el Item. Puede ser CBT,PROMOTIONS,STOCK.
        addToCartAvailability: 'dimension112',              // Se guarda si una VIP muestrá o no la opcióin de AddtoCart y porque
        trackingId: 'dimension113',                         // Indica el deal_print_id o tracking_id de la página o pantalla para el usuario logueado o no logueado
        onBoardingLogin: 'dimension114',                    // Dimension que indica el login forzado en el proceso de onboarding de APPS.Solo para APPS.Scope:user. Valores posibles: TRUE|FALSE
        loggingType: 'dimension115',                        // Indica si es un operador, un admin, una impersonalizacion, etc.
        d2id: 'dimension116',                               // Valor cookie d2id
        context: 'dimension117',                            // Sirve para identificar en que lugar (no necesariamente page) se esta dando una situacion. actualmente se usa en vip y en checkout
        whatsappAvailable: 'dimension118',                  // Identifica VIPs en las que aparece boton de whatsapp como opción de contacto.
        collectorId: 'dimension119',                        // Identifica el CollectorID a quien le estamos pagando.
        collectorNickname: 'dimension120',                  // Identifica el CollectorNickname a quien le estamos pagando.
        flowType: 'dimension121',                           // Identifica a que flow corresponden las páginas o pantallas que navega el usuario, sean o no de Checkout.
        geoCoordinates: 'dimension122',                     // Identifica que versión del Checkout está navegando el usuario
        paymentStyle: 'dimension123',                       // Tipo de formato de respuesta de pago GENERIC, CUSTOM
        paymentStatusDetail: 'dimension124',                // Detalle del estado del pago
        searchAdsStrategy: 'dimension125',                  // Indica la estrategia que utiliza el motor de busqueda
        availableMethods: 'dimension126',                   // Indica aquellos medios de pagos disponibles en la pantalla Select Type de Checkout
        devicePixelRatio: 'dimension127',                   // Relación de píxeles del dispositivo
        buyerType: 'dimension128',                          // Indica el tipo de comprador en el contexto de Checkout
        productTitle: 'dimension129',                       // Indica el titulo del item por pdp
        productId: 'dimension130',                          // Indica id del producto-solo pdp
        channels: 'dimension131',                           // Lista los canales de venta seleccionados	
        methodShipping: 'dimension132',                     // Metodos disponibles de envio que se muestran en pdp
        garex: 'dimension133',                              // Indica si se le mostro Garex y su eleccion,por ej: Yes_Yes_Selected(si le mostramos garex y si lo selecciono)
        urlHash: 'dimension134',                            // Hash correspondiente a la URL trackeada
        userNickname: 'dimension135',                       // Indica el nickname del usuario
        deviceHardware: 'dimension136',                     // Cantidad de memoria y nucleos del dispositivo utilizado por quien nos navega
        locations: 'dimension137',                          // Define localidades en formato Json, asociado a las pageviews y eventos de los items. Ej: real estate search {location1: 'Region', location2: 'Comuna, location3: ''Barrio'}
        itemState: 'dimension139',                          // Dato del "Estado" del item que se esta viendo
        itemCity: 'dimension140',                           // Dato de la Ciudad del item que se esta viendo
        itemNeighborhood: 'dimension141',                   // Define localidades en formato Json, asociado a las pageviews y eventos de los items. Ej: real estate search {location1: 'Region', location2: 'Comuna, location3: ''Barrio'}
        broadcastId: 'dimension142'                         // Id del broadcast de livestream
      },
      metrics: {
        // MeliMetricName: GoogleMetricName , e.g: registeredSince: 'metric1'
        advPresupuestoPads: 'metric2',                       // Se obtiene de la api de sellers,campo:adv_presupuesto_pads.
        originalPriceLC: 'metric3',                          // Identifica el valor original del precio en moneda local.
        advDeliveredPads: 'metric4',                         // Se obtiene de la api de sellers,campo:adv_delivered_pads.
        advTakeRatePads: 'metric5',                          // Se obtiene de la api de sellers,campo:adv_take_rate_pads.
        priceUSD: 'metric6',                                 // Es el valor del precio original en dolares.
        priceWithDiscountLC: 'metric7',                      // Precio original con descuento aplicado.
        shippingCostLC: 'metric8',                           // Solo monto del costo de envio.
        totalAmountWithShippingLC: 'metric9',                // Total del precio del producto con el costo de envio incluido.
        garexAmountLC: 'metric10',                           // Monto de garex.
        totalAmountWithGarexLC: 'metric11',                  // Total del precio del producto con garex incluido.
        totalAmountPurchaseLC: 'metric12',                   // Total de la compra en moneda local(Se envia en CHO & CART.Incluye todas las variables, garex,shipping,total que paga el usr)
        totalAmountPurchaseUSD: 'metric13',                  // Total de la compra en dolares (se envia en CHO & CART).
        totalAmountWithQuantityLC: 'metric14',               // Monto total x cantidad (se envia en VPP,VIP & CART).
        installmentAmountLC: 'metric15',                     // Valor de cada cuota en moneda local.
        convertionRateBySeller: 'metric16',                  // Conversion en nro entero del seller.
        firstPaint: 'metric17',
        firstContentfulPaint: 'metric18',
        firstInputDelay: 'metric19',
      },
    },
    pathFromRoot: {
      L1: 'dimension3',
      L2: 'dimension4',
      L3: 'dimension5',
      L4: 'dimension11',
    },
    defaultCategory: {
      uri: '/SEARCH/',
      value: '(none)',
    },
    contentGroups: {
      business: {
        name: 'contentGroup1',
        format: ['business', 'modPage'],
        valuesAllowed: ['MARKETPLACE', 'CLASSIFIED', 'MERCADOSHOPS'],
      },
      pageVertical: {
        name: 'contentGroup2',
        format: ['pageVertical', 'modPage'],
        valuesAllowed: ['MOTORS', 'REAL_ESTATE', 'SERVICES', 'CORE', 'APPAREL'],
      },
      pageCategoryL1: {
        name: 'contentGroup3',
        format: ['pageCategoryL1', 'modPage'],
      },
    },
  },
  mp: {
    dimensions: {
      // Add dimensions here
      deviceLowEnd: {
        name: 'dimension49',
        nullable: true,
      },
    },
    customs: {
      dimensions: {
        flowType: 'dimension3',
        campaignId: 'dimension4',
        creditCard: 'dimension5',
        installments: 'dimension6',
        bank: 'dimension7',
        paymentStatus: 'dimension8',
        paymentStatusDetail: 'dimension9',
        advancedFilters: 'dimension10',
        isSplit: 'dimension11',
        coupon: 'dimension12',
        connectionType: 'dimension13',        // Mobile connection type eg: 3g, wifi (hit)
        collectorNickname: 'dimension14',
        isGuestUser: 'dimension15',
        paymentTypeId: 'dimension16',
        paymentInstallments: 'dimension17',
        paymentIssuerID: 'dimension18',
        paymentMethodId: 'dimension19',
        operationType: 'dimension20',
        shippingMode: 'dimension21',
        experiment1: 'dimension22',
        experiment2: 'dimension23',
        melidataExperiments: 'dimension24',     // List of Melidata experiments
        experiment4: 'dimension25',
        experiment5: 'dimension26',
        experiment6: 'dimension27',
        experiment7: 'dimension28',
        experiment8: 'dimension29',
        experiment9: 'dimension30',
        experiment10: 'dimension31',
        productId: 'dimension32',               // Identificador alfanumerico del tipo de producto que origino la congrats
        registrationType: 'dimension33',        // MP registration type.
        checkoutOpenMode: 'dimension34',
        payerID: 'dimension35',
        registrationCustId: 'dimension36',      // indica en la congrats de la reg el id del user
        userProfile: 'dimension37',             // indica el profile del user en MP, puede ser payer o collector.
        mposProduct: 'dimension38',             // profile del usuario para usar los canales de comunaicación, compuesto por 5 valores contatenados: MlSellerProfile, MpSellerProfile, MlBuyerProfile, InfluencerProfile , StatusProfile
        creditCardWizard: 'dimension39',        // indica si la landing de la TC de MP se cargo el wizard en true o false
        loggingType: 'dimension40',             // indica si es un operador, un admin, una impersonalizacion, etc.
        collectorSubType: 'dimension41',        // indica el tipo de usuario si es grande, mediano, pequeño, trial o other segun el gmv que mueve la cuenta
        professionalUser: 'dimension42',        // indica si es un usuario profesional o no
        userPlatform: 'dimension43',            // indica si el usuario es vendedor en el on, del off, o de ambos
        cobrandedStatusScored: 'dimension44',   // indica el estado que el banco le dio al usuario que aplico a la tarjeta
        cobrandedFase: 'dimension45',           // indica la fase en la que el usuario obtuvo la tarjeta Cobranded, (por ejemplo Fase 1: empleados)
        resultStatus: 'dimension46',
        statusDetail: 'dimension47',
        from: 'dimension48',
        moneyAvailableToAdvance: 'dimension50',  // indica si tiene disponible la opcion de adelantar dinero
        portalProblemID: 'dimension51',          // Indica el id del problema del portal
        userID: 'dimension52',                   // Indica el user_id. La envia automaticamente el plugin
        channelSegment: 'dimension53',           // Segmento del usuario en modulo de channel (top on, top off, best seller, etc.)
        channelSubSegment: 'dimension54',        // Subsegmento del modulo de channel
        portalContentID: 'dimension55',          // Titulo de la faq del user
        portalContact: 'dimension56',            // Indica si el user tenia disponible la opcion de contacto y cuales tenia disponibles
        portalSourceID: 'dimension57',           // Indica desde donde se llamo al portal (myml, etc.)
        flowId: 'dimension58',                   // Conserva el id del flujo que inicio el Checkout
        sessionId: 'dimension59',                // Hash unico para identificar la sesion
        paymentId: 'dimension60',                // Conservar el Id del Pago posteado
        collectorId: 'dimension61',              // Identifica el CollectorID a quien le estamos pagando.
        checkoutVersion: 'dimension62',          // Identifica que versión del Checkout está navegando el usuario.
        url: 'dimension63',                      // url del hit
        urlReferrer: 'dimension64',              // url referrer del hit
        timestamp: 'dimension65',                // timestamp del hit
        d2id: 'dimension66',                     // Valor cookie d2id
        errors: 'dimension67',                   // Indica si en una determinada pagina existio algun tipo de error (hit)
        paymentStyle: 'dimension68',             // Tipo de formato de respuesta de pago GENERIC, CUSTOM
        congratsStatus: 'dimension69',           // Indica el tipo de congrats en flujos como Adelanto de dinero o cho
        preferenceId: 'dimension70',             // Indica el preference id generado o al cual se le esta pagando (depende el flujo)
        devicePixelRatio: 'dimension71',         // Indica el DevicePixelRatio, con esto podemos saber por ejemplo si el device es retina o no
        monthlyActivePayer: 'dimension72',       // Esta custom dimension se setea por proceso especial basado en el upload de un .CSV
        availableMethods: 'dimension73',         // Indica aquellos: 1) medios de pagos o 2) medios de envios, disponibles en la respectivas pantallas  del Checkout.
        paymentsQuantity: 'dimension74',         // Indica la cantidad de pagos generados en el flujo de Checkout (x ejemplo: si el flujo es de 2 TC, contendra el valor "2").
        collectorSegment: 'dimension75',         // Segmento del Collector
        urlHash: 'dimension76',                  // Hash correspondiente a la URL trackeada
        userNickname: 'dimension77',             // Nickname del usuario
        userTypePerson: 'dimension78',           // Indica si el usuario es persona fisica o juridica
        deviceMemory: 'dimension79',             // Cantidad de memoria y nucleos del dispositivo utilizado por quien nos navega
        context: 'dimension80',                  // No description provided
        saveData: 'dimension81',                 // Conocer que dispositivos apps están activando de manera automática el uso de Lite mode
        activityDetails: 'dimension82',          // Corresponde al detalle de la actividad que se esta visualizando
        loyaltyLevel: 'dimension83',             // Indica el nivel de Loyalty que tiene el usuario que paga
        discount_type: 'dimension84',            // Indica el tipo de descuento aplicado, para diferenciar si es transaccional o sólo cosmético
        discount_percent: 'dimension85',         // Indica el porcentaje de descuento aplicado
        quoteId: 'dimension86',                  // Identificador único de una cotización
        currencyId: 'dimension87',               // Código de Moneda
        purchaseId: 'dimension88',               // Identificador único de la entidad de pago para el negocio de seguros
      },
      metrics: {
        registeredSince: 'metric1',
        totalAmountPaymentLC: 'metric2',         // Total del pago en moneda local (Se envia en COW)
        totalAmountPaymentUSD: 'metric3',        // Total del pago en dolares (se envia en COW)
        firstPaint: 'metric4',                   // Integer.
        firstContentfulPaint: 'metric5',         // Integer.
        firstInputDelay: 'metric6',              // Integer.
      },
    },
  },
  mt: {
    dimensions: {
      pageLayout: {
        name: 'dimension6',
        nullable: true,
      },
      business: {
        name: 'dimension7',
        valuesAllowed: ['MARKETPLACE', 'CLASSIFIED', 'MERCADOSHOPS'],
        nullable: false,
      },
      pageVertical: {
        name: 'dimension8',
        valuesAllowed: ['MOTORS', 'REAL_ESTATE', 'SERVICES', 'CORE', 'APPAREL'],
        nullable: false,
      },
      privatePage: {
        name: 'dimension12',
        nullable: true,
      },
    },
    customs: {
      dimensions: {
        // MeliDimensionName: GoogleDimensionName , e.g: logged: 'dimension2'
        officialStore: 'dimension9',                        // Tienda oficial (hit)
        feedback: 'dimension10',                            // Concretion + calification
        searchConfig: 'dimension21',                        // Search config (session)
        firstPageListingCount: 'dimension22',               // Listing # in first page (session)
        userType: 'dimension15',                            // From users api (session)
        sellerProfile: 'dimension16',                       // Define seller experience (hit)
        sellFlowType: 'dimension17',                        // List, similar, etc (hit)
        buyEqualsPay: 'dimension18',                        // Feature on/off (hit)
        listingType: 'dimension19',                         // (hit)
        listingSource: 'dimension20',                       // (hit)
        connectionType: 'dimension13',                      // Mobile connection type eg: 3g, wifi (hit)
        paymentsQuantity: 'dimension14',                    // Payments quantity selected (hit)
        experiment1: 'dimension23',                         // Google Experiments dimension (session)
        experiment2: 'dimension24',                         // Google Experiments dimension (session)
        experiment3: 'dimension25',                         // Google Experiments dimension (session)
        experiment4: 'dimension26',                         // Google Experiments dimension (session)
        experiment5: 'dimension27',                         // Google Experiments dimension (session)
        experiment6: 'dimension28',                         // Google Experiments dimension (session)
        experiment7: 'dimension29',                         // Google Experiments dimension (session)
        experiment8: 'dimension30',                         // Google Experiments dimension (session)
        experiment9: 'dimension31',                         // Google Experiments dimension (session)
        experiment10: 'dimension32',                        // Google Experiments dimension (session)
        // la 33 y 34 es de ecommerceMejorado y aun falta definirlas
        itemSellerType: 'dimension35',                      // Define tipo de usuario que publico el item que se visualiza (hit)
        userAgent: 'dimension36',                           // User agent (hit)
        shippingMode: 'dimension37',                        // Tipo de envio disponible que tiene ese item (por ej custom, me2, not-specified, none) (hit)
        buyingMode: 'dimension38',                          // Indica si es compra inmediata o subasta (hit)
        itemStatus: 'dimension39',                          // Estado del item (active, pending, finalized, etc) (hit)
        bank: 'dimension40',                                // Banco (hit)
        paymentMethod: 'dimension41',                       // Metodo de pago (hit)
        installments: 'dimension42',                        // Cuotas (hit)
        freeShipping: 'dimension43',                        // Indica si es gratuito o no el envío (hit)
        shippingMethod: 'dimension44',                      // Indica el metodo del envío (hit)
        shippingLocalPickup: 'dimension45',                 // Indica si tiene disponible local pickup (hit)
        apparelGender: 'dimension46',                       // Indica que genero selecciona el usuario en la home de moda de apparel en web mobile (hit)
        internationalDeliveryMode: 'dimension47',           // Indica el tipo de envio internacional si es DDP o DDU (en caso que el item sea de CBT, caso contraria indica none) (hit)
        itemDeals: 'dimension48',                           // Indica los deals que tiene ese item (hit)
        protectYourAccountCelNumberOptions: 'dimension49',  // Indica las diferentes opciones de protección de cuenta.
        itemCondition: 'dimension51',                       // Indica la condicion del item (hit).
        quotationAvailable: 'dimension52',                  // Indica vip que se puede cotizar (hit)
      },
      metrics: {
        // MeliMetricName: GoogleMetricName , e.g: registeredSince: 'metric1'
      },
    },
    pathFromRoot: {
      L1: 'dimension3',
      L2: 'dimension4',
      L3: 'dimension5',
      L4: 'dimension11',
    },
    defaultCategory: {
      uri: '/SEARCH/',
      value: '(none)',
    },
    contentGroups: {},
  },
};

const config = {};
Object.keys(settings).forEach((key) => {
  if (Object.prototype.hasOwnProperty.call(settings, key) && key !== 'commons') {
    config[key] = merge({}, settings.commons, settings[key]);
  }
});

module.exports = config;
