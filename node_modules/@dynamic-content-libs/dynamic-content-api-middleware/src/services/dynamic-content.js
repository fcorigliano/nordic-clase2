const feConfig = require('frontend-config');
const { getExperimentConfiguration } = require('./experiments');
const { dynamicContentExperiments } = require('../constants/configurations');

const getExperimentsData = (req) => {
  const {
    id: platformId,
    siteId,
  } = req.platform || {};

  const experimentsConfig = (
    platformId
    && siteId
    && feConfig.get(dynamicContentExperiments, platformId, siteId, feConfig.getEnvironment(req))
  ) || [];

  /**
   * By using experiment service from frontend-melidata the selected variant is automatically registered
   * with a pageview track from every application that consume this middleware and load Melidata SDK on client-side.
   * Also when some client has a cookie or query param to force some experiment's variant the melidata service is
   * able to handle it automatically.
   */
  return experimentsConfig.reduce((toReturn, experimentConfig) => ({
    ...toReturn,
    [experimentConfig.name]: getExperimentConfiguration({
      experimentConfig,
      req,
    }),
  }), {});
};

module.exports = {
  getExperimentsData,
};
