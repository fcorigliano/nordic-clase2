const ExperimentService = require('frontend-melidata/src/services/experiment');
const { getUserId } = require('./users');
const { seedSources } = require('../constants/experiments');
const { getConfigurationFallback } = require('./experiments-configuration-fallback');

const experimentService = new ExperimentService();

const getExperimentConfiguration = ({
  req,
  experimentConfig,
  platform,
  device,
  userId,
  headers,
  cookies,
  doNotConsumeMelidataService,
}) => {
  if (!experimentConfig
    || !experimentConfig.name
    || !experimentConfig.preferredSeedSource
    || !(experimentConfig.configurationKeys || []).length) {
    return null;
  }

  const seedSource = experimentConfig.preferredSeedSource === seedSources.userId && !(userId || (req && getUserId(req)))
    ? seedSources.uid
    : experimentConfig.preferredSeedSource;

  const configurationFallback = getConfigurationFallback({
    req,
    experimentConfig,
    seedSource,
    platform,
    device,
    userId,
    headers,
    cookies,
  });

  return experimentConfig.configurationKeys.reduce((config, configurationKey) => {
    const fallbackValue = configurationFallback[configurationKey] || null;
    if (doNotConsumeMelidataService) {
      config[configurationKey] = fallbackValue;
    } else {
      const melidataConfig = experimentService
        .getConfig(req, experimentConfig.name, fallbackValue, configurationKey, seedSource);

      config[configurationKey] = melidataConfig === null ? fallbackValue : melidataConfig;
    }
    return config;
  }, {});
};

module.exports = {
  getExperimentConfiguration,
};
