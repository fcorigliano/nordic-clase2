const withSideEffect = require('react-side-effect');

const PropTypes = require('prop-types');

const Hotjar = require('./Hotjar');

Hotjar.propTypes = {
  id: PropTypes.number,
  tags: PropTypes.arrayOf(PropTypes.string),
  tagPrefix: PropTypes.string,
  triggers: PropTypes.arrayOf(PropTypes.string),
  disabled: PropTypes.bool
};

function reducePropsToState(propsList) {
  const props = {};
  propsList.forEach(currentProps => {
    Object.keys(currentProps).forEach(p => {
      if (Array.isArray(props[p]) && (Array.isArray(currentProps[p]) || p === 'id')) {
        props[p] = props[p].concat(currentProps[p]);
      } else if (p === 'id') {
        props[p] = [currentProps[p]];
      } else {
        props[p] = currentProps[p];
      }
    });
  });
  return props;
}

function handleStateChangeOnClient() {
  // Do nothing for now
  return null;
}

function mapStateOnServer(props) {
  return props;
}

module.exports = withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer)(Hotjar);