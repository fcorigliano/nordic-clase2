const FrontendWrapperService = require('../services/frontend-wrapper');

const isFromShops = require('../utils/is-from-shops');
const isMeliDomain = require('../utils/is-meli-domain');
const isBotRequest = require('../utils/is-bot-request');
const isFeatureEnabled = require('../utils/is-feature-enabled');
const getUrl = require('../utils/get-url');
const getSection = require('../utils/get-section');
const getDevice = require('../utils/get-device');
const getEditable = require('../utils/get-editable');
const getPreview = require('../utils/get-preview');
const getUserLogged = require('../utils/get-user-logged');
const setPlatform = require('../utils/set-platform');
const getCookieGuest = require('../utils/get-cookie-guest');

/**
 * Expose middlware
 */
module.exports = function mshopsDetection(req, res, next) {
  const shopDomain = getUrl(req);
  if (!isFromShops(req) || isMeliDomain(shopDomain)) {
    next();
    return;
  }

  const userAgent = req.get('User-Agent') || '';
  if (isBotRequest(userAgent)) {
    req.headers['x-robots'] = 1;
  }

  FrontendWrapperService
    .getByDomain({
      url: shopDomain,
      section: getSection(req),
      device: getDevice(req),
      editable: getEditable(req),
      preview: getPreview(req),
      userLogged: getUserLogged(req),
      headers: FrontendWrapperService.getAllowedHeadersToBypass(req),
      guestCartId: getCookieGuest(req),
      req,
    })
    // eslint-disable-next-line consistent-return
    .then((data) => {
      if (isMeliDomain(req.hostname) && !isFeatureEnabled(data, 'mshops-guest-cho')) {
        return next();
      }
      // Puts the info into locals to avoid repeating the request
      res.locals.mercadoShops = { data };
      setPlatform(req, data);

      next();
    });
};
