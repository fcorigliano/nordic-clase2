'use strict';

var require$$0 = require('react-dom');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var require$$0__default = /*#__PURE__*/_interopDefaultLegacy(require$$0);

var hydrate = {exports: {}};

(function (module, exports) {
var ReactDOM = require$$0__default["default"];
function hasPerformanceApi() {
  return typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.measure === 'function';
}
var getPerfillAgentObject = function getPerfillAgentObject() {
  var perfillAgentKey = '_perfill';
  window[perfillAgentKey] = window[perfillAgentKey] || function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    (window[perfillAgentKey].q = window[perfillAgentKey].q || []).push(args);
  };
  return window[perfillAgentKey];
};
function hydrate(View, container, callback) {
  var containerElement = container === 'string' ? document.querySelector(container) : container;
  if (!containerElement || !(containerElement instanceof Element)) {
    throw new Error('Container element is not found or not a DOM Element');
  }
  var hasPerfApi = hasPerformanceApi();
  if (hasPerfApi) {
    performance.mark('hydrateStart');
  }
  ReactDOM.hydrate(View, container, function () {
    if (hasPerfApi) {
      var perfillAgent = getPerfillAgentObject();
      performance.mark('hydrateComplete');
      performance.measure('nordic-hydration', 'hydrateStart', 'hydrateComplete');
      var hydrationMeasures = performance.getEntriesByName('nordic-hydration');
      if (hydrationMeasures.length) {
        perfillAgent('queue', 'page-render', [{
          metric: 'hydrate-complete',
          value: Math.round(hydrationMeasures[0].startTime)
        }, {
          metric: 'hydrate-duration',
          value: Math.round(hydrationMeasures[0].duration)
        }]);
      }
    }
    if (typeof callback === 'function') {
      callback();
    }
  });
}
exports = module.exports = hydrate;
exports.hydrate = hydrate;
}(hydrate, hydrate.exports));
var hydrate_1 = hydrate.exports;

module.exports = hydrate_1;
