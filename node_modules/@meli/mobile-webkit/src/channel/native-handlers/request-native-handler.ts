import { EventEmitter } from '../../events/event-emitter';
import { NativeEvent } from '../../events/native-event';
import { FromNativeMessageType, MessageFromNative, ToNativeMessageType } from '../../models';
import { NativeChannel } from '../native-channel';
import { NativeHandler } from './native-handler';

export class RequestNativeHandler implements NativeHandler {

    messageType = FromNativeMessageType.NativeRequest;

    constructor(
        private eventEmitter: EventEmitter,
        private channel: NativeChannel
    ) { }

    handleMessage(message: MessageFromNative): void {
        const event = NativeEvent.nativeRequest({
            method: message.method,
            args: message.args,
            callback: (result) => {
                this.channel.sendMessageToApp({
                    message_type: ToNativeMessageType.JSExecutionResult,
                    args: {
                        callback_msg: message.callback_msg,
                        result: result.result,
                        error: result.error
                    }
                });
            }
        });
        this.eventEmitter.dispatchEvent(event);
    }
}