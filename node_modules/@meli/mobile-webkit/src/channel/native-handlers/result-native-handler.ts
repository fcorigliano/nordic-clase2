import { ErrorCodes, ErrorMessage, FromNativeMessageType, MessageFromNative } from "../../models";
import { NativeResult } from "../../models/from-native/native-result";
import { CallbackContainer } from "../../utils";
import { NativeHandler } from "./native-handler";

export class ResultNativeHandler implements NativeHandler {

    messageType = FromNativeMessageType.NativeExecutionResult;

    constructor(private callbackContainer: CallbackContainer) { }

    handleMessage(message: MessageFromNative): void {
        const callbackId = message.callback_msg;
        const callback = this.callbackContainer.getAndRemove(callbackId);      
        if (!callback) {
            return;
        }

        const args: NativeResult = message.args;
        if (!args) {
            return;
        }

        let errorContent: ErrorMessage = args.error ? {
            code: ErrorCodes.Native,
            data: args.error
        } : undefined;

        callback(args.result, errorContent);
    }
}