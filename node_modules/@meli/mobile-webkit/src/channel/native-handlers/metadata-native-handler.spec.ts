import { FromNativeMessageType, MessageFromNative, ToNativeMessageType } from "../../models";
import { NativeChannel } from "../native-channel";
import { MetadataNativeHandler } from "./metadata-native-handler";

describe("MetadataNativeHandler", () => {

    it("should send message to app with sdk version", () => {
        // Given
        (window as any).__SDK_VERSION__ = 1;
        const mockChannel:NativeChannel = {} as any;
        const sendMessageToAppSpy = jest.fn();
        mockChannel.sendMessageToApp = sendMessageToAppSpy;

        const metadataHandler = new MetadataNativeHandler(mockChannel);
        const message: MessageFromNative = {
            callback_msg:1,
            args: {},
            message_type: FromNativeMessageType.Metadata,
            method: "test method"
        }

        // When
        metadataHandler.handleMessage(message);

        // Then
        expect(sendMessageToAppSpy).toBeCalledWith({

            message_type: ToNativeMessageType.JSExecutionResult,
            args: {
                callback_msg: message.callback_msg,
                result: {
                    sdk_version: 1
                }
            }
        });
    });
});