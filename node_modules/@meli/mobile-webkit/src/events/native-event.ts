import { NativeResult } from "../models";
import { NativeEventType } from "./native-event-type";

export class NativeEvent {

    static connect(data: ConnectNativeEventArgs): CustomEvent<ConnectNativeEventArgs> {
        const event = new CustomEvent<ConnectNativeEventArgs>(NativeEventType.connect, { bubbles: false, cancelable: false, detail: data });
        (event as any).data = data.data;
        return event;
    }

    static nativeRequest(request: RequestNativeEventArgs): CustomEvent<RequestNativeEventArgs> {
        const event = new CustomEvent<RequestNativeEventArgs>(NativeEventType.nativeRequest, { bubbles: false, cancelable: false, detail: request });
        (event as any).method = request.method;
        (event as any).args = request.args;
        (event as any).callback = request.callback;
        return event;
    }
}

export interface RequestNativeEventArgs {
    method: string;
    args: any;
    callback: (response: NativeResult) => void;
}

export interface ConnectNativeEventArgs {
    data: any;
}