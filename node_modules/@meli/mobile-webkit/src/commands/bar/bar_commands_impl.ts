import { RequestNativeEventArgs } from "../../events/native-event";
import { MobileWebkit } from "../../mobile-webkit";
import { BarCommands } from "./bar_commands";
import { BarSetupOptions } from "./bar_setup_options";

export type BarRightButtonSubscription = (event: CustomEvent<RequestNativeEventArgs>) => void;

export class BarCommandsImpl implements BarCommands {

    constructor(private mobileWebKit: MobileWebkit) { }

    setup(args: BarSetupOptions): Promise<string> {
        return this.mobileWebKit.executeNative({
            method: 'setup_bar',
            args
        });
    }

    subscribeToRightButtonClick(barRightButtonSubscription: BarRightButtonSubscription): BarRightButtonSubscription {

        const subscription = (event: CustomEvent<RequestNativeEventArgs>) => {
            const { method } = event.detail;
            if (method == "custom_navigation_icon_clicked") {
                barRightButtonSubscription(event)
            }
        }

        this.mobileWebKit.on("native_request", subscription);

        return subscription;
    }

    unsubscribeToRightButtonClick(subscription: BarRightButtonSubscription) {
        this.mobileWebKit.off("native_request", subscription);
    }
}
