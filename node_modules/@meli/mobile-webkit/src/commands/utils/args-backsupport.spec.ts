import { ArgsBackSupport, getSupportArgs } from "./args-backsupport";
import { UnavailableArgs } from "./command-backsupport";

describe("getSupportArgs", () => {

    it("Should return a args with support", () => {
        // Given
        const testArgs = { field1: 123, field2: true };
        const supportArgs: ArgsBackSupport = {
            field1: { field: "field_1" },
            field2: { field: "field_2", values: { true: "TRUE" } }
        };

        // When
        const { args, unavailable } = getSupportArgs(testArgs, supportArgs);

        // Then
        const expectedArgs = { field_1: 123, field_2: "TRUE" };
        expect(args).toEqual(expectedArgs);
        expect(unavailable).toHaveLength(0)
    });

    it("Should return a list of unavailable args", () => {
        // Given
        const testArgs = { field1: 123, field2: true };
        const supportArgs: ArgsBackSupport = {};

        // When
        const { args, unavailable } = getSupportArgs(testArgs, supportArgs);

        // Then
        const expectedArgs = {};
        const expectedUnavailable: UnavailableArgs = [
            { field: "field1", value: 123 },
            { field: "field2", value: true }
        ]
        expect(args).toEqual(expectedArgs);
        expect(unavailable).toEqual(expectedUnavailable);
    });

});