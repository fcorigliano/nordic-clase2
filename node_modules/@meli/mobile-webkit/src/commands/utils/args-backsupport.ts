import { UnavailableArgs } from "./command-backsupport";

export interface ArgsBackSupport {
    [key: string]: {
        field: string,
        values?: { [key: string]: any }
    }
};

export function getSupportArgs(args: any, support: ArgsBackSupport): { args: any, unavailable: UnavailableArgs } {
    const unavailableOptions: UnavailableArgs = [];
    const argsOptions = args ?? {};
    const argsSupport = support ?? {};
    
    const keys = Object.keys(argsOptions);
    
    const supportArgs: any = {}

    for (let field of keys) {
        const fieldValue = argsOptions[field];
        const supportOption = argsSupport[field];

        if (!supportOption) {
            unavailableOptions.push({ field, value: fieldValue });
            continue;
        }

        if (!supportOption.values) {
            supportArgs[supportOption.field] = fieldValue;
            continue;
        }

        const supportValue = supportOption.values[`${fieldValue}`];
        if (!supportValue) {
            unavailableOptions.push({ field, value: fieldValue });
            continue;
        }

        supportArgs[supportOption.field] = supportValue;
    }
    return { args: supportArgs, unavailable: unavailableOptions };
}