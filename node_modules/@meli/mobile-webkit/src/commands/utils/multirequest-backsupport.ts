import { UnavailableArgs } from "./command-backsupport";

export interface MultiRequestBackSupport {
    [key: string]: (value: any) => { method: string, args: any }[]
}

export function getSupportMultirequest(args: any, support: MultiRequestBackSupport): {
    requests: { method: string, args: any }[],
    unavailable: UnavailableArgs
} {
    const optionArgs = args ?? {};
    const supportArgs = support ?? {};
    
    const supportRequest: { method: string, args: any }[] = [];
    const unavailable: UnavailableArgs = [];
    
    const keys = Object.keys(optionArgs);

    for (let field of keys) {
        const fieldValue = optionArgs[field];
        const supportRequestFunction = supportArgs[field];

        if (!supportRequestFunction) {
            unavailable.push({ field, value: fieldValue });
            continue;
        }

        supportRequest.push(...supportRequestFunction(fieldValue))
    }

    return { requests: supportRequest, unavailable }
}
