import { EventIdGenerator } from "./event_id_generator";

describe("EventIdGenerator", () => {

    const currentDate = new Date("2022-01-01T00:00:00.000Z");
    const randomNumber = 123;

    beforeEach(() => {
        jest.useFakeTimers()
            .setSystemTime(currentDate.getTime());

        jest.spyOn(global.Math, 'random').mockReturnValue(123);
    });

    it("should return an id with a timestam and random number", () => {
        // Given
        let eventIdGenerator = new EventIdGenerator();

        // When
        let id = eventIdGenerator.generateId();

        // Then
        expect(id).toEqual(`${currentDate.getTime()}-${randomNumber}`);
    });

    afterEach(()=>{
        jest.resetAllMocks();
        jest.useRealTimers();
    });

});