import { ActionCommands } from "../..";
import { MobileWebkit } from "../../../mobile-webkit";
import { ArgsBackSupport, getSupportArgs } from "../../utils/args-backsupport";
import { PickImageOptions } from "./../pick_image_options";
import { PickImageResult } from "./../pick_image_result";
import { ShareImageOptions } from "./../share_image_options";

export class ActionCommandsLegacy implements ActionCommands {

    constructor(private mobileWebkit: MobileWebkit) { }

    private readonly pickImageOptionsSupport: ArgsBackSupport = {
        max_size: { field: "maxSize" },
        is_base64: { field: "isBase64" },
        mime_types: { field: "mimeTypes" }
    };

    shareImage(args: ShareImageOptions): Promise<string> {
        return this.mobileWebkit.executeNative({
            method: "share_image",
            args            
        });
    }

    downloadImage(args: ShareImageOptions): Promise<string> {
        return this.mobileWebkit.executeNative({
            method: "download_image",
            args
        });
    }

    pickImage(receivedArgs: PickImageOptions): Promise<PickImageResult> {
        const { args } = getSupportArgs(receivedArgs, this.pickImageOptionsSupport)
        return this.mobileWebkit.executeNative({
            method: "pick_image",
            args
        });
    }

    share(title: string, data: string): Promise<string> {
        return this.mobileWebkit.executeNative({
            method: "share",
            args: {
                title,
                data
            }
        });
    }
}