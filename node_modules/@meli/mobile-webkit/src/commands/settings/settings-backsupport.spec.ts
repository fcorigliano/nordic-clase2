import {MobileWebkit} from "../../mobile-webkit";
import {MobileWebkitEngine} from "../../mobile-webkit-engine";
import {CommandProvider} from "../command-provider";
import {SettingsCommandsImpl} from "./settings_commands_impl";
import {SettingsCommandsLegacy} from "./backsupport/settings_commands_legacy";

describe("SettingsBacksupport", () => {

    let wk1: MobileWebkit;
    let wk2: MobileWebkit;
    let commandProvider: CommandProvider;

    beforeEach(() => {
        wk1 = {
            engine: MobileWebkitEngine.Legacy
        } as MobileWebkit;

        wk2 = {
            engine: MobileWebkitEngine.V200
        } as MobileWebkit;
    });

    describe("settings with wk1", () => {
        it("should return and mantain an instance of SettingsCommandsLegacy", () => {
            // Given
            commandProvider = new CommandProvider(wk1)

            // When
            const command = commandProvider.getSettingsCommands();

            // Then
            expect(command).toEqual(commandProvider["settings"]);
            expect(command).toBeInstanceOf(SettingsCommandsLegacy);
        });
    });

    describe("settings with WK2", () => {
        it("should return and mantain an instance of SettingsCommandsImpl", () => {
            // Given
            commandProvider = new CommandProvider(wk2)

            // When
            const command = commandProvider.getSettingsCommands();

            // Then
            expect(command).toEqual(commandProvider["settings"]);
            expect(command).toBeInstanceOf(SettingsCommandsImpl);
        });
    });

});
