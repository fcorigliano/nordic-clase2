"use strict";

var React = require('react');

var withSideEffect = require('react-side-effect');

var PropTypes = require('prop-types');

var createSet = typeof Set === 'function' ? function () {
  return new Set();
} : function () {
  var cache = {};
  return {
    has: function has(key) {
      return cache[key];
    },
    add: function add(key) {
      cache[key] = true;
    }
  };
};
var renderedChildren = createSet();

var Style = function Style(props) {
  var children = props.children,
      media = props.media,
      renderChildrenInPlace = props.renderChildrenInPlace,
      critical = props.critical,
      firstRequestInlineStyles = props.firstRequestInlineStyles;

  if (!renderChildrenInPlace || critical || firstRequestInlineStyles || typeof children !== 'string' || renderedChildren.has(children)) {
    return null;
  }

  renderedChildren.add(children);
  var elementProps = {
    dangerouslySetInnerHTML: {
      __html: children
    }
  };

  if (media) {
    elementProps.media = media;
  }

  return React.createElement('style', elementProps);
}; // return propsList


var identity = function identity(propsList) {
  return propsList;
}; // Do nothing


var handleStateChangeOnClient = function handleStateChangeOnClient() {};

var StyleWithSideEffect = withSideEffect(identity, handleStateChangeOnClient, identity)(Style);
StyleWithSideEffect.propTypes = {
  href: PropTypes.string,
  media: PropTypes.string,
  preload: PropTypes.bool,
  inline: PropTypes.bool,
  critical: PropTypes.bool,
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),
  renderChildrenInPlace: PropTypes.bool,
  firstRequestInlineStyles: PropTypes.shape({
    key: PropTypes.string.isRequired,
    value: PropTypes.string.isRequired
  })
};
StyleWithSideEffect.defaultProps = {
  href: null,
  preload: false,
  inline: false,
  critical: false,
  media: null,
  children: null,
  renderChildrenInPlace: true,
  firstRequestInlineStyles: null
};
var originalRewind = StyleWithSideEffect.rewind;

StyleWithSideEffect.rewind = function StyleWithSideEffectRewind() {
  renderedChildren = createSet();
  return originalRewind.call(this);
};

module.exports = StyleWithSideEffect;