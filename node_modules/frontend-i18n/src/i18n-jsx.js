const React = require('react');
const PropTypes = require('prop-types');

function I18nJsx(props) {
  const { crowdinKey, settings } = props;
  const interpolate = (str, values) => str.replace(/{(\w+)}/g, (match, expr) => values[expr] || match);
  const Wrapper = settings.wrapper || 'div';

  // Replace the html tags
  let interpolated = interpolate(crowdinKey, settings.tags);

  // Replace other placeholders if present. For the cases of ngettext, pgettext, npgettext.
  if (settings.replacements) {
    interpolated = interpolate(interpolated, settings.replacements);
  }

  return (
    <Wrapper dangerouslySetInnerHTML={{ __html: interpolated }} className={settings.className} />
  );
}

I18nJsx.propTypes = {
  crowdinKey: PropTypes.string.isRequired,
  settings: PropTypes.shape({
    wrapper: PropTypes.string,
    className: PropTypes.string,
    tags: PropTypes.objectOf(PropTypes.string),
  }).isRequired,
};

module.exports = I18nJsx;
