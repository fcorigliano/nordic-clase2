/**
 * Module dependencies
 */
const path = require('path');
const { locales } = require('./locales');

function translations(config) {
  const srcPath = config.srcPath || '/app';
  /**
  * Given a locale, checks for the existence of a file with translations messages.
  * If there is a file, requires it as a module.
  * @param locale {String} A valid locale. Ex: 'es-AR'.
  * @returns A JSON with translations messages for the given locale.
  */
  const requireMessages = (locale) => {
    let modulePath;
    try {
      modulePath = require.resolve(path.join(srcPath, `translations/${locale}/messages.json`));
    } catch (err) {} // eslint-disable-line no-empty

    return modulePath ? require(modulePath) : null; // eslint-disable-line
  };

  /**
  * Assign each JSON of messages with its locale ID.
  * If it's pt-PT, also merges keys with pt-BR.
  * @example
  * messages = {
  *   'es-AR': require('./src/es-AR/messages.json'),
  *   ...
  * };
  */
  const messages = {};

  locales.forEach((locale) => {
    const tr = requireMessages(locale);
    if (tr) {
      if (locale === 'pt-PT') {
        messages['pt-PT'] = { ...requireMessages('pt-BR'), ...tr };
      } else {
        messages[locale] = tr;
      }
    }
  });
  return messages;
}

module.exports = translations;
