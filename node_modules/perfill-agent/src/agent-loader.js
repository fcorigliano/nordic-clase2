const { agentKey } = require('./constants/agent');

const getSetCommand = (key, value) => `${agentKey}('set', '${key}', ${JSON.stringify(value)});`;

const agentLoader = ({ clientVersion, platformId, siteId, deviceType, appName, initiatives, webView, scope }) => {
  let loader = '';
  loader += `(function (w, p) {w[p] = w[p] || function () { (w[p].q = w[p].q || []).push(arguments) }; w[p].l = 1 * new Date();}(window, "${agentKey}"));`;
  loader += scope ? getSetCommand('scope', scope) : '';
  loader += getSetCommand('webview', webView);
  loader += getSetCommand('platform', platformId);
  loader += getSetCommand('site', siteId);
  loader += getSetCommand('device', deviceType);
  loader += getSetCommand('application', appName);
  loader += getSetCommand('initiatives', initiatives);
  loader += `${agentKey}('send', 'start');`;
  loader += `(function (d, s, f, t, x) {t = d.createElement(s); x = d.getElementsByTagName(s)[0]; t.crossorigin = 'anonymous'; t.async = 1; t.src = f; x.parentNode.insertBefore(t, x);}(document, 'script', 'https://http2.mlstatic.com/frontend-assets/perfill-agent/${clientVersion}/perfill-agent.min.js'))`;

  return loader;
};

module.exports = agentLoader;
