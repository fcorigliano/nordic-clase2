const pick = require('../utils/pick');
const { objectOperator } = require('../utils/spread');
const { CDN_HEALTH } = require('../../constants/initiatives');
const {
  DURATION_SUM, RESOURCE_SIZE, RESOURCE_FAILURE, RESOURCE_SUCCESS, X_CDN, AVAILABILITY_FAILURE,
} = require('../../constants/metrics');

const metrics = [X_CDN, RESOURCE_SIZE, DURATION_SUM];
const requiredMetrics = [X_CDN];

const preparePayload = (settings, data) => {
  const collection = pick(data, metrics);

  if (!Object.keys(collection).length) {
    throw new Error('Metrics not found');
  }

  const collectionKeys = Object.keys(collection);
  if (!requiredMetrics.every(metric => collectionKeys.indexOf(metric) !== -1)) {
    throw new Error('Metrics missing');
  }

  const failures = (data[AVAILABILITY_FAILURE] || []).length;
  const success = collection[RESOURCE_SIZE] - failures;

  return {
    name: CDN_HEALTH,
    data: objectOperator({
      collection,
      [RESOURCE_FAILURE]: failures,
      [RESOURCE_SUCCESS]: success,
    }),
  };
};

module.exports = preparePayload;
