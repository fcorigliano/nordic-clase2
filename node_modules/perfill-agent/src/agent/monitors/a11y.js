const { A11Y } = require('../../constants/initiatives');
const { WINDOW_DOM } = require('../../constants/metrics');
const { trackMetric, sendFormData, getMetricsCollected } = require('../collector');
const { anonymizeDOM } = require('../utils/anonymize-dom');

const getRequestIdleCallback = window.requestIdleCallback || (callback => setTimeout(callback, 200));

let subscribedToA11ySendEvent = false;
const subscribeToA11ySendEvent = (settings) => {
  const a11ySendEventHandler = () => sendFormData({ id: A11Y }, settings, getMetricsCollected());

  if (!subscribedToA11ySendEvent) {
    subscribedToA11ySendEvent = a11ySendEventHandler();
  }
};

const prepareDOM = () => {
  const { document } = window;
  if (!document || !document.documentElement || !document.documentElement.outerHTML) {
    throw new Error('DOM not found');
  }
  const dom = anonymizeDOM(document.documentElement.outerHTML);
  trackMetric(WINDOW_DOM, dom);
};

const setA11yHandler = (settings) => {
  try {
    prepareDOM();
    subscribeToA11ySendEvent(settings);
  } catch (e) {
    // eslint-disable-next-line no-empty
  }
};

const monitor = (settings) => {
  getRequestIdleCallback(() => setA11yHandler(settings));
};

module.exports = monitor;
