const Perfume = require('perfume.js');
const { trackMetric, sendMetrics, getMetricsCollected } = require('../collector');
const {
  LCP_FINAL, CLS_FINAL, LCP, CLS, TBT, WORKER_TIME, TOTAL_TIME, TTFB,
  HEADER_SIZE, FETCH_TIME, DOWNLOAD_TIME, DNS_LOOKUP_TIME, TBT_FINAL,
} = require('../../constants/metrics');

module.exports = (settings, initiative) => {
  let perfumeSent = false;

  // eslint-disable-next-line no-new
  return new Perfume({
    analyticsTracker: (options) => {
      if (perfumeSent) {
        return;
      }

      const { metricName, data } = options;
      if (metricName === LCP_FINAL) trackMetric(LCP, data);
      if (metricName === CLS_FINAL) trackMetric(CLS, data);
      if (metricName === TBT_FINAL) trackMetric(TBT, data);
      if (metricName === 'navigationTiming' && data && typeof data === 'object') {
        trackMetric(DNS_LOOKUP_TIME, data.dnsLookupTime);
        trackMetric(DOWNLOAD_TIME, data.downloadTime);
        trackMetric(FETCH_TIME, data.fetchTime);
        trackMetric(HEADER_SIZE, data.headerSize);
        trackMetric(TTFB, data.timeToFirstByte);
        trackMetric(TOTAL_TIME, data.totalTime);
        trackMetric(WORKER_TIME, data.workerTime);
      }
      trackMetric(metricName, data);

      perfumeSent = sendMetrics(initiative, settings, getMetricsCollected());
    },
  });
};
