const {
  WEB_VITALS,
  PAGE_RENDER,
  A11Y,
  AVAILABILITY,
  CDN_HEALTH,
} = require('../constants/initiatives');
const webVitals = require('../constants/web-vitals');
const pageRender = require('../constants/page-render');
const a11y = require('../constants/a11y');
const availability = require('../constants/availability');
const cdnHealth = require('../constants/cdn-health');
const commons = require('../constants/commons');
const { objectOperator } = require('./utils/spread');

const config = {
  [WEB_VITALS]: webVitals,
  [PAGE_RENDER]: pageRender,
  [A11Y]: a11y,
  [AVAILABILITY]: availability,
  [CDN_HEALTH]: cdnHealth,
  commons,
};

const getConfiguration = (name, initiative = 'commons', defaultValue = null) => (name in config[initiative] ? config[initiative][name] : defaultValue);

const prepareConfiguration = (args) => {
  const { platform, site, device, application, initiatives, scope, webview } = args;

  // Check each args
  if (!Array.isArray(initiatives)) {
    return null;
  }

  if (platform && site && device && application && initiatives) {
    const data = {
      platform,
      site,
      device,
      application,
      webview,
      initiatives: initiatives.map((i) => objectOperator({ i, sent: false })) };

    if (scope) {
      data.scope = scope;
    }

    return data;
  }

  return null;
};

module.exports = { prepareConfiguration, getConfiguration };
