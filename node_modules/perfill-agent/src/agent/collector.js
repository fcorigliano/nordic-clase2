const { WEB_VITALS, PAGE_RENDER, A11Y, AVAILABILITY, CDN_HEALTH } = require('../constants/initiatives');
const { endpoint: webVitalsEndpoint } = require('../constants/web-vitals');
const { endpoint: pageRenderEndpoint } = require('../constants/page-render');
const { endpoint: availabilityEndpoint } = require('../constants/availability');
const { endpoint: cdnHealthEndpoint } = require('../constants/cdn-health');
const { endpoint: a11yEndpoint } = require('../constants/a11y');
const { preparePayload, prepareFormData } = require('./builder');
const { beaconWithFetchFallback, sendWithFetch } = require('./utils/send');

const metricsCollected = {};

const endpoints = {
  [WEB_VITALS]: webVitalsEndpoint,
  [PAGE_RENDER]: pageRenderEndpoint,
  [A11Y]: a11yEndpoint,
  [AVAILABILITY]: availabilityEndpoint,
  [CDN_HEALTH]: cdnHealthEndpoint,
};

const getMetricsCollected = () => metricsCollected;

const trackMetric = (key, value) => {
  metricsCollected[key] = value;
};

const appendMetric = (key, value) => {
  (metricsCollected[key] = metricsCollected[key] || []).push(value);
};

const sendMetrics = (initiative, settings, data) => {
  const payload = preparePayload(initiative, settings, data);

  if (!payload) {
    return false;
  }

  beaconWithFetchFallback(endpoints[initiative.id], payload);
  return true;
};

const sendFormData = (initiative, settings, data) => {
  const formData = prepareFormData(initiative, settings, data);
  if (!formData) {
    return false;
  }

  sendWithFetch(endpoints[initiative.id], formData, false);
  return true;
};

module.exports = { trackMetric, appendMetric, getMetricsCollected, sendMetrics, sendFormData };
