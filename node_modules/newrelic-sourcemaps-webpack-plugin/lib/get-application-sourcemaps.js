const { listSourcemaps } = require('@newrelic/publish-sourcemap');

module.exports = function getApplicationSourcemaps(options = {}) {
  const sourcemaps = new Map();

  if (!options.apiKey || !options.applicationId) {
    return Promise.resolve(sourcemaps);
  }

  return new Promise((resolve) => {
    listSourcemaps({
      limit: options.limit || 250,
      apiKey: options.apiKey,
      applicationId: options.applicationId,
    }, (err, res) => {
      if (err) {
        console.log(`Cannot fetch sourcemaps for applicationId ${options.applicationId}`);
        return resolve(sourcemaps);
      }

      if (Array.isArray(res.sourcemaps)) {
        res.sourcemaps.forEach((sourcemap) => {
          sourcemaps.set(sourcemap.javascriptUrl, { id: sourcemap.id, createdAt: sourcemap.createdAt });
        });
      }

      return resolve(sourcemaps);
    });
  });
};
