/**
 * Module dependencies
 */
const os = require('os');
const http = require('http');
const https = require('https');
const LRUCache = require('@meli/node-caches/LRU');
const { TransportRetryPolicy } = require('../src/policies');
const { version } = require('../package.json');

/**
 * hostname
 */
const hostname = os.hostname();

/**
 * Environment variables
 */
const { PLATFORM, SCOPE } = process.env;

/**
 * Default configuration
 * @see https://github.com/mzabriskie/axios#request-config
 */
module.exports = {
  baseURL: (PLATFORM === 'fury' && SCOPE) || /e-[0-9a-f]{8,}.*/.test(hostname)
    ? 'http://internal.mercadolibre.com'
    : 'https://internal-api.mercadolibre.com',
  method: 'get',
  timeout: 3000,
  responseType: 'json',
  maxRedirects: 0,
  httpAgent: new http.Agent({
    keepAlive: true,
    keepAliveMsecs: 1000,
    maxSockets: 100,
    maxFreeSockets: 50,
  }),
  httpsAgent: new https.Agent({
    keepAlive: true,
    keepAliveMsecs: 2000,
    maxSockets: 100,
    maxFreeSockets: 60,
  }),
  headers: {
    'user-agent': `restclient-node/${version}`,
    'accept-encoding': 'gzip',
  },
  retry: {
    maxRetries: 1,
    delay: 0,
    maxDelay: Infinity,
    factor: 1,
    policy: TransportRetryPolicy,
  },
  cache: {
    maxSize: 500,
    maxAge: Infinity,
    staleWhileRevalidate: 0,
  },
  eTagCache: {
    maxSize: 100,
  },
  cacheClient: options => new LRUCache(options),
};
