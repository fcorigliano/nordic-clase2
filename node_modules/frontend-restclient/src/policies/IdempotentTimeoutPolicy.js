const RetryPolicy = require('./RetryPolicy');

/**
* Implements the idempotent timeout policy. This policy retries in case of timeouts in idempotent methods.
* @extends RetryPolicy
*/
class IdempotentTimeoutPolicy extends RetryPolicy {
  static methods = [
    'get',
    'head',
    'options',
  ]

  static allowedErrors = [
    'ECONNABORTED',
    'ETIMEDOUT',
    'ESOCKETTIMEDOUT',
  ]

  /**
  * Define if the given error is valid candidate for retry
  * @summary If the requested method is one of the idempotent methods and the error also contain a timeout ocurrence, it will retry
  * @param {error} Object - The error object
  * @returns {boolean} Indicates if should retry or not
  */
  static hasToRetry({ code, config }) {
    return this.methods.includes(config.method.toLowerCase()) && this.allowedErrors.includes(code);
  }
}


module.exports = IdempotentTimeoutPolicy;
