/**
 * Module dependencies
 */
const { TEST } = require('frontend-env');
const statsdInternal = require('frontend-statsd/internal');

/**
 * Clones an object with keys to lowercase.
 */
function setKeysToLowerCase(obj) {
  const cloned = {};
  Object.keys(obj).forEach((key) => {
    cloned[key.toLowerCase()] = obj[key];
  });
  return cloned;
}

/**
 * Merges context headers and request headers into a new object.
 * If the request headers has defined a trace header send a metric to datadog.
 */
function mergeContextHeaders(context = {}, headers) {
  const normalizedHeaders = setKeysToLowerCase(headers);
  if (headers) {
    const traceHeaders = Object.entries(context);
    traceHeaders.forEach(([headerKey, headerValue]) => {
      if (normalizedHeaders[headerKey] && normalizedHeaders[headerKey] !== headerValue) {
        statsdInternal.increment('platform.traffic.forwarded_header.diff', 1, {
          stack: 'nordic-restclient',
          header: headerKey,
        });
      }
    });
  }
  return { ...context, ...normalizedHeaders };
}

/**
 * Expose mergeContextHeaders
 */
module.exports = mergeContextHeaders;

/**
 * Expose for testing
 */
if (TEST) {
  exports = module.exports;
  exports.setKeysToLowerCase = setKeysToLowerCase;
}
