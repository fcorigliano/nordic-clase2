const env = require('frontend-env');

const getRetryMetrics = (retryConfig) => {
  const headers = {
    'is-dummy-retry-strategy': !retryConfig || (retryConfig.factor !== 1 && retryConfig.factor !== 2),
    'x-retry-strategy-name': 'NoopRetryStrategy',
  };
  if (!retryConfig) return headers;

  if (retryConfig.factor === 1) {
    // Simple
    headers['x-retry-strategy-name'] = 'SimpleRetryStrategy';
    headers['retry-delay-param'] = retryConfig.delay;
  } else if (retryConfig.factor === 2) {
    // Exponential
    headers['x-retry-strategy-name'] = 'ExponentialBackoffRetryStrategy';
    headers['min-wait-time-param'] = retryConfig.delay;
    headers['max-wait-time-param'] = retryConfig.maxDelay;
  }

  headers['max-retries-param'] = retryConfig.maxRetries;
  return headers;
};

const getEndpointHeaders = (config = {}) => {
  const headers = {};
  headers['x-socket-timeout'] = config.timeout || 'undefined';

  const retryHeaders = getRetryMetrics(config.retry);

  Object.assign(headers, retryHeaders);
  return headers;
};

module.exports = getEndpointHeaders;

/**
 * For testing only
 */
if (env.TEST) {
  module.exports.getRetryMetrics = getRetryMetrics;
}
