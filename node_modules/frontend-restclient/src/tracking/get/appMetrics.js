const env = require('frontend-env');
const stackTrace = require('stack-trace');
const moduleName = require('../../../package.json').name;

const getPoolName = (func) => {
  /**
   * It'll give us an object containing information from where the RestClient was called
   */
  const trace = stackTrace.get(func);

  const callerTrace = trace.find((caller) => {
    if (!(caller && caller.getFileName && caller.getFileName())) {
      return false; // Sometimes getFileName() might return undefined
    }

    // We'll get the first call that wasn't from this exact same module, we're slicing the stacktrace
    return !(caller.getFileName().includes(`node_modules/${moduleName}`));
  });
  // Get paths from both functions in case getEvalOrigin doesn't work
  const evalOriginPath = callerTrace ? callerTrace.getEvalOrigin() : '';
  const fileNamePath = callerTrace ? callerTrace.getFileName() : '';

  // Fallback to getFileName in case we get undefined or falsy value on getEvalOrigin
  const relativeEvalOriginPath = evalOriginPath
    ? evalOriginPath.replace(env.PWD, '')
    : fileNamePath.replace(env.PWD, '');

  return relativeEvalOriginPath;
};

const getAppMetrics = () => ({
  'Application-Name': env.APPLICATION || moduleName || 'undefined',
  'Scope-Name': env.SCOPE || 'undefined',
  'Deploy-version': env.VERSION || 'undefined',
});

getAppMetrics.getPoolName = () => ({
  'X-Rest-Pool-Name': getPoolName(),
});

module.exports = getAppMetrics;
