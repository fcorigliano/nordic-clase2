/* eslint-disable security/detect-object-injection */
const React = require('react');
const PropTypes = require('prop-types');
const Logo = require('./logo');
const LogoAside = require('./logo-aside');
const UserMenu = require('./user-menu');
const HeaderLinks = require('./links');
const userMenuProps = require('./user-menu/props');
const Bounds = require('../bounds');

const className = 'fp-nav-header';

const Header = (props) => {
  const { children, siteId, logo, melilab, headerLinks, logoAsideText, isDesktop } = props;
  return (
    <header role="banner" data-siteid={siteId} className={className}>
      <Bounds>
        <Logo url={logo.url} label={logo.label} melilab={melilab} />
        { logoAsideText && <LogoAside text={logoAsideText} /> }
        {
          isDesktop
          && (
            <div className={`${className}__content`}>
              <UserMenu {...userMenuProps(props)} />
              <HeaderLinks links={headerLinks} />
              {children}
            </div>
          )
        }
      </Bounds>
    </header>
  );
};

Header.defaultProps = {
  user: null,
  type: 'full',
};

Header.propTypes = {
  headerLinks: PropTypes.arrayOf(PropTypes.shape({
    name: PropTypes.string.isRequired,
    link: PropTypes.string.isRequired,
  })).isRequired,
  logoAsideText: PropTypes.string.isRequired,
  siteId: PropTypes.string.isRequired,
  logo: PropTypes.shape({
    url: PropTypes.string.isRequired,
    label: PropTypes.string.isRequired,
  }).isRequired,
  melilab: PropTypes.shape({
    isEnabled: PropTypes.bool,
  }).isRequired,
  isDesktop: PropTypes.bool.isRequired,
  isLoggedIn: PropTypes.bool.isRequired,
  type: PropTypes.string,
};

module.exports = Header;
