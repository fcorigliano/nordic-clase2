const script = require('./user-menu');

describe('FP Navigation', () => {
  describe('User Menu Script', () => {
    beforeEach(() => {
      global.document = {};
      global.location = { reload: jest.fn() };
    });

    it('should open the menu', () => {
      let i = 0;
      const menu = { style: { display: 'none' } };
      const button = 'button';
      const event = { target: button };
      const elements = [
        { addEventListener: jest.fn((type, listener) => { listener(event); }),
          button,
          contains: jest.fn((target) => { if (elements[0][target]) { return true; } return false; }),
        },
        menu,
      ];
      const document = {
        querySelector: jest.fn(() => {
          const element = elements[i];
          i += 1;
          return element;
        }),
        addEventListener: jest.fn((type, listener) => { listener(event); }),
        removeEventListener: jest.fn(),
      };
      global.document = document;
      script();
      expect(menu.style.display).toBe('block');
    });

    it('should close the menu', () => {
      let i = 0;
      const menu = { style: { display: 'block' } };
      const button = 'button';
      const event = { target: button };
      const elements = [
        { addEventListener: jest.fn((type, listener) => { listener(event); }),
          contains: jest.fn((target) => { if (elements[0][target]) { return true; } return false; }),
        },
        menu,
      ];
      const document = {
        querySelector: jest.fn(() => {
          const element = elements[i];
          i += 1;
          return element;
        }),
        addEventListener: jest.fn((type, listener) => { listener(event); }),
        removeEventListener: jest.fn(),
      };
      global.document = document;
      script();
      expect(menu.style.display).toBe('none');
    });
  });
});
