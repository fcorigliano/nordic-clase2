const React = require('react');
const {
  DESKTOP,
  MOBILE,
} = require('@frontend-navigations/commons/constants/device-types');
const ShallowRenderer = require('react-test-renderer/shallow');
const Css = require('.');

const defaultProps = {
  platformId: 'ML',
  siteId: 'MLA',
  navigationType: 'full',
  firstRequestInlineStyles: false,
  deviceType: MOBILE,
  cdn: {
    link: 'https://some-cdn-link.com',
  },
};

describe('First Party Navigation', () => {
  describe('Css component', () => {
    it('should match snapshot with non-internal navigation type and mobile device', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Css {...defaultProps} />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
    });

    it('should match snapshot with non-internal navigation type and desktop device', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Css
          {...defaultProps}
          deviceType={DESKTOP}
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
    });

    it('should match snapshot with unknown device', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Css
          {...defaultProps}
          deviceType="unknown-device-type"
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
    });

    it('should match snapshot with firstRequestInlineStyles configuration', () => {
      const renderer = new ShallowRenderer();
      const component = (
        <Css
          {...defaultProps}
          firstRequestInlineStyles
        />
      );

      const renderedComponent = renderer.render(component);

      expect(renderedComponent).toMatchSnapshot();
    });
  });
});
