(function (win) {
  function Messages() {
    this.callbacks = {};
    return this;
  }

  Messages.settings = {
    $message: '#mlMsg',
    $remove: '#mlMsgRemove'
  };

  Messages.prototype.init = function (config) {
    var settings = {
      hash: config.hash,
      url: config.url,
      $message: config.$message || Messages.settings.$message,
      $remove: config.$remove || Messages.settings.$remove
    };

    if (win.location.hash.indexOf(settings.hash) === 0) {
      var script = document.createElement('script');
      var callbackFunction;
      if (config.callback) {
        callbackFunction = config.callback;
      } else {
        callbackFunction = this.createJsonPCallback(settings);
      }
      script.src = settings.url + '?callback=' + callbackFunction;
      document.head.appendChild(script);
    }

    return this;
  };

  Messages.prototype.createJsonPCallback = function (settings) {
    var timestamp = +new Date();
    this.callbacks[timestamp] = function (json) {
      var targetContainer = document.querySelector('main') || document.body;
      targetContainer.insertAdjacentHTML('afterbegin', json.content);
      var removeEl = document.querySelector(settings.$remove);
      if (removeEl) {
        removeEl.addEventListener('click', function () {
          document.querySelector(settings.$message).remove();
        });
      }
    };
    var busName = window.freya ? 'freya' : 'meli';
    return busName + '.messages.callbacks[' + timestamp.toString() + ']';
  };

  if (window.freya) {
    window.freya.messages = new Messages();
  } else if (window.meli) {
    window.meli.messages = new Messages();
  }
}(window));
