const { PRODUCTION, TEST } = require('frontend-env');
const { RestClient, buildContext } = require('frontend-restclient');
const { CLIENT_UA } = require('../constants');
const { createLoggerInterceptor, requestHook } = require('../metrics');

/**
 * @typedef {Object} UserResponse
 * @property {number} id
 * @property {string} nickname
 * @property {string[]} tags
 * @property {string[]} internal_tags
 * @property {string} site_id
 * @property {Object} status
 * @property {string} status.site_status
 * @property {Object} context
 * @property {string} context.flow_id
 */

const restClient = RestClient({
  requestHook,
  timeout: PRODUCTION || TEST ? 300 : 10000,
  headers: { 'user-agent': CLIENT_UA },
});
restClient.client.interceptors.response.use(...createLoggerInterceptor({ operation: 'GET_USER' }));

/**
 * Get the user's details from API
 *
 * @param {number} userId
 * @param {import('express').Request} req
 * @returns {Promise<UserResponse>}
 */
exports.getUser = (userId, req) => restClient
  .get(`/users/${userId}`, {
    context: buildContext(req),
    params: {
      'caller.id': userId,
      api_version: 2,
    },
  })
  .then(res => res.data);
