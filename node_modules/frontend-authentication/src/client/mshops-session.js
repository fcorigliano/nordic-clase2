const { PRODUCTION, TEST } = require('frontend-env');
const { RestClient, buildContext } = require('frontend-restclient');
const { CLIENT_UA, MSHOPS_SESSION_HEADER, MSHOPS_SHOP_ID_HEADER } = require('../constants');
const { createLoggerInterceptor, requestHook } = require('../metrics');

const restClient = RestClient({
  requestHook,
  timeout: PRODUCTION || TEST ? 300 : 10000,
  headers: { 'user-agent': CLIENT_UA },
});

/**
 * Get Mshops session from API
 *
 * @param {Object} params
 * @param {import('express').Request} params.req Request
 * @param {number} params.shopId Shop ID
 * @param {string} params.session Mshops session
 *
 * @returns {Promise<import('../../types').MShopsSession>}
 */
exports.fetchSession = ({ req, shopId, session }) => {
  const interceptor = restClient.client.interceptors.response
    .use(...createLoggerInterceptor({ shopId, operation: 'GET_MSHOPS' }));

  return restClient.get('/auth/web_sessions/mshops', {
    context: buildContext(req),
    headers: {
      [MSHOPS_SESSION_HEADER]: session,
      [MSHOPS_SHOP_ID_HEADER]: shopId,
    },
  })
    .then(res => res.data)
    .finally(() => {
      restClient.client.interceptors.response.eject(interceptor);
    });
};
