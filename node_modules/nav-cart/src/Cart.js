/* global WIDGET_PATH  API_URI_GET API_URI_POST CDN_DOMAIN */
const React = require('react');
const Script = require('frontend-script');
const PropTypes = require('prop-types');

const translations = {
  es: {
    cartTextSingle: '{0} producto en tu carrito',
    cartTextMultiple: '{0} productos en tu carrito',
  },
  pt: {
    cartTextSingle: '{0} produto em seu carrinho',
    cartTextMultiple: '{0} produtos em seu carrinho',
  },
};

const getTextCart = (quantity, locale) => {
  let text = translations[locale].cartTextMultiple;
  if (quantity === 1) {
    text = translations[locale].cartTextSingle;
  }

  return text.replace('{0}', quantity);
};

const Cart = ({ data, cdnDomain, locale, url, title, tabIndex, isMobile }) => {
  let cartClassName = 'nav-cart';
  let badge_icon = {};
  if (Object.prototype.hasOwnProperty.call(data, 'quantity')) {
    badge_icon = data;
  } else {
    badge_icon = data.badge_icon;
  }

  cartClassName += badge_icon.quantity > 0 ? ' nav-cart-full' : ' nav-cart-empty';
  const domain = typeof cdnDomain !== 'undefined' ? cdnDomain : CDN_DOMAIN;
  const jsPath = `${domain}${WIDGET_PATH}.js`;
  const cartText = getTextCart(badge_icon.quantity, locale);

  let href = url;
  if (data.target && data.target.flow_type) {
    href += `?flow_type=${data.target.flow_type}`;
  }

  return (
    <a
      href={href}
      title={title}
      aria-label={cartText}
      className={cartClassName}
      id="nav-cart"
      tabIndex={tabIndex}
    >
      <i className="nav-icon-cart" />
      <span className="nav-icon-cart-quantity">{badge_icon.label}</span>

      <Script>
        {`
          if (window.Cart) {
            new window.Cart({
              trigger: document.getElementById('nav-cart'),
              isHover: true,
              ${isMobile ? `isMobile: ${isMobile},` : 'small: true,'}
              carts: ${JSON.stringify(data.carts)},
              baseUrl: '${url}',
              bus: freya,
            });
          }
        `}
      </Script>
      <Script src={jsPath}>
        {`
          if (window.CartWidget) {
            new window.CartWidget({
              element: document.getElementById('nav-cart'),
              endpoints: {
                get: '${url}${API_URI_GET}',
                post: '${url}${API_URI_POST}',
              },
              link: '${url}',
              isMobile: ${isMobile},
              bus: freya,
              locale: '${locale}',
            });
          }
        `}
      </Script>
    </a>
  );
};

Cart.propTypes = {
  data: PropTypes.shape({
    badge_icon: PropTypes.shape({
      quantity: PropTypes.number,
      label: PropTypes.string,
    }),
    carts: PropTypes.array,
    target: PropTypes.shape({
      flow_type: PropTypes.string,
    }),
  }).isRequired,
  url: PropTypes.string.isRequired,
  isMobile: PropTypes.bool.isRequired,
  title: PropTypes.string,
  locale: PropTypes.string,
  cdnDomain: PropTypes.string,
  tabIndex: PropTypes.number,
};

Cart.defaultProps = {
  title: 'Carrito',
  locale: 'es',
  cdnDomain: undefined,
  tabIndex: undefined,
};

module.exports = Cart;
