const {
  scriptOrStyleExtensionsRegex,
  endsWithStylesRegex,
  fileToRouteRegex,
  fileIndexToRouteRegex,
  endsWithStylesDeviceRegex,
} = require('../regExs');

/**
 * Normalize the client file name for a page
 * When normalizing:
 * - File extensions are removed (Example: .js, .scss, .ts)
 * - 'styles' name is replaced by 'index'
 * - Slashes are replaced by dashes ( '/' => '-' )
 * - Brackets are removed ('[]')
 * @param {string} client - Non-normalized client file name
 * @returns {string} Normalized client file name
 *
 * @examples
 * normalizeClientName('item/[id]/styles.scss') returns 'item-id-index'
 */
function normalizeClientName(client) {
  let clientName = client.replace(scriptOrStyleExtensionsRegex, '');

  // eslint-disable-next-line no-useless-escape
  clientName = clientName.replace(endsWithStylesRegex, '/index');
  clientName = clientName.replace(endsWithStylesDeviceRegex, '/index.');
  clientName = clientName.replace(/\//g, '-').replace(/\[|\]/g, '');

  return clientName;
}

/**
   * Normalize the page Express route
   * When normalizing:
   * - Open bracket is replaced by colon ( '[' => ':' )
   * - Close bracket is removed ( ']' )
   * - 'index' and 'styles' begin ocurrences are removed
   * - '.hooks.server' and file extensions ocurrences (Example: .js, .scss, .ts) are removed
   * - Device type ocurrences (Example: .desktop, .mobile) are removed
   * - '/styles' and '/index' file names are replaced by slash ( ('/styles' | '/index') => '/' )
   * @param {string} pageFile - Non-normalized page file path
   * @returns {string} Normalized page Express route
   *
   * @examples
   * normalizeRoute('item/[id]/styles.scss') returns 'item/:id/'
   */
function normalizeRoute(pageFile) {
  let newFile = pageFile.replace(/\[/g, ':');

  newFile = newFile.replace(/\]/g, '');
  newFile = `/${newFile.replace(fileToRouteRegex, '')}`;

  return newFile.replace(fileIndexToRouteRegex, '');
}

/**
   * Normalize the http error status code
   * When normalizing:
   * - File extensions ocurrences (Example: .js, .scss, .ts) are removed
   * - Device type ocurrences (Example: .desktop, .mobile) are removed
   * - '/styles' and '/index' file names are removed
   * - Transforms final result to int
   * @param {string} httpErrorPath - Non-normalized http error file path
   * @returns {string} Normalized http error status code
   *
   * @examples
   * normalizeStatusCode('404/index.mobile.scss') returns 404
   */
function normalizeStatusCode(httpErrorPath) {
  let newHttpErrorPath = httpErrorPath.replace(fileToRouteRegex, '');

  newHttpErrorPath = newHttpErrorPath.replace(fileIndexToRouteRegex, '');

  return parseInt(newHttpErrorPath, 10);
}

module.exports = {
  normalizeClientName,
  normalizeRoute,
  normalizeStatusCode,
};
exports = module.exports;
