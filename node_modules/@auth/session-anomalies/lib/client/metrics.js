"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logAPICallToDatadog = void 0;
const frontend_env_1 = require("frontend-env");
const constants_1 = require("../constants");
const statsd = require("frontend-statsd/internal"); // eslint-disable-line import/order
const baseTags = {
    application: frontend_env_1.APPLICATION || process.env.npm_package_name,
    scope: frontend_env_1.SCOPE || 'unknown',
    test_scope: frontend_env_1.FURY_IS_TEST_SCOPE || 'unknown',
    sdk_version: constants_1.PACKAGE_VERSION,
};
const ROTOK_REQ_METRIC = 'auth.rotok.client.request.time';
const logAPICallToDatadog = ({ startTime, currentTimeout, error }) => {
    const elapsedTime = Date.now() - startTime;
    const tags = {
        ...baseTags,
        timeout_time: currentTimeout.toString(),
        error: String(!!error),
    };
    if (error) {
        const errorCode = error.response?.status?.toString();
        tags.error_code = errorCode || 'transport_error'; // If response has no status, then a transport error ocurred (timeout)
    }
    statsd.histogram(ROTOK_REQ_METRIC, elapsedTime, tags);
};
exports.logAPICallToDatadog = logAPICallToDatadog;
