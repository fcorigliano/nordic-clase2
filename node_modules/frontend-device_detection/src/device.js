/**
 * Module dependencies
 */

const uaParser = require('ua-parser-js');
const { getPlatform } = require('frontend-platform_detection');
const defineType = require('./type');
const defineLowEnd = require('./low-end');
const defineWebViewData = require('./web-view');
const defineOS = require('./os');
const definePciCompliance = require('./pci-compliant');
const defineUserAgent = require('./browser');
const defineAppCapable = require('./app-capable');

/**
 * Expose device
 * Uses headers, user agent and cookies to find specific data of the user's device.
 * @see mercadolibre/frontend-rules/subdomains/frontend.conf
 * @returns
 * {
 *   type, // String
 *   mobile, // Boolean
 *   tablet, // Boolean
 *   desktop, // Boolean
 *   originalType, // String
 *   forced, // Boolean
 *   lowEnd, // Boolean
 *   webView, // Boolean
 *   nativeWebview, // Boolean
 *   webviewUserAgent // Object
 *   osName, // String
 *   osVersion, // String
 *   appCapable, // Boolean
 * }
 */
module.exports = ({ headers, cookies, hostname }) => {
  const agent = uaParser(headers['user-agent']);
  const platform = getPlatform(hostname);

  const type = defineType(headers, cookies);
  const lowEnd = defineLowEnd(headers, cookies);
  const { webView, nativeApp, nativeWebview } = defineWebViewData(headers['user-agent'], headers['x-webkit-landing']);
  const webviewUserAgent = nativeWebview ? defineUserAgent(headers, lowEnd, 'x-webview-user-agent') : {};
  const os = defineOS(agent);
  const pciCompliant = definePciCompliance(headers);
  const appCapable = defineAppCapable(agent, platform);

  return { ...type,
    lowEnd,
    webView,
    pciCompliant,
    nativeApp,
    nativeWebview,
    webviewUserAgent,
    appCapable,
    ...os };
};
